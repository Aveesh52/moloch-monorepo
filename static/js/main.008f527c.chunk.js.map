{"version":3,"sources":["assets/bull.png","components/Background.js","helpers/graphQlQueries.js","web3.js","components/Header.js","components/Wrapper.js","helpers/currency.js","components/Home.js","components/ProgressBar.js","helpers/proposals.js","components/ProposalDetail.js","components/ProposalList.js","components/MemberDetail.js","components/MemberList.js","components/ProposalSubmission.js","resolvers.js","schema.js","App.js","index.js","assets/hood.png"],"names":["module","exports","__webpack_require__","p","Background","react_default","a","createElement","id","className","gql","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","moloch","token","medianizer","eth","GET_METADATA","_templateObject6","GET_MEMBER_DETAIL","_templateObject7","GET_MEMBER_DETAIL_WITH_VOTES","_templateObject8","GET_MEMBERS","_templateObject9","GET_PROPOSALS","_templateObject10","GET_PROPOSAL_LIST","_templateObject11","GET_PROPOSAL_DETAIL","_templateObject12","_templateObject13","_templateObject14","molochAbi","require","erc20Abi","medianizerAbi","initMetamask","_initMetamask","apply","this","arguments","_callee","web3Provider","regenerator_default","wrap","_context","prev","next","window","ethereum","web3","alert","enable","currentProvider","ethers","providers","Web3Provider","localStorage","setItem","t0","abrupt","stop","initGnosisSafe","provider","SafeProvider","rpcUrl","process","getEthSigner","_getEthSigner","_callee2","_context2","getItem","sent","Error","initMoloch","_x","_initMoloch","_callee3","loggedInUser","_context3","Contract","getSigner","getDefaultProvider","initToken","_x2","_initToken","_callee4","_context4","initMedianizer","_initMedianizer","_callee5","_context5","getMoloch","_x3","_getMoloch","_callee6","_context6","getToken","_x4","_getToken","_callee7","_context7","getMedianizer","_getMedianizer","_callee8","_context8","MainMenuWrapped","withApollo","props","member","isActive","Fragment","Dropdown","Item","onClick","_handleCloseDropdown","react_router_dom","to","concat","Icon","name","Divider","icon","content","_handleOpenDropdown","onLoadChangeDelegateKey","onLoadWithdrawLootToken","Object","asyncToGenerator","mark","client","resetStore","populateData","ChangeDelegateKeyMenu","state","newDelegateKey","submitChangeDelegateKey","tx","_this","console","log","updateDelegateKey","_this2","onLoadMain","Form","Input","placeholder","onChange","event","setState","target","value","Button","React","Component","WithdrawLootTokenMenu","ragequitAmount","submitRagequit","_this3","ragequit","_this4","Header","visibleMenu","visibleRightMenu","logIn","method","coinbase","_this5","listAccounts","writeData","data","toLowerCase","topRightMenuContent","_this6","Header_ChangeDelegateKeyMenu","Header_WithdrawLootTokenMenu","_this7","react_apollo_esm","query","variables","address","_ref5","loading","error","Grid","columns","verticalAlign","Column","textAlign","open","onBlur","onFocus","text","substring","Menu","direction","getTopRightMenuContent","Wrapper","_ref","children","currencyFormatter","Intl","NumberFormat","style","currency","minimumFractionDigits","convertWeiToDollars","weiAmount","exchangeRate","weitoEth","utils","formatEther","exchWeiToEth","format","parseFloat","Composed","adopt","members","render","proposals","_ref2","metadata","_ref3","NumMembers","_ref4","size","color","length","NumProposals","HomePage","approval","userAddress","handleChange","e","handleSubmit","_this$state","approve","_ref6","Segment","_metadata$data","guildBankValue","totalShares","shareValue","mobile","tablet","computer","Statistic","inverted","label","Home_NumMembers","Home_NumProposals","Modal","basic","trigger","Content","onSubmit","Field","type","width","ProgressBar","yes","no","total","percentYes","Math","round","percentNo","position","Progress","percent","top","floated","PERIOD_DURATION","ProposalStatus","Unknown","InQueue","VotingPeriod","GracePeriod","Aborted","Passed","Failed","ReadyForProcessing","periodsToTime","periods","seconds","days","floor","hours","minutes","string","getProposalCountdownText","proposal","status","votingStarts","votingEnds","gracePeriod","inQueue","currentPeriod","startingPeriod","inGracePeriod","inVotingPeriod","passedVotingAndGrace","Vote","Null","Yes","No","MemberAvatar","title","Image","src","hood","centered","proposalDetail","ProposalDetail","tokenTribute","sharesRequested","votingEnded","graceEnded","yesVotes","noVotes","votes","user","shares","handleNo","submitVote","proposalIndex","userHasVoted","handleYes","handleProcess","processProposal","ProposalDetail_Composed","match","params","_ref8","yesShares","reduce","totalVotes","vote","uintVote","parseInt","noShares","find","m","delegateKey","cannotVote","description","Row","bigNumberify","mul","toString","vertical","map","idx","ProposalDetail_MemberAvatar","key","components_ProgressBar","disabled","ProposalCard","pathname","proposalsResult","ProposalList","ProposalList_Composed","sortProposals","b","filter","sort","votingPeriod","readyForProcessing","completed","panes","menuItem","Tab","Pane","attached","index","ProposalList_ProposalCard","menu","secondary","pointing","ProposalListView","react_router","exact","path","ProposalList_ProposalList","assign","ProposalDetail_ProposalDetail","memberDetail","MemberDetail","bull","fontSize","Label","circular","empty","Date","timestamp","toISOString","slice","elements_Header_Header","as","MemberDetailView","MemberDetail_Composed","MemberDetail_MemberDetail","MemberDetail_ProposalDetail","LoggedInUser","GET_ELDERS","MemberList_templateObject","Elders","elder","MemberList_MemberAvatar","GET_NON_ELDERS","MemberList_templateObject2","Contributors","contributor","MemberList","MemberList_LoggedInUser","paddingLeft","MemberList_Elders","MemberList_Contributors","MemberListView","higherProps","MemberList_MemberList","components_MemberDetail","ProposalSubmission","tribute","fieldValidationErrors","assets","titleValid","descriptionValid","tributeValid","sharesValid","addressValid","formValid","validateField","fieldName","isHexString","validateForm","_this$state2","handleInput","defineProperty","_this$state3","submitProposal","JSON","stringify","_this$state4","stretched","transparent","fluid","TextArea","rows","GridColumn","resolvers","Proposal","_args","aborted","processed","didPass","determineProposalStatus","cache","readQuery","parse","details","Mutation","setAttributes","_","fragment","resolvers_templateObject","readFragment","objectSpread","typeDefs","schema_templateObject","InMemoryCache","ApolloClient","link","HttpLink","uri","initialData","onResetStore","IS_LOGGED_IN","App_templateObject","loggedInUserData","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","restored","refetch","compute","getCurrentPeriod","balanceOf","ethPerShare","gt","toNumber","parseEther","dataToWrite","basename","App_Composed","Header_Header","Home_HomePage","components_ProposalList","components_MemberList","ProposalSubmission_ProposalSubmission","component","ReactDOM","src_App","document","getElementById"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+8XCGzBC,EAAA,kBACbC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,cACNH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,+3JCJcC,IAAHC,KAMED,IAAHE,KAMOF,IAAHG,KAMFH,IAAHI,KAMMJ,IAAHK,KAxBxB,ICKHC,EACAC,EACAC,EACAC,EDsBSC,EAAeV,IAAHW,KAUZC,EAAoBZ,IAAHa,KAYjBC,EAA+Bd,IAAHe,KAmC5BC,EAAchB,IAAHiB,KAaXC,EAAgBlB,IAAHmB,KAQbC,EAAoBpB,IAAHqB,KA+DjBC,GA9BuBtB,IAAHuB,KA8BEvB,IAAHwB,SAkCOxB,IAAHyB,sBC5M9BC,GAAYC,EAAQ,KACpBC,GAAWD,EAAQ,KACnBE,GAAgBF,EAAQ,KAOvB,SAAeG,KAAtB,OAAAC,GAAAC,MAAAC,KAAAC,wDAAO,SAAAC,IAAA,IAAAC,EAAA,OAAAC,EAAAzC,EAAA0C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACAC,OAAOC,UAAaD,OAAOE,MAE9BC,MAAM,uBAEJH,OAAOC,SALN,CAAAJ,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAQKC,OAAOC,SAASG,SARrB,OASGV,EAAeM,OAAM,UAAgBA,OAAOE,KAAKG,gBACrDtC,EAAM,IAAIuC,UAAOC,UAAUC,aAAad,GACxCe,aAAaC,QAAQ,YAAa,YAXjCb,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAc,GAAAd,EAAA,SAaDM,MAAM,iCAbL,eAAAN,EAAAe,OAAA,SAgBE7C,GAhBF,yBAAA8B,EAAAgB,SAAApB,EAAA,yCAmBA,SAASqB,KAId,IAAMC,EAAW,IAAIC,IAAa,CAEhCC,OAAQC,mDAQV,OAFAnD,EAAM,IAAIuC,UAAOC,UAAUC,aAAaO,GACxCN,aAAaC,QAAQ,YAAa,UAC3B3C,EAGF,SAAeoD,KAAtB,OAAAC,GAAA9B,MAAAC,KAAAC,wDAAO,SAAA6B,IAAA,OAAA1B,EAAAzC,EAAA0C,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,UACAhC,EADA,CAAAuD,EAAAvB,KAAA,YAEuC,aAAtCU,aAAac,QAAQ,aAFtB,CAAAD,EAAAvB,KAAA,eAAAuB,EAAAvB,KAAA,EAGWX,KAHX,OAGDrB,EAHCuD,EAAAE,KAAAF,EAAAvB,KAAA,mBAI8C,WAAtCU,aAAac,QAAQ,aAJ7B,CAAAD,EAAAvB,KAAA,gBAAAuB,EAAAvB,KAAA,GAKWe,KALX,QAKD/C,EALCuD,EAAAE,KAAAF,EAAAvB,KAAA,uBAOK,IAAI0B,MAAM,4BAPf,eAAAH,EAAAV,OAAA,SAUE7C,GAVF,yBAAAuD,EAAAT,SAAAQ,6BAaA,SAAeK,GAAtBC,GAAA,OAAAC,GAAAtC,MAAAC,KAAAC,wDAAO,SAAAqC,EAA0BC,GAA1B,IAAAf,EAAA,OAAApB,EAAAzC,EAAA0C,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,WACD+B,EADC,CAAAC,EAAAhC,KAAA,eAAAgC,EAAAhC,KAAA,EAESoB,KAFT,OAEHpD,EAFGgE,EAAAP,KAGH5D,EAAS,IAAI0C,UAAO0B,SAASd,6CAAsClC,GAAWjB,EAAIkE,aAH/EF,EAAAhC,KAAA,eAKGgB,EAAWT,UAAO4B,qBACxBtE,EAAS,IAAI0C,UAAO0B,SAASd,6CAAsClC,GAAW+B,GAN3E,cAAAgB,EAAAnB,OAAA,SAQEhD,GARF,yBAAAmE,EAAAlB,SAAAgB,6BAWA,SAAeM,GAAtBC,GAAA,OAAAC,GAAA/C,MAAAC,KAAAC,wDAAO,SAAA8C,EAAyBR,GAAzB,IAAAf,EAAA,OAAApB,EAAAzC,EAAA0C,KAAA,SAAA2C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAxC,MAAA,WACD+B,EADC,CAAAS,EAAAxC,KAAA,eAAAwC,EAAAxC,KAAA,EAESoB,KAFT,OAEHpD,EAFGwE,EAAAf,KAGH3D,EAAQ,IAAIyC,UAAO0B,SAASd,6CAAqChC,GAAUnB,EAAIkE,aAH5EM,EAAAxC,KAAA,eAKGgB,EAAWT,UAAO4B,qBACxBrE,EAAQ,IAAIyC,UAAO0B,SAASd,6CAAqChC,GAAU6B,GANxE,cAAAwB,EAAA3B,OAAA,SASE/C,GATF,yBAAA0E,EAAA1B,SAAAyB,6BAYA,SAAeE,KAAtB,OAAAC,GAAAnD,MAAAC,KAAAC,wDAAO,SAAAkD,IAAA,IAAA3B,EAAA,OAAApB,EAAAzC,EAAA0C,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,cAEDgB,EAAWT,UAAO4B,qBACtBpE,EAAa,IAAIwC,UAAO0B,SAASd,6CAA0C/B,GAAe4B,GAHrF4B,EAAA/B,OAAA,SAIE9C,GAJF,wBAAA6E,EAAA9B,SAAA6B,6BAOA,SAAeE,GAAtBC,GAAA,OAAAC,GAAAxD,MAAAC,KAAAC,wDAAO,SAAAuD,EAAyBjB,GAAzB,OAAAnC,EAAAzC,EAAA0C,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,cAAAiD,EAAAjD,KAAA,EACC2B,GAAWI,GADZ,cAAAkB,EAAApC,OAAA,SAEEhD,GAFF,wBAAAoF,EAAAnC,SAAAkC,6BAKA,SAAeE,GAAtBC,GAAA,OAAAC,GAAA7D,MAAAC,KAAAC,wDAAO,SAAA4D,EAAwBtB,GAAxB,OAAAnC,EAAAzC,EAAA0C,KAAA,SAAAyD,GAAA,cAAAA,EAAAvD,KAAAuD,EAAAtD,MAAA,cAAAsD,EAAAtD,KAAA,EACCoC,GAAUL,GADX,cAAAuB,EAAAzC,OAAA,SAEE/C,GAFF,wBAAAwF,EAAAxC,SAAAuC,6BAKA,SAAeE,KAAtB,OAAAC,GAAAjE,MAAAC,KAAAC,wDAAO,SAAAgE,IAAA,OAAA7D,EAAAzC,EAAA0C,KAAA,SAAA6D,GAAA,cAAAA,EAAA3D,KAAA2D,EAAA1D,MAAA,UACAjC,EADA,CAAA2F,EAAA1D,KAAA,eAAA0D,EAAA1D,KAAA,EAEGyC,KAFH,cAAAiB,EAAA7C,OAAA,SAIE9C,GAJF,wBAAA2F,EAAA5C,SAAA2C,6BC9FP,IAsDME,GAAkBC,YAtDP,SAAAC,GAAK,OACpB3G,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACZuG,EAAMC,QAAUD,EAAMC,OAAOC,SAC5B7G,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6G,SAAA,KACE9G,EAAAC,EAAAC,cAAC6G,EAAA,EAASC,KAAV,CAAe5G,UAAU,OAAO6G,QAAS,kBAAMN,EAAMO,yBACnDlH,EAAAC,EAAAC,cAACiH,EAAA,EAAD,CAAMC,GAAE,YAAAC,OAAcV,EAAMC,OAAOzG,IAAMC,UAAU,QACjDJ,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAMC,KAAK,SADb,kBAMJvH,EAAAC,EAAAC,cAAC6G,EAAA,EAASS,QAAV,MACAxH,EAAAC,EAAAC,cAAC6G,EAAA,EAASC,KAAV,CACES,KAAK,MACLrH,UAAU,OACVsH,QAAQ,sBACRT,QAAS,WACPN,EAAMgB,sBACNhB,EAAMiB,6BAGV5H,EAAAC,EAAAC,cAAC6G,EAAA,EAASS,QAAV,MACAxH,EAAAC,EAAAC,cAAC6G,EAAA,EAASC,KAAV,CACES,KAAK,SACLrH,UAAU,OACVsH,QAAQ,WACRT,QAAS,WACPN,EAAMgB,sBACNhB,EAAMkB,6BAGV7H,EAAAC,EAAAC,cAAC6G,EAAA,EAASS,QAAV,OAEA,KACJxH,EAAAC,EAAAC,cAAC6G,EAAA,EAASC,KAAV,CAAe5G,UAAU,QACvBJ,EAAAC,EAAAC,cAACiH,EAAA,EAAD,CACEC,GAAG,SACHhH,UAAU,OACV6G,QAAOa,OAAAC,EAAA,EAAAD,CAAApF,EAAAzC,EAAA+H,KAAE,SAAAxF,IAAA,OAAAE,EAAAzC,EAAA0C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACP6D,EAAMO,uBACNnE,OAAOS,aAAaC,QAAQ,eAAgB,IAFrCb,EAAAE,KAAA,EAGD6D,EAAMsB,OAAOC,aAHZ,cAAAtF,EAAAE,KAAA,EAID6D,EAAMwB,cAAa,GAJlB,wBAAAvF,EAAAgB,SAAApB,OAOTxC,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAMC,KAAK,cADb,iBAUFa,8MACJC,MAAQ,CACNC,eAAgB,MAGlBC,6CAA0B,SAAAnE,IAAA,IAAAkE,EAAA3H,EAAA6H,EAAA,OAAA9F,EAAAzC,EAAA0C,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAChBwF,EAAmBG,EAAKJ,MAAxBC,eACA3H,EAAW8H,EAAK9B,MAAhBhG,OAER+H,QAAQC,IAAR,oCAAAtB,OAAgDiB,EAAhD,MAJwBjE,EAAAvB,KAAA,EAMPnC,EAAOiI,kBAAkBN,GANlB,OAMlBE,EANkBnE,EAAAE,KAOxBmE,QAAQC,IAAI,OAAQH,GAPI,wBAAAnE,EAAAT,SAAAQ,8EAUjB,IAAAyE,EAAAvG,KACCgG,EAAmBhG,KAAK+F,MAAxBC,eACAQ,EAAexG,KAAKqE,MAApBmC,WACR,OACE9I,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6G,EAAA,EAASC,KAAV,CAAeS,KAAK,aAAarH,UAAU,OAAOsH,QAAQ,eAAeT,QAAS,kBAAM6B,OACxF9I,EAAAC,EAAAC,cAAC6G,EAAA,EAASS,QAAV,MACAxH,EAAAC,EAAAC,cAAC6G,EAAA,EAASC,KAAV,CAAe5G,UAAU,gBACvBJ,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAMC,KAAK,QADb,uBAIAvH,EAAAC,EAAAC,cAAC6I,EAAA,EAAKC,MAAN,CAAYC,YAAY,wBAAwBC,SAAU,SAAAC,GAAK,OAAIN,EAAKO,SAAS,CAAEd,eAAgBa,EAAME,OAAOC,SAAUA,MAAOhB,IACjItI,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CAAQtC,QAAS3E,KAAKiG,yBAAtB,iBA5B0BiB,IAAMC,WAmCpCC,8MACJrB,MAAQ,CACNsB,eAAgB,MAGlBC,oCAAiB,SAAAhF,IAAA,IAAA+E,EAAAhJ,EAAA6H,EAAA,OAAA9F,EAAAzC,EAAA0C,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cACP6G,EAAmBE,EAAKxB,MAAxBsB,eACAhJ,EAAWkJ,EAAKlD,MAAhBhG,OAER+H,QAAQC,IAAR,2BAAAtB,OAAuCsC,EAAvC,MAJe7E,EAAAhC,KAAA,EAMEnC,EAAOmJ,SAASH,GANlB,OAMTnB,EANS1D,EAAAP,KAOfmE,QAAQC,IAAI,OAAQH,GAPL,wBAAA1D,EAAAlB,SAAAgB,8EAUR,IAAAmF,EAAAzH,KACCqH,EAAmBrH,KAAK+F,MAAxBsB,eACAb,EAAexG,KAAKqE,MAApBmC,WACR,OACE9I,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6G,EAAA,EAASC,KAAV,CAAeS,KAAK,aAAarH,UAAU,OAAOsH,QAAQ,eAAeT,QAAS,kBAAM6B,OACxF9I,EAAAC,EAAAC,cAAC6G,EAAA,EAASS,QAAV,MACAxH,EAAAC,EAAAC,cAAC6G,EAAA,EAASC,KAAV,CAAe5G,UAAU,gBACvBJ,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAMC,KAAK,WADb,YAIAvH,EAAAC,EAAAC,cAAC6I,EAAA,EAAKC,MAAN,CACEC,YAAY,mBACZC,SAAU,SAAAC,GAAK,OAAIY,EAAKX,SAAS,CAAEO,eAAgBR,EAAME,OAAOC,SAChEA,MAAOK,IAET3J,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CAAQtC,QAAS3E,KAAKsH,gBAAtB,qBAhC0BJ,IAAMC,WAuCrBO,8MACnB3B,MAAQ,CACN4B,YAAa,OACbC,kBAAkB,EAClBvJ,OAAQ,MAiBVwJ,4CAAQ,SAAA9E,EAAO+E,GAAP,IAAAvF,EAAAoD,EAAAnH,EAAAuJ,EAAA1J,EAAA,OAAA+B,EAAAzC,EAAA0C,KAAA,SAAA2C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAxC,MAAA,UACE+B,EAAiByF,EAAK3D,MAAtB9B,aACAoD,EAAWqC,EAAK3D,MAAhBsB,OAEO,aAAXmC,EAJE,CAAA9E,EAAAxC,KAAA,eAAAwC,EAAAxC,KAAA,EAKQX,KALR,OAKJrB,EALIwE,EAAAf,KAAAe,EAAAxC,KAAA,mBAMgB,WAAXsH,EANL,CAAA9E,EAAAxC,KAAA,gBAAAwC,EAAAxC,KAAA,GAOQe,KAPR,QAOJ/C,EAPIwE,EAAAf,KAAAe,EAAAxC,KAAA,uBASE,IAAI0B,MAAM,iCATZ,WAWD1D,EAXC,CAAAwE,EAAAxC,KAAA,gBAAAwC,EAAA3B,OAAA,yBAAA2B,EAAAxC,KAAA,GAekBhC,EAAIyJ,eAftB,eAeAF,EAfA/E,EAAAf,KAesC,KAM1C0D,EAAOuC,UAAU,CACfC,KAAM,CACJ5F,aAAcwF,EAASK,iBAG3B3H,OAAOS,aAAaC,QAAQ,eAAgB4G,EAASK,gBARrDxH,MAAM,uGAlBFoC,EAAAxC,KAAA,GA6Be6C,GAAUd,GA7BzB,QA6BAlE,EA7BA2E,EAAAf,KA8BN+F,EAAKlB,SAAS,CAAEzI,WA9BV,yBAAA2E,EAAA1B,SAAAyB,sQAbER,EAAiBvC,KAAKqE,MAAtB9B,sBACac,GAAUd,UAAzBlE,SACN2B,KAAK8G,SAAS,CAAEzI,2JAIhB2B,KAAK8G,SAAS,CAAEc,kBAAkB,mDAIlC5H,KAAK8G,SAAS,CAAEc,kBAAkB,mDAoCbtD,GAAQ,IAEzB+D,EAFyBC,EAAAtI,KACrBuC,EAAiBvC,KAAKqE,MAAtB9B,aAEAlE,EAAW2B,KAAK+F,MAAhB1H,OACR,GAAIkE,EACF,OAAQvC,KAAK+F,MAAM4B,aACjB,IAAK,OACHU,EACE3K,EAAAC,EAAAC,cAACuG,GAAD,CACEG,OAAQA,EACRe,oBAAqB,kBAAMiD,EAAKjD,uBAChCT,qBAAsB,kBAAM0D,EAAK1D,wBACjCU,wBAAyB,kBAAMgD,EAAKxB,SAAS,CAAEa,YAAa,uBAC5DpC,wBAAyB,kBAAM+C,EAAKxB,SAAS,CAAEa,YAAa,yBAGhE,MACF,IAAK,oBACHU,EACE3K,EAAAC,EAAAC,cAAC2K,GAAD,CACE/B,WAAY,WACV8B,EAAKjD,sBACLiD,EAAKxB,SAAS,CAAEa,YAAa,UAE/BtJ,OAAQA,IAGZ,MACF,IAAK,oBACHgK,EACE3K,EAAAC,EAAAC,cAAC4K,GAAD,CACEhC,WAAY,WACV8B,EAAKjD,sBACLiD,EAAKxB,SAAS,CAAEa,YAAa,UAE/BtJ,OAAQA,SAQhBgK,EACE3K,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6G,SAAA,KACE9G,EAAAC,EAAAC,cAAC6G,EAAA,EAASC,KAAV,CACES,KAAK,OACLrH,UAAU,OACVsH,QAAQ,uBACRT,QAAS,kBAAM2D,EAAKT,MAAM,eAE5BnK,EAAAC,EAAAC,cAAC6G,EAAA,EAASS,QAAV,MACAxH,EAAAC,EAAAC,cAAC6G,EAAA,EAASC,KAAV,CACES,KAAK,OACLrH,UAAU,OACVsH,QAAQ,0BACRT,QAAS,kBAAM2D,EAAKT,MAAM,cAKlC,OAAOQ,mCAGA,IAAAI,EAAAzI,KACCuC,EAAiBvC,KAAKqE,MAAtB9B,aACR,OACE7E,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAAOC,MAAOhK,EAAmBiK,UAAW,CAAEC,QAAStG,IACpD,SAAAuG,GAA8B,IAA3BC,EAA2BD,EAA3BC,QAASC,EAAkBF,EAAlBE,MAAOb,EAAWW,EAAXX,KAClB,GAAIY,EAAS,MAAO,aACpB,GAAIC,EAAO,MAAM,IAAI9G,MAAJ,WAAA6C,OAAqBiE,IACtC,OACEtL,EAAAC,EAAAC,cAAA,OAAKC,GAAG,UACNH,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAMC,QAAQ,QAAQC,cAAc,UACjC5G,EACC7E,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAaC,UAAU,OAAOvL,UAAU,SAiBtC,KACJJ,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAaC,UAAU,SAASvL,UAAU,QACxCJ,EAAAC,EAAAC,cAACiH,EAAA,EAAD,CAAMC,GAAG,KAAT,WAEApH,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAaC,UAAU,QAAQvL,UAAU,YACvCJ,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CACE3G,UAAU,iBACVwL,KAAMb,EAAK1C,MAAM6B,iBACjB2B,OAAQ,kBAAMd,EAAK7D,wBACnB4E,QAAS,kBAAMf,EAAKpD,uBACpBoE,KAAMlH,EAAY,GAAAwC,OAAMxC,EAAamH,UAAU,EAAG,GAAhC,OAA0C,cAE5DhM,EAAAC,EAAAC,cAAC6G,EAAA,EAASkF,KAAV,CAAe7L,UAAU,eAAe8L,UAAU,QAC/CnB,EAAKoB,uBAAuB1B,EAAK7D,sBA/JtB6C,aCtIrB2C,GAAA,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbtM,EAAAC,EAAAC,cAAA,OAAKC,GAAG,WACJmM,kCCHOC,GAAoB,IAAIC,KAAKC,aAAa,QAAS,CAC9DC,MAAO,WACPC,SAAU,MACVC,sBAAuB,IAQlB,SAASC,GAAoBC,EAAWC,GAC7C,IAAMC,EAAWC,SAAMC,YAAYJ,GAC7BK,EAAeF,SAAMC,YAAYH,GAEvC,OAAOR,GAAkBa,OAAOC,WAAWL,EAAWG,iBCPlDG,GAAWC,aAAM,CACrBC,QAAS,SAAAnB,GAAA,IAAGoB,EAAHpB,EAAGoB,OAAH,OAAgBzN,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAAOC,MAAO5J,GAAcoM,IACrDC,UAAW,SAAAC,GAAA,IAAGF,EAAHE,EAAGF,OAAH,OAAgBzN,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAAOC,MAAO1J,GAAgBkM,IACzDG,SAAU,SAAAC,GAAA,IAAGJ,EAAHI,EAAGJ,OAAH,OAAgBzN,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAAOC,MAAOlK,GAAe0M,MAGnDK,GAAa,SAAAC,GAAA,IAAGP,EAAHO,EAAGP,QAAH,OACjBxN,EAAAC,EAAAC,cAACiH,EAAA,EAAD,CAAMC,GAAG,WAAWhH,UAAU,QAC5BJ,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CAAQyE,KAAK,QAAQC,MAAM,OAAO7N,UAAU,YACzCoN,EAAQU,OADX,cAMEC,GAAe,SAAA/C,GAAA,IAAGsC,EAAHtC,EAAGsC,UAAH,OACnB1N,EAAAC,EAAAC,cAACiH,EAAA,EAAD,CAAMC,GAAG,aAAahH,UAAU,QAC9BJ,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CAAQyE,KAAK,QAAQC,MAAM,OAAO7N,UAAU,YACzCsN,EAAUQ,OADb,gBAMiBE,8MACnB/F,MAAQ,CACNgG,SAAU,GACVzN,MAAO,KACP0N,YAAa,QAYfC,aAAe,SAAAC,GAAC,OAAI/F,EAAKW,SAAS,CAAEiF,SAAUG,EAAEnF,OAAOC,WAEvDmF,aAAe,WAAM,IAAAC,EACSjG,EAAKJ,MAAzBgG,EADWK,EACXL,SADWK,EACD9N,MACZ+N,QAAQ1K,6CAAsCoK,8MAZ5CxJ,EAAiBvC,KAAKqE,MAAtB9B,sBACYmB,GAASnB,UAAvBjE,SAEN0B,KAAK8G,SAAS,CACZxI,6IAWK,IAAAiI,EAAAvG,KACC+L,EAAa/L,KAAK+F,MAAlBgG,SACR,OACErO,EAAAC,EAAAC,cAACoN,GAAD,KACG,SAAAsB,GAAsC,IAAnCpB,EAAmCoB,EAAnCpB,QAASE,EAA0BkB,EAA1BlB,UAAWE,EAAegB,EAAfhB,SACtB,GAAIJ,EAAQnC,SAAWqC,EAAUrC,SAAWuC,EAASvC,QAAS,OAAOrL,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAASzO,UAAU,eAAnB,cACrE,GAAIoN,EAAQlC,MAAO,MAAM,IAAI9G,MAAJ,WAAA6C,OAAqBmG,EAAQlC,QACtD,GAAIoC,EAAUpC,MAAO,MAAM,IAAI9G,MAAJ,WAAA6C,OAAqBqG,EAAUpC,QAC1D,GAAIsC,EAAStC,MAAO,MAAM,IAAI9G,MAAJ,WAAA6C,OAAqBuG,EAAStC,QAJnB,IAAAwD,EAK6BlB,EAASnD,KAAnEsE,EAL6BD,EAK7BC,eAAgBhC,EALa+B,EAKb/B,aAAciC,EALDF,EAKCE,YAAaC,EALdH,EAKcG,WACnD,OACEjP,EAAAC,EAAAC,cAAA,OAAKC,GAAG,YACNH,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAMC,QAAS,GAAIC,cAAc,UAC/BzL,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAawD,OAAQ,GAAIC,OAAQ,EAAGC,SAAU,EAAGhP,UAAU,eAEzDJ,EAAAC,EAAAC,cAACmP,GAAA,EAAD,CAAWC,UAAQ,EAACC,MAAM,mBAAmBjG,MAAOuD,GAAoBkC,EAAgBhC,MAG1F/M,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAawD,OAAQ,GAAIC,OAAQ,GAAIC,SAAU,EAAGzD,UAAU,SAASvL,UAAU,kBAC7EJ,EAAAC,EAAAC,cAACsP,GAAD,CAAYhC,QAASA,EAAQ/C,KAAK+C,UAClCxN,EAAAC,EAAAC,cAACuP,GAAD,CAAc/B,UAAWA,EAAUjD,KAAKiD,aAE1C1N,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAawD,OAAQ,GAAIC,OAAQ,EAAGC,SAAU,EAAGhP,UAAU,eACzDJ,EAAAC,EAAAC,cAACwP,GAAA,EAAD,CACEC,OAAK,EACL3B,KAAK,QACL4B,QACE5P,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CAAQyE,KAAK,QAAQC,MAAM,OAAO7N,UAAU,kBAA5C,iBAKFJ,EAAAC,EAAAC,cAACwP,GAAA,EAAM1F,OAAP,qBACAhK,EAAAC,EAAAC,cAACwP,GAAA,EAAMG,QAAP,KACE7P,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAM+G,SAAUjH,EAAK4F,cACnBzO,EAAAC,EAAAC,cAAC6I,EAAA,EAAKgH,MAAN,KACE/P,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,SAAO+I,YAAY,gBAAgB1B,KAAK,SAAS+B,MAAO+E,EAAUnF,SAAUL,EAAK0F,aAAcnO,UAAU,kBAE3GJ,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CAAQyG,KAAK,SAAS/B,MAAM,OAAO7N,UAAU,YAA7C,cAQRJ,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAauE,MAAO,IAClBjQ,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAASzO,UAAU,eACjBJ,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAMC,QAAQ,QAAQpL,UAAU,gBAC9BJ,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAaC,UAAU,QACrB3L,EAAAC,EAAAC,cAACmP,GAAA,EAAD,CAAWC,UAAQ,EAACC,MAAM,eAAejG,MAAO0F,KAElDhP,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAaC,UAAU,UACrB3L,EAAAC,EAAAC,cAACmP,GAAA,EAAD,CAAWC,UAAQ,EAACC,MAAM,YAAYjG,MAAO2D,SAAMC,YAAY6B,MAEjE/O,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAaC,UAAU,SACrB3L,EAAAC,EAAAC,cAACmP,GAAA,EAAD,CAAWC,UAAQ,EAACC,MAAM,cAAcjG,MAAOuD,GAAoBoC,EAAYlC,oBAhFjEvD,IAAMC,uECC7ByG,GA7BK,SAAA7D,GAAiB,IAAd8D,EAAc9D,EAAd8D,IAAKC,EAAS/D,EAAT+D,GACpBC,EAAQF,EAAMC,EACdE,EAAqB,IAARH,EAAY,EAAII,KAAKC,MAAOL,EAAME,EAAS,KACxDI,EAAmB,IAAPL,EAAW,EAAIG,KAAKC,MAAOJ,EAAKC,EAAS,KAC3D,OACArQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6G,SAAA,KACE9G,EAAAC,EAAAC,cAAA,OAAKwM,MAAO,CAAEgE,SAAU,aACtB1Q,EAAAC,EAAAC,cAACyQ,GAAA,EAAD,CACEC,QAASN,EAAaG,EACtBxC,MAAM,MACND,KAAK,QACLtB,MAAO,CACLgE,SAAU,WACVG,IAAK,IACLZ,MAAO,QAET7P,UAAkB,IAAPgQ,EAAW,WAAa,KAErCpQ,EAAAC,EAAAC,cAACyQ,GAAA,EAAD,CAAUC,QAASN,EAAYrC,MAAM,QAAQD,KAAK,QAAQ5N,UAAmB,IAAR+P,EAAY,WAAa,MAEhGnQ,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAMC,QAAQ,SACZxL,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAaoF,QAAQ,QAAQX,EAA7B,cACAnQ,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAaoF,QAAQ,QAAQnF,UAAU,SACpCyE,EADH,gBCtBOW,GAAkB,MAElBC,GAAiB,CAC5BC,QAAS,UACTC,QAAS,UACTC,aAAc,eACdC,YAAa,cACbC,QAAS,UACTC,OAAQ,SACRC,OAAQ,SACRC,mBAAoB,sBAGf,SAASC,GAAcC,GAC5B,IAAMC,EAAUZ,GAAkBW,EAE5BE,EAAOrB,KAAKsB,MAAOF,EAAU,QAAY,OACzCG,EAAQvB,KAAKsB,MAAQF,EAAU,QAAY,MAAS,MACpDI,EAAUxB,KAAKsB,MAASF,EAAU,QAAY,MAAS,KAAQ,IAEjEK,EAAS,GAKb,OAJAA,EAASJ,EAAI,GAAAvK,OAAMuK,EAAN,SAAoBI,EACjCA,EAASF,EAAK,GAAAzK,OAAM2K,EAAN,KAAA3K,OAAgByK,EAAhB,UAAgCE,EAC9CA,EAASD,EAAO,GAAA1K,OAAM2K,EAAN,KAAA3K,OAAgB0K,EAAhB,YAAoCC,EAK/C,SAASC,GAAyBC,GACvC,OAAQA,EAASC,QACf,KAAKnB,GAAeE,QAClB,OACElR,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6G,SAAA,KACE9G,EAAAC,EAAAC,cAAA,QAAME,UAAU,WAAhB,mBACAJ,EAAAC,EAAAC,cAAA,YAAOgS,EAASE,aAAeX,GAAcS,EAASE,cAAgB,MAG5E,KAAKpB,GAAeG,aAClB,OACEnR,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6G,SAAA,KACE9G,EAAAC,EAAAC,cAAA,QAAME,UAAU,WAAhB,iBACAJ,EAAAC,EAAAC,cAAA,YAAOgS,EAASG,WAAaZ,GAAcS,EAASG,YAAc,MAGxE,KAAKrB,GAAeI,YAClB,OACEpR,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6G,SAAA,KACE9G,EAAAC,EAAAC,cAAA,QAAME,UAAU,WAAhB,uBACAJ,EAAAC,EAAAC,cAAA,YAAOgS,EAASI,YAAcb,GAAcS,EAASI,aAAe,MAG1E,KAAKtB,GAAeM,OAClB,OAAOtR,EAAAC,EAAAC,cAAA,QAAME,UAAU,WAAhB,UACT,KAAK4Q,GAAeO,OAClB,OAAOvR,EAAAC,EAAAC,cAAA,QAAME,UAAU,WAAhB,UACT,KAAK4Q,GAAeK,QAClB,OAAOrR,EAAAC,EAAAC,cAAA,QAAME,UAAU,WAAhB,WACT,KAAK4Q,GAAeQ,mBAClB,OAAOxR,EAAAC,EAAAC,cAAA,QAAME,UAAU,WAAhB,wBACT,QACE,OAAOJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6G,SAAA,OAIN,IAAMyL,GAAU,SAACL,EAAUM,GAAX,OAA6BA,EAAgBN,EAASO,gBAEhEC,GAAgB,SAACR,EAAUM,GAAX,OACzBA,EAAgBN,EAASO,eArEO,IAsEhCD,EAAgBN,EAASO,eAtEO,GACD,IAuEtBE,GAAiB,SAACT,EAAUM,GAAX,OAA6BA,GAAiBN,EAASO,gBAAkBD,GAAiBN,EAASO,eAxE7F,IA0EvBG,GAAuB,SAACV,EAAUM,GAAX,OAA6BA,EAAgBN,EAASO,eA1EtD,GACD,ICY5B,IAAMI,GAAO,CAClBC,KAAM,EACNC,IAAK,EACLC,GAAI,GAGAC,GAAe,SAAA5G,GAAgB,IAAbzF,EAAayF,EAAbzF,OACtB,OACE5G,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAawD,OAAQ,EAAGC,OAAQ,EAAGC,SAAU,EAAGzD,UAAU,SAASvL,UAAU,gBAAgB8S,MAAOtM,GAClG5G,EAAAC,EAAAC,cAACiH,EAAA,EAAD,CAAMC,GAAE,YAAAC,OAAcT,GAAUxG,UAAU,aACxCJ,EAAAC,EAAAC,cAACiT,GAAA,EAAD,CAAOC,IAAKC,KAAMC,UAAQ,IAC1BtT,EAAAC,EAAAC,cAAA,KAAGE,UAAU,QAASwG,EAAcA,EAAOsH,OAAS,GAAKtH,EAAOoF,UAAU,EAAG,IAAM,MAAQpF,EAA5D,OAMjC0G,GAAWC,aAAM,CACrBgG,eAAgB,SAAA5F,GAAA,IAAGF,EAAHE,EAAGF,OAAQtN,EAAXwN,EAAWxN,GAAX,OACdH,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAAOC,MAAOtJ,EAAqBuJ,UAAW,CAAE/K,OAC7CsN,IAGLG,SAAU,SAAAC,GAAA,IAAGJ,EAAHI,EAAGJ,OAAH,OAAgBzN,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAAOC,MAAOlK,GAAe0M,IAEvDD,QAAS,SAAAO,GAAA,IAAGN,EAAHM,EAAGN,OAAH,OAAgBzN,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAAOC,MAAO5J,GAAcoM,MAGlC+F,8MACnBnL,MAAQ,CACN6J,SAAU,CACRuB,aAAc,EACdC,gBAAiB,EACjBC,aAAa,EACbC,YAAY,EACZC,SAAU,EACVC,QAAS,EACT3B,OAAQnB,GAAeE,QACvB6C,MAAO,IAETC,KAAM,CACJ7T,GAAI,EACJ8T,OAAQ,EACRpN,UAAU,GAEZlG,OAAQ,KACRsO,WAAY,IACZlC,aAAc,OAWhBmH,+CAAW,SAAA1R,EAAO0P,GAAP,IAAAvR,EAAA,OAAA+B,EAAAzC,EAAA0C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACDnC,EAAW8H,EAAKJ,MAAhB1H,OADCiC,EAAAE,KAAA,EAEHnC,EAAOwT,WAAWjC,EAASkC,cAAevB,GAAKG,IAF5C,OAGTvK,EAAKW,SAAS,CACZiL,cAAc,IAJP,wBAAAzR,EAAAgB,SAAApB,8DAQX8R,gDAAY,SAAAlQ,EAAO8N,GAAP,IAAAvR,EAAA,OAAA+B,EAAAzC,EAAA0C,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cACFnC,EAAW8H,EAAKJ,MAAhB1H,OADE0D,EAAAvB,KAAA,EAEJnC,EAAOwT,WAAWjC,EAASkC,cAAevB,GAAKE,KAF3C,OAGVtK,EAAKW,SAAS,CACZiL,cAAc,IAJN,wBAAAhQ,EAAAT,SAAAQ,8DAQZmQ,oDAAgB,SAAA3P,EAAOsN,GAAP,IAAAvR,EAAA,OAAA+B,EAAAzC,EAAA0C,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cACNnC,EAAW8H,EAAKJ,MAAhB1H,OADMmE,EAAAhC,KAAA,EAERnC,EAAO6T,gBAAgBtC,EAASkC,eAFxB,wBAAAtP,EAAAlB,SAAAgB,sQAvBNC,EAAiBvC,KAAKqE,MAAtB9B,sBACac,GAAUd,UAAzBlE,SACN2B,KAAK8G,SAAS,CACZzI,8IAyBK,IAAAkI,EAAAvG,KACCuC,EAAiBvC,KAAKqE,MAAtB9B,aAER,OACE7E,EAAAC,EAAAC,cAACuU,GAAD,CAAUtU,GAAImC,KAAKqE,MAAM+N,MAAMC,OAAOxU,IACnC,SAAAyU,GAA2C,IAAxCrB,EAAwCqB,EAAxCrB,eAAgB3F,EAAwBgH,EAAxBhH,SAAUJ,EAAcoH,EAAdpH,QAC5B,GAAI+F,EAAelI,SAAWuC,EAASvC,SAAWmC,EAAQnC,QAAS,OAAOrL,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAASzO,UAAU,eAAnB,cAC1E,GAAImT,EAAejI,MAAO,MAAM,IAAI9G,MAAJ,WAAA6C,OAAqBkM,EAAejI,QACpE,GAAIsC,EAAStC,MAAO,MAAM,IAAI9G,MAAJ,WAAA6C,OAAqBuG,EAAStC,QACxD,GAAIkC,EAAQlC,MAAO,MAAM,IAAI9G,MAAJ,WAAA6C,OAAqBmG,EAAQlC,QAJZ,IAMlC4G,EAAaqB,EAAe9I,KAA5ByH,SANkCpD,EAOLlB,EAASnD,KAAtCwE,EAPkCH,EAOlCG,WAAYlC,EAPsB+B,EAOtB/B,aAEd8H,EAAY3C,EAAS6B,MAAMe,OAAO,SAACC,EAAYC,GACnD,OAAIA,EAAKC,WAAapC,GAAKE,IACjBgC,EAAcG,SAASF,EAAKpO,OAAOqN,QAEpCc,GAER,GAEGI,EAAWjD,EAAS6B,MAAMe,OAAO,SAACC,EAAYC,GAClD,OAAIA,EAAKC,WAAapC,GAAKG,GACjB+B,EAAcG,SAASF,EAAKpO,OAAOqN,QAEpCc,GAER,GAEGf,EAAOxG,EAAQ/C,KAAK+C,QAAQ4H,KAAK,SAAAC,GAAC,OAAIA,EAAEC,cAAgBzQ,IAExD0Q,IADerD,EAAS6B,MAAMqB,KAAK,SAAAJ,GAAI,OAAIA,EAAKpO,OAAOzG,KAAO0E,KACjCqN,EAASC,SAAWnB,GAAeG,gBAAmB6C,GAAQA,EAAKC,WAAaD,GAAQA,EAAKnN,UAEhI,OACE7G,EAAAC,EAAAC,cAAA,OAAKC,GAAG,mBACNH,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAM+H,UAAQ,EAAC9H,QAAS,IACtBxL,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAASzO,UAAU,0BAA0BuL,UAAU,UACrD3L,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAM+H,UAAQ,EAAC9H,QAAS,IACtBxL,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAawD,OAAQ,GAAIC,OAAQ,GAAIC,SAAU,IAC7CpP,EAAAC,EAAAC,cAAA,QAAME,UAAU,SAAS8R,EAASgB,MAAQhB,EAASgB,MAAQ,SAG/DlT,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAM+H,UAAQ,EAAC9H,QAAS,IACtBxL,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAawD,OAAQ,GAAIC,OAAQ,GAAIC,SAAU,GAC7CpP,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBAAuB8R,EAASsD,YAActD,EAASsD,YAAc,OACpFxV,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAMC,QAAQ,QAAQpL,UAAU,UAC9BJ,EAAAC,EAAAC,cAACqL,EAAA,EAAKkK,IAAN,KACEzV,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAatL,UAAU,YACrBJ,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAASzO,UAAU,OAAOuL,UAAU,UAClC3L,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAMC,KAAK,aACV0F,SAAMC,YAAYgF,EAASuB,cAF9B,WAONzT,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAMC,QAAQ,SACZxL,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,KACE1L,EAAAC,EAAAC,cAAA,KAAGE,UAAU,kBAAb,UACAJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,UAAU8R,EAASwB,kBAElC1T,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAaC,UAAU,SACrB3L,EAAAC,EAAAC,cAAA,KAAGE,UAAU,WAAb,mBACAJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,UACVyM,GACCI,SACGyI,aAAaxD,EAASwB,iBACtBiC,IAAI1G,GACJ2G,WACH7I,OAOV/M,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAawD,OAAQ,GAAIC,OAAQ,GAAIC,SAAU,GAC7CpP,EAAAC,EAAAC,cAACsH,GAAA,EAAD,CAASqO,UAAQ,KAGnB7V,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAawD,OAAQ,GAAIC,OAAQ,GAAIC,SAAU,GAC7CpP,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAMC,QAAS,IACbxL,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAaC,UAAU,SAASuD,OAAQ,GAAIC,OAAQ,GAAIC,SAAU,GAAIhP,UAAU,eAC9EJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,QAAQ6R,GAAyBC,MAGrDlS,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAMC,QAAS,GAAIpL,UAAU,eAC3BJ,EAAAC,EAAAC,cAACqL,EAAA,EAAKkK,IAAN,KACEzV,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAawD,OAAQ,GAAIC,OAAQ,GAAIC,SAAU,GAAIhP,UAAU,eAC1D8R,EAAS6B,OAAS7B,EAAS6B,MAAM7F,OAAS,EACzClO,EAAAC,EAAAC,cAACqL,EAAA,EAAD,KACEvL,EAAAC,EAAAC,cAACqL,EAAA,EAAKkK,IAAN,CAAUrV,UAAU,eAEjB8R,EAAS6B,MAAM+B,IAAI,SAACd,EAAMe,GAAP,OAClB/V,EAAAC,EAAAC,cAAC8V,GAAD,CAAcpP,OAAQoO,EAAKpO,OAAOzG,GAAI8T,OAAQe,EAAKpO,OAAOqN,OAAQgC,IAAKF,QAI3E,QAIV/V,EAAAC,EAAAC,cAACqL,EAAA,EAAD,KACEvL,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,KACE1L,EAAAC,EAAAC,cAACgW,GAAD,CAAa/F,IAAK0E,EAAWzE,GAAI+E,MAGrCnV,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAMC,QAAQ,QAAQ8H,UAAQ,GAC5BtT,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAaC,UAAU,SAASuD,OAAQ,GAAIC,OAAQ,EAAGC,SAAU,GAC/DpP,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CAAQnJ,UAAU,MAAM6N,MAAM,OAAOkI,SAAUZ,EAAYtO,QAAS,kBAAM4B,EAAKqL,SAAShC,KAAxF,YAIFlS,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAaC,UAAU,SAASuD,OAAQ,GAAIC,OAAQ,EAAGC,SAAU,GAC/DpP,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CAAQnJ,UAAU,MAAM6N,MAAM,OAAOkI,SAAUZ,EAAYtO,QAAS,kBAAM4B,EAAKyL,UAAUpC,KAAzF,aAIFlS,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAaC,UAAU,SAASuD,OAAQ,GAAIC,OAAQ,EAAGC,SAAU,GAC/DpP,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CACEnJ,UAAU,MACV6N,MAAM,OACNhH,QAAS,kBAAM4B,EAAK0L,cAAcrC,IAClCiE,SAAUjE,EAASC,SAAWnB,GAAeQ,oBAJ/C,oCA1KkB/H,aC/BtC2M,GAAe,SAAA/J,GAAkB,IAAf6F,EAAe7F,EAAf6F,SAClB/R,EAAK+R,EAAS/R,GAEZ0U,EAAY3C,EAAS6B,MAAMe,OAAO,SAACC,EAAYC,GACnD,OAAIA,EAAKC,WAAapC,GAAKE,IACjBgC,EAAcG,SAASF,EAAKpO,OAAOqN,QAEpCc,GAER,GAEGI,EAAWjD,EAAS6B,MAAMe,OAAO,SAACC,EAAYC,GAClD,OAAIA,EAAKC,WAAapC,GAAKG,GACjB+B,EAAcG,SAASF,EAAKpO,OAAOqN,QAEpCc,GAER,GAEH,OACE/U,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAawD,OAAQ,GAAIC,OAAQ,EAAGC,SAAU,GAC5CpP,EAAAC,EAAAC,cAACiH,EAAA,EAAD,CAAMC,GAAI,CAAEiP,SAAQ,cAAAhP,OAAgBlH,IAAQC,UAAU,aACpDJ,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAASzO,UAAU,eACjBJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,QAAQ8R,EAASgB,MAAQhB,EAASgB,MAAQ,OACvDlT,EAAAC,EAAAC,cAAA,KAAGE,UAAU,uBAAuB8R,EAASsD,YAActD,EAASsD,YAAc,OAClFxV,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAMC,QAAQ,QAAQpL,UAAU,gBAC9BJ,EAAAC,EAAAC,cAACqL,EAAA,EAAKkK,IAAN,KACEzV,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAaC,UAAU,UACrB3L,EAAAC,EAAAC,cAAA,KAAGE,UAAU,WAAb,oBACAJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,UAAU8R,EAASwB,kBAElC1T,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAaC,UAAU,UACrB3L,EAAAC,EAAAC,cAAA,KAAGE,UAAU,WAAb,WACUJ,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAMC,KAAK,cAErBvH,EAAAC,EAAAC,cAAA,KAAGE,UAAU,UAAU6M,SAAMC,YAAYgF,EAASuB,kBAIxDzT,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAMC,QAAQ,QAAQpL,UAAU,aAC9BJ,EAAAC,EAAAC,cAACqL,EAAA,EAAKkK,IAAN,KACEzV,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAaC,UAAU,UACrB3L,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAASzO,UAAU,cAAcuL,UAAU,UACxCsG,GAAyBC,OAKlClS,EAAAC,EAAAC,cAACgW,GAAD,CAAa/F,IAAK0E,EAAWzE,GAAI+E,QAOrC7H,GAAWC,aAAM,CACrB+I,gBAAiB,SAAA3I,GAAA,IAAGF,EAAHE,EAAGF,OAAH,OAAgBzN,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAAOC,MAAOxJ,GAAoBgM,IACnEG,SAAU,SAAAC,GAAA,IAAGJ,EAAHI,EAAGJ,OAAH,OAAgBzN,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAAOC,MAAOlK,GAAe0M,MAGnD8I,8MACJlO,MAAQ,CACNqF,UAAW,GACXsB,YAAa,EACbC,WAAY,EACZlC,aAAc,6EAGP,IACClG,EAAavE,KAAKqE,MAAlBE,SAGR,OACE7G,EAAAC,EAAAC,cAACsW,GAAD,CAAUrW,GAAImC,KAAKqE,MAAM+N,MAAMC,OAAOxU,IACnC,SAAA4N,GAAmC,IAAhCuI,EAAgCvI,EAAhCuI,gBAAiB1I,EAAeG,EAAfH,SACnB,GAAI0I,EAAgBjL,SAAWuC,EAASvC,QAAS,OAAOrL,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAASzO,UAAU,eAAnB,cACxD,GAAIkW,EAAgBhL,MAAO,MAAM,IAAI9G,MAAJ,WAAA6C,OAAqBiP,EAAgBhL,QACtE,GAAIsC,EAAStC,MAAO,MAAM,IAAI9G,MAAJ,WAAA6C,OAAqBuG,EAAStC,QAHtB,IAK1BoC,EAAc4I,EAAgB7L,KAA9BiD,UAL0BoB,EAMgBlB,EAASnD,KAAnDwE,EAN0BH,EAM1BG,WAAYlC,EANc+B,EAMd/B,aAAciC,EANAF,EAMAE,YAG5ByH,EAAgB,SAACxW,EAAGyW,GAAJ,OAAUA,EAAEtC,cAAgBnU,EAAEmU,eAE9C9B,EAAc5E,EAAUiJ,OAAO,SAAA7W,GAAC,OAAIA,EAAEqS,SAAWnB,GAAeI,cAAawF,KAAKH,GAClFI,EAAenJ,EAAUiJ,OAAO,SAAA7W,GAAC,OAAIA,EAAEqS,SAAWnB,GAAeG,eAAcyF,KAAKH,GACpFlE,EAAU7E,EAAUiJ,OAAO,SAAA7W,GAAC,OAAIA,EAAEqS,SAAWnB,GAAeE,UAAS0F,KAAKH,GAC1EK,EAAqBpJ,EAAUiJ,OAAO,SAAA7W,GAAC,OAAIA,EAAEqS,SAAWnB,GAAeQ,qBAAoBoF,KAAKH,GAChGM,EAAYrJ,EACfiJ,OAAO,SAAA7W,GAAC,OAAIA,EAAEqS,SAAWnB,GAAeK,SAAWvR,EAAEqS,SAAWnB,GAAeM,QAAUxR,EAAEqS,SAAWnB,GAAeO,SACrHqF,KAAKH,GAEFO,EAAQ,CACZ,CACEC,SAAQ,kBAAA5P,OAAoBwP,EAAa3I,OAAjC,KACRT,OAAQ,kBACNzN,EAAAC,EAAAC,cAACgX,GAAA,EAAIC,KAAL,CAAUC,UAAU,GAClBpX,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAMC,QAAS,GACZqL,EAAaf,IAAI,SAAChW,EAAGuX,GAAJ,OAChBrX,EAAAC,EAAAC,cAACoX,GAAD,CAAcvK,aAAcA,EAAckC,WAAYA,EAAYD,aAAcA,EAAakD,SAAUpS,EAAGmW,IAAKoB,UAMzH,CACEJ,SAAQ,iBAAA5P,OAAmBiL,EAAYpE,OAA/B,KACRT,OAAQ,kBACNzN,EAAAC,EAAAC,cAACgX,GAAA,EAAIC,KAAL,CAAUC,UAAU,GAClBpX,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAMC,QAAS,GACZ8G,EAAYwD,IAAI,SAAChW,EAAGuX,GAAJ,OACfrX,EAAAC,EAAAC,cAACoX,GAAD,CAAcvK,aAAcA,EAAckC,WAAYA,EAAYD,aAAcA,EAAakD,SAAUpS,EAAGmW,IAAKoB,UAMzH,CACEJ,SAAQ,yBAAA5P,OAA2ByP,EAAmB5I,OAA9C,KACRT,OAAQ,kBACNzN,EAAAC,EAAAC,cAACgX,GAAA,EAAIC,KAAL,CAAUC,UAAU,GAClBpX,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAMC,QAAS,GACZsL,EAAmBhB,IAAI,SAAChW,EAAGuX,GAAJ,OACtBrX,EAAAC,EAAAC,cAACoX,GAAD,CAAcvK,aAAcA,EAAckC,WAAYA,EAAYD,aAAcA,EAAakD,SAAUpS,EAAGmW,IAAKoB,UAMzH,CACEJ,SAAQ,cAAA5P,OAAgB0P,EAAU7I,OAA1B,KACRT,OAAQ,kBACNzN,EAAAC,EAAAC,cAACgX,GAAA,EAAIC,KAAL,CAAUC,UAAU,GAClBpX,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAMC,QAAS,GACZuL,EAAUjB,IAAI,SAAChW,EAAGuX,GAAJ,OACbrX,EAAAC,EAAAC,cAACoX,GAAD,CAAcvK,aAAcA,EAAckC,WAAYA,EAAYD,aAAcA,EAAakD,SAAUpS,EAAGmW,IAAKoB,UAMzH,CACEJ,SAAQ,aAAA5P,OAAekL,EAAQrE,OAAvB,KACRT,OAAQ,kBACNzN,EAAAC,EAAAC,cAACgX,GAAA,EAAIC,KAAL,CAAUC,UAAU,GAClBpX,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAMC,QAAS,GACZ+G,EAAQuD,IAAI,SAAChW,EAAGuX,GAAJ,OACXrX,EAAAC,EAAAC,cAACoX,GAAD,CAAcvK,aAAcA,EAAckC,WAAYA,EAAYD,aAAcA,EAAakD,SAAUpS,EAAGmW,IAAKoB,WAQ3H,OACErX,EAAAC,EAAAC,cAAA,OAAKC,GAAG,iBACNH,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6G,SAAA,KACE9G,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAMC,QAAS,GAAIC,cAAc,UAC/BzL,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAawD,OAAQ,GAAIC,OAAQ,EAAGC,SAAU,EAAGzD,UAAU,QAAQmF,QAAQ,QAAQ1Q,UAAU,iBAC3FJ,EAAAC,EAAAC,cAACiH,EAAA,EAAD,CAAMC,GAAIP,EAAW,sBAAwB,aAAczG,UAAU,QACnEJ,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CAAQyE,KAAK,QAAQC,MAAM,MAAMkI,UAAWtP,GAA5C,mBAMN7G,EAAAC,EAAAC,cAACgX,GAAA,EAAD,CAAKK,KAAM,CAAEC,WAAW,EAAMC,UAAU,EAAM5B,UAAU,GAAQmB,MAAOA,eA5G5DxN,IAAMC,WAwIlBiO,GAlBU,SAAAtM,GAAsB,IAAnBvG,EAAmBuG,EAAnBvG,aAC1B,OACE7E,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAAOC,MAAO5J,GACX,SAAAuN,GAA8B,IAA3BvD,EAA2BuD,EAA3BvD,QAASC,EAAkBsD,EAAlBtD,MAAOb,EAAWmE,EAAXnE,KAClB,GAAIY,EAAS,MAAO,aACpB,GAAIC,EAAO,MAAM,IAAI9G,MAAJ,WAAA6C,OAAqBiE,IACtC,IAAM1E,EAAS6D,EAAK+C,QAAQ4H,KAAK,SAAAC,GAAC,OAAIA,EAAEC,cAAgBzQ,IACxD,OACE7E,EAAAC,EAAAC,cAACyX,EAAA,EAAD,KACE3X,EAAAC,EAAAC,cAACyX,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,aAAapK,OAAQ,SAAA9G,GAAK,OAAI3G,EAAAC,EAAAC,cAAC4X,GAADhQ,OAAAiQ,OAAA,GAAkBpR,EAAlB,CAAyBE,WAAUD,GAASA,EAAOC,eACnG7G,EAAAC,EAAAC,cAACyX,EAAA,EAAD,CAAOE,KAAK,iBAAiBpK,OAAQ,SAAA9G,GAAK,OAAI3G,EAAAC,EAAAC,cAAC8X,GAADlQ,OAAAiQ,OAAA,GAAoBpR,EAApB,CAA2B9B,aAAcA,qDCzL7FyI,GAAWC,aAAM,CACrB0K,aAAc,SAAA5L,GAAA,IAAGoB,EAAHpB,EAAGoB,OAAQlG,EAAX8E,EAAW9E,KAAX,OACZvH,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAAOC,MAAO9J,EAA8B+J,UAAW,CAAEC,QAAS5D,IAC/DkG,IAGLG,SAAU,SAAAD,GAAA,IAAGF,EAAHE,EAAGF,OAAH,OAAgBzN,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAAOC,MAAOlK,GAAe0M,MAGnDyK,GAAe,SAAArK,GAAA,IAAGhJ,EAAHgJ,EAAGhJ,aAAc+B,EAAjBiH,EAAiBjH,OAAQqI,EAAzBpB,EAAyBoB,WAAYlC,EAArCc,EAAqCd,aAArC,OACnB/M,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAASzO,UAAU,eACjBJ,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAMC,QAAQ,SACZxL,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,KACE1L,EAAAC,EAAAC,cAAA,KAAGE,UAAU,WAAb,UACAJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,UAAUwG,EAAOqN,SAEhCjU,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAaC,UAAU,SACrB3L,EAAAC,EAAAC,cAAA,KAAGE,UAAU,WAAb,eACAJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,UACVyM,GACCI,SACGyI,aAAa9O,EAAOqN,QACpB0B,IAAI1G,GACJ2G,WACH7I,MAKR/M,EAAAC,EAAAC,cAACqL,EAAA,EAAD,KACEvL,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAaC,UAAU,SAASvL,UAAU,UACxCJ,EAAAC,EAAAC,cAACiT,GAAA,EAAD,CAAOG,UAAQ,EAACF,IAAKvO,IAAiB+B,EAAOzG,IAAM0E,IAAiB+B,EAAO0O,YAAc6C,KAAO9E,KAAMrF,KAAK,WAG/GhO,EAAAC,EAAAC,cAAA,KAAGE,UAAU,WAAb,WACAJ,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAMC,QAAQ,SACZxL,EAAAC,EAAAC,cAACqL,EAAA,EAAKkK,IAAN,KACEzV,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,KACE1L,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAASzO,UAAU,OAAOuL,UAAU,UAClC3L,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAMC,KAAK,aACV0F,SAAMC,YAAYtG,EAAO6M,cAF5B,UAMJzT,EAAAC,EAAAC,cAAA,KAAGE,UAAU,WAAb,gBACAJ,EAAAC,EAAAC,cAACqL,EAAA,EAAKkK,IAAN,KACEzV,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,KACE1L,EAAAC,EAAAC,cAAA,KAAGE,UAAU,WAAWwG,EAAO0O,kBAOnC9B,GAAiB,SAAAzF,GAAA,IAAGL,EAAHK,EAAGL,UAAH,OACrB1N,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAASzO,UAAU,eACjBJ,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAMC,QAAQ,QAAQG,UAAU,UAC9B3L,EAAAC,EAAAC,cAACqL,EAAA,EAAKkK,IAAN,CAAUrV,UAAU,UAAUsM,MAAO,CAAE0L,SAAU,KAAjD,YAIFpY,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAMC,QAAQ,SACZxL,EAAAC,EAAAC,cAACqL,EAAA,EAAKkK,IAAN,CAAUrV,UAAU,UAClBJ,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAaC,UAAU,UACrB3L,EAAAC,EAAAC,cAAA,KAAGE,UAAU,WAAb,mBAEFJ,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAaC,UAAU,UACrB3L,EAAAC,EAAAC,cAAA,KAAGE,UAAU,WAAb,SAEFJ,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAaC,UAAU,UACrB3L,EAAAC,EAAAC,cAAA,KAAGE,UAAU,WAAb,qBAEFJ,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAaC,UAAU,UACrB3L,EAAAC,EAAAC,cAAA,KAAGE,UAAU,WAAb,oBAEFJ,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAaC,UAAU,UACrB3L,EAAAC,EAAAC,cAAA,KAAGE,UAAU,WAAb,SAEFJ,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAaC,UAAU,UACrB3L,EAAAC,EAAAC,cAAA,KAAGE,UAAU,WAAb,YAGHsN,GAAaA,EAAUQ,OAAS,EAC/BR,EAAUoI,IAAI,SAAChW,EAAGiW,GAChB,OACE/V,EAAAC,EAAAC,cAACF,EAAAC,EAAM6G,SAAP,CAAgBmP,IAAKF,GACjB/V,EAAAC,EAAAC,cAACqL,EAAA,EAAKkK,IAAN,CAAUhK,cAAc,UACtBzL,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAaC,UAAU,UACrB3L,EAAAC,EAAAC,cAACiH,EAAA,EAAD,CAAMC,GAAI,CAAEiP,SAAQ,cAAAhP,OAAgBvH,EAAEoS,SAAS/R,KAAQC,UAAU,aAChEN,EAAEmV,WAAapC,GAAKE,KAAO/S,EAAAC,EAAAC,cAACmY,GAAA,EAAD,CAAOjY,UAAU,MAAMkY,UAAQ,EAACrK,MAAM,QAAQsK,OAAK,KAE7EzY,EAAEmV,WAAapC,GAAKG,IAAMlT,EAAEmV,WAAapC,GAAKC,OAAS9S,EAAAC,EAAAC,cAACmY,GAAA,EAAD,CAAOjY,UAAU,MAAMkY,UAAQ,EAACrK,MAAM,MAAMsK,OAAK,IACzGzY,EAAEoS,SAASgB,QAGdlT,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAaC,UAAU,UACrB3L,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAgB,IAAIoY,KAA4B,IAAvB1Y,EAAEoS,SAASuG,WAAkBC,cAAcC,MAAM,EAAG,MAE5F3Y,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAaC,UAAU,UACrB3L,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAgBN,EAAEoS,SAASwB,kBAE1C1T,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAaC,UAAU,UACrB3L,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAgB6M,SAAMC,YAAYpN,EAAEoS,SAASuB,gBAE5DzT,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAaC,UAAU,UACrB3L,EAAAC,EAAAC,cAAC0Y,GAAA,EAAD,CAAQC,GAAG,IAAI5K,MAAOnO,EAAEmV,WAAapC,GAAKE,IAAM,QAAUjT,EAAEmV,WAAapC,GAAKG,GAAK,MAAQ,MACxFlT,EAAEmV,WAAapC,GAAKE,IAAM,IAAMjT,EAAEmV,WAAapC,GAAKG,GAAK,IAAM,KAGpEhT,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAaC,UAAU,UACrB3L,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAgB6R,GAAyBnS,EAAEoS,aAG9DlS,EAAAC,EAAAC,cAACsH,GAAA,EAAD,SAKNxH,EAAAC,EAAAC,cAACqL,EAAA,EAAKkK,IAAN,CAAUhK,cAAc,UACtBzL,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAaC,UAAU,UAAvB,sDAsCKmN,GA/BU,SAAAnS,GAAK,OAC5B3G,EAAAC,EAAAC,cAAC6Y,GAAD,CAAUxR,KAAMZ,EAAM+N,MAAMC,OAAOpN,MAChC,SAAA6D,GAAgC,IAA7B6M,EAA6B7M,EAA7B6M,aAAcrK,EAAexC,EAAfwC,SAChB,GAAIqK,EAAa5M,SAAWuC,EAASvC,QAAS,OAAOrL,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAASzO,UAAU,eAAnB,cACrD,GAAI6X,EAAa3M,MAAO,MAAM,IAAI9G,MAAJ,WAAA6C,OAAqB4Q,EAAa3M,QAChE,GAAIsC,EAAStC,MAAO,MAAM,IAAI9G,MAAJ,WAAA6C,OAAqBuG,EAAStC,QACxD,OACEtL,EAAAC,EAAAC,cAAA,OAAKC,GAAG,iBACNH,EAAAC,EAAAC,cAAA,KAAGE,UAAU,SAAb,IAAuBuG,EAAM+N,MAAMC,OAAOpN,KAA1C,KACAvH,EAAAC,EAAAC,cAACsH,GAAA,EAAD,MACAxH,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAMC,QAAS,IACbxL,EAAAC,EAAAC,cAACqL,EAAA,EAAKkK,IAAN,CAAUrV,UAAU,WAClBJ,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAawD,OAAQ,GAAIC,OAAQ,GAAIC,SAAU,EAAGhP,UAAU,QAC1DJ,EAAAC,EAAAC,cAAC8Y,GAAD,CACEnU,aAAc8B,EAAM9B,aACpB+B,OAAQqR,EAAaxN,KAAK7D,OAC1BqI,WAAYrB,EAASnD,KAAKwE,WAC1BlC,aAAca,EAASnD,KAAKsC,gBAGhC/M,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAawD,OAAQ,GAAIC,OAAQ,GAAIC,SAAU,GAAIhP,UAAU,aAC3DJ,EAAAC,EAAAC,cAAC+Y,GAAD,CAAgBvL,UAAWuK,EAAaxN,KAAK7D,OAAOmN,8YCtJpE,IAAMd,GAAe,SAAA5G,GAAA,IAAGlB,EAAHkB,EAAGlB,QAAS8I,EAAZ5H,EAAY4H,OAAZ,OACnBjU,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAawD,OAAQ,EAAGC,OAAQ,EAAGC,SAAU,EAAGzD,UAAU,SAASvL,UAAU,gBAAgB8S,MAAO/H,GAClGnL,EAAAC,EAAAC,cAACiH,EAAA,EAAD,CAAMC,GAAE,YAAAC,OAAc8D,GAAW/K,UAAU,aACzCJ,EAAAC,EAAAC,cAACiT,GAAA,EAAD,CAAOC,IAAKC,KAAMC,UAAQ,EAACtF,KAAK,SAChChO,EAAAC,EAAAC,cAAA,KAAGE,UAAU,QAAS+K,EAAeA,EAAQ+C,OAAS,GAAK/C,EAAQa,UAAU,EAAG,IAAM,MAAQb,EAA9D,IAChCnL,EAAAC,EAAAC,cAAA,KAAGE,UAAU,WAAW6T,EAAxB,cAKAiF,GAAe,SAAAvS,GAAK,OACxB3G,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAAOC,MAAOhK,EAAmBiK,UAAW,CAAEC,QAASxE,EAAM9B,eAC1D,SAAA8I,GAA8B,IAA3BtC,EAA2BsC,EAA3BtC,QAASC,EAAkBqC,EAAlBrC,MAAOb,EAAWkD,EAAXlD,KAClB,GAAIY,EAAS,MAAO,MACpB,GAAIC,EAAO,MAAM,IAAI9G,MAAJ,WAAA6C,OAAqBiE,IACtC,OAAOb,EAAK7D,QAAU6D,EAAK7D,OAAOC,SAChC7G,EAAAC,EAAAC,cAACiH,EAAA,EAAD,CAAMC,GAAE,YAAAC,OAAcoD,EAAK7D,OAAOzG,IAAMC,UAAU,aAChDJ,EAAAC,EAAAC,cAACiT,GAAA,EAAD,CAAOG,UAAQ,EAACF,IAAK+E,KAAMnK,KAAK,SAChChO,EAAAC,EAAAC,cAAA,KAAGE,UAAU,QAASqK,EAAK7D,OAAOzG,GAAUsK,EAAK7D,OAAOzG,GAAG+N,OAAS,GAAKzD,EAAK7D,OAAOzG,GAAG6L,UAAU,EAAG,IAAM,MAAQvB,EAAK7D,OAAOzG,GAAxF,IACvCH,EAAAC,EAAAC,cAAA,KAAGE,UAAU,WAAWqK,EAAK7D,OAAOqN,OAASxJ,EAAK7D,OAAOqN,OAAS,EAAlE,YAGFjU,EAAAC,EAAAC,cAAA,eAMFiZ,GAAa9Y,IAAH+Y,MAQVC,GAAS,kBACbrZ,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAAOC,MAAOkO,IACX,SAAAtL,GAA8B,IAA3BxC,EAA2BwC,EAA3BxC,QAASC,EAAkBuC,EAAlBvC,MAAOb,EAAWoD,EAAXpD,KAClB,GAAIY,EAAS,MAAO,MACpB,GAAIC,EAAO,MAAM,IAAI9G,MAAJ,WAAA6C,OAAqBiE,IACtC,OAAOb,EAAK+C,QAAQU,OAAS,EAC3BzD,EAAK+C,QAAQsI,IAAI,SAACwD,EAAOvD,GAAR,OAAgB/V,EAAAC,EAAAC,cAACqZ,GAAD,CAAcpO,QAASmO,EAAMnZ,GAAI8T,OAAQqF,EAAMrF,OAAQgC,IAAKF,MAE7F/V,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6G,SAAA,8BAMF0S,GAAiBnZ,IAAHoZ,MAQdC,GAAe,kBACnB1Z,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAAOC,MAAOuO,IACX,SAAAzL,GAA8B,IAA3B1C,EAA2B0C,EAA3B1C,QAASC,EAAkByC,EAAlBzC,MAAOb,EAAWsD,EAAXtD,KAClB,GAAIY,EAAS,MAAO,MACpB,GAAIC,EAAO,MAAM,IAAI9G,MAAJ,WAAA6C,OAAqBiE,IACtC,OAAOb,EAAK+C,QAAQU,OAAS,EAC3BzD,EAAK+C,QAAQsI,IAAI,SAAC6D,EAAa5D,GAAd,OAAsB/V,EAAAC,EAAAC,cAACqZ,GAAD,CAAcpO,QAASwO,EAAYxZ,GAAI8T,OAAQ0F,EAAY1F,OAAQgC,IAAKF,MAE/G/V,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6G,SAAA,oCAMF8S,GAAa,SAAAjT,GAAK,OACtB3G,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAAOC,MAAO5J,GACX,SAAA+J,GAA8B,IACzBoC,EADFnC,EAA2BD,EAA3BC,QAASC,EAAkBF,EAAlBE,MAAOb,EAAWW,EAAXX,KAUlB,OARIa,GACFkC,EAAU,KACV9E,QAAQ4C,MAAR,2BAAAjE,OAAyCiE,KAEzCkC,EADSnC,EACC,IAEAZ,EAAK+C,QAAQU,OAGvBlO,EAAAC,EAAAC,cAAA,OAAKC,GAAG,eACNH,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAMC,QAAS,GAAIC,cAAc,UAC/BzL,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAawD,OAAQ,GAAIC,OAAQ,EAAGC,SAAU,EAAGzD,UAAU,OAAOvL,UAAU,sBAC1EJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,WAAWoN,EAAxB,cAUJxN,EAAAC,EAAAC,cAACqL,EAAA,EAAD,KACEvL,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAaC,UAAU,UACrB3L,EAAAC,EAAAC,cAAC2Z,GAAiBlT,KAGtB3G,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAMnL,UAAU,eACdJ,EAAAC,EAAAC,cAACqL,EAAA,EAAKkK,IAAN,KACEzV,EAAAC,EAAAC,cAAA,KAAGwM,MAAO,CAAEoN,YAAa,SAAzB,yBAEF9Z,EAAAC,EAAAC,cAACsH,GAAA,EAAD,MACAxH,EAAAC,EAAAC,cAACqL,EAAA,EAAKkK,IAAN,CAAUrV,UAAU,cAAckT,UAAQ,GACxCtT,EAAAC,EAAAC,cAAC6Z,GAAD,QAGJ/Z,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAMnL,UAAU,eACdJ,EAAAC,EAAAC,cAACqL,EAAA,EAAKkK,IAAN,KACEzV,EAAAC,EAAAC,cAAA,KAAGwM,MAAO,CAAEoN,YAAa,SAAzB,iBAEF9Z,EAAAC,EAAAC,cAACsH,GAAA,EAAD,MACAxH,EAAAC,EAAAC,cAACqL,EAAA,EAAKkK,IAAN,CAAUrV,UAAU,cAAckT,UAAQ,GACxCtT,EAAAC,EAAAC,cAAC8Z,GAAD,YAgBCC,GAPQ,SAAAC,GAAW,OAChCla,EAAAC,EAAAC,cAACyX,EAAA,EAAD,KACE3X,EAAAC,EAAAC,cAACyX,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWpK,OAAQ,SAAA9G,GAAK,OAAI3G,EAAAC,EAAAC,cAACia,GAADrS,OAAAiQ,OAAA,GAAgBpR,EAAhB,CAAuB9B,aAAcqV,EAAYrV,mBAC/F7E,EAAAC,EAAAC,cAACyX,EAAA,EAAD,CAAOE,KAAK,iBAAiBpK,OAAQ,SAAA9G,GAAK,OAAI3G,EAAAC,EAAAC,cAACka,GAADtS,OAAAiQ,OAAA,GAAkBpR,EAAlB,CAAyB9B,aAAcqV,EAAYrV,mDCzIhFwV,8MACnBhS,MAAQ,CACN8C,QAAS,GACT+H,MAAO,GACPsC,YAAa,GACbvB,OAAQ,GACRqG,QAAS,GACTC,sBAAuB,CAAErH,MAAO,GAAIsC,YAAa,GAAIgF,OAAQ,GAAIvG,OAAQ,IACzEwG,YAAY,EACZC,kBAAkB,EAClBC,cAAc,EACdC,aAAa,EACbC,cAAc,EACdC,WAAW,KAWbC,cAAgB,SAACC,EAAW1R,GAAU,IAAAoF,EACmEjG,EAAKJ,MAAtGkS,EAD8B7L,EAC9B6L,sBAAuBE,EADO/L,EACP+L,WAAYC,EADLhM,EACKgM,iBAAkBC,EADvBjM,EACuBiM,aAAcC,EADrClM,EACqCkM,YAAaC,EADlDnM,EACkDmM,aAEtF,OAAQG,GACN,IAAK,QACHP,EAAuB,KAAVnR,EACbiR,EAAsBrH,MAAQuH,EAAa,GAAK,mBAChD,MACF,IAAK,UACHI,EAAe5N,SAAMgO,YAAY3R,GACjCZ,QAAQC,IAAI,6BAA8BsE,SAAMgO,YAAY3R,IAC5DZ,QAAQC,IAAI,UAAWW,GACvBiR,EAAsBpP,QAAU0P,EAAe,GAAK,qBACpD,MACF,IAAK,cACHH,EAA6B,KAAVpR,EACnBiR,EAAsB/E,YAAckF,EAAmB,GAAK,yBAC5D,MACF,IAAK,SACHE,EAActR,EAAQ,EACtBiR,EAAsBtG,OAAS2G,EAAc,GAAK,oBAClD,MACF,IAAK,UACHD,EAAerR,EAAQ,EACvBiR,EAAsBD,QAAUK,EAAe,GAAK,qBAKxDlS,EAAKW,SACH,CACEmR,wBACAE,aACAC,mBACAC,eACAC,cACAC,gBAEFpS,EAAKyS,iBAITA,aAAe,WAAM,IAAAC,EAC+D1S,EAAKJ,MAA/EoS,EADWU,EACXV,WAAYC,EADDS,EACCT,iBAAkBE,EADnBO,EACmBP,YAAaD,EADhCQ,EACgCR,aAAcE,EAD9CM,EAC8CN,aACjEpS,EAAKW,SAAS,CAAE0R,UAAWL,GAAcC,GAAoBE,GAAeD,GAAgBE,OAG9FO,YAAc,SAACjS,GACb,IAAI5B,EAAO4B,EAAME,OAAO9B,KACpB+B,EAAQH,EAAME,OAAOC,MACzBb,EAAKW,SAALtB,OAAAuT,GAAA,EAAAvT,CAAA,GAAiBqB,EAAME,OAAO9B,KAAO4B,EAAME,OAAOC,OAAS,WACzDb,EAAKsS,cAAcxT,EAAM+B,QAI7BmF,kCAAe,SAAAjM,IAAA,IAAA8Y,EAAA3a,EAAAwK,EAAA+H,EAAAsC,EAAAvB,EAAAqG,EAAA9R,EAAA,OAAA9F,EAAAzC,EAAA0C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAwY,EAC+D7S,EAAKJ,MAAzE1H,EADK2a,EACL3a,OADK2a,EACGR,UAAW3P,EADdmQ,EACcnQ,QAAS+H,EADvBoI,EACuBpI,MAAOsC,EAD9B8F,EAC8B9F,YAAavB,EAD3CqH,EAC2CrH,OAAQqG,EADnDgB,EACmDhB,QADnD1X,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAKQnC,EAAO4a,eAAepQ,EAASmP,EAASrG,EAAQuH,KAAKC,UAAU,CAAEvI,QAAOsC,iBALhF,OAKHhN,EALG5F,EAAA2B,KAMTmE,QAAQC,IAAI,OAAQH,GANX5F,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAc,GAAAd,EAAA,SAQT8F,QAAQ4C,MAAR1I,EAAAc,IACAR,MAAM,6BATG,QAAAN,EAAAE,KAAA,iBAYXI,MAAM,mCAZK,yBAAAN,EAAAgB,SAAApB,EAAA,2NA9DLqC,EAAiBvC,KAAKqE,MAAtB9B,sBACac,GAAUd,UAAzBlE,SACN2B,KAAK8G,SAAS,CACZzI,8IA2EK,IAAA+a,EACkDpZ,KAAK+F,MAAtD4L,EADDyH,EACCzH,OAAQqG,EADToB,EACSpB,QAASpH,EADlBwI,EACkBxI,MAAOsC,EADzBkG,EACyBlG,YAAarK,EADtCuQ,EACsCvQ,QAC7C,OACEnL,EAAAC,EAAAC,cAAA,OAAKC,GAAG,uBACNH,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,KACE/I,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAM+H,UAAQ,EAAC9H,QAAS,IACtBxL,EAAAC,EAAAC,cAACqL,EAAA,EAAKkK,IAAN,CAAUkG,WAAS,GACjB3b,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAawD,OAAQ,GAAIC,OAAQ,GAAIC,SAAU,IAC7CpP,EAAAC,EAAAC,cAAC8I,GAAA,EAAD,CACEzB,KAAK,QACLqU,aAAW,EACX5N,KAAK,MACLsB,UAAQ,EACRrG,YAAY,iBACZC,SAAU5G,KAAK8Y,YACf9R,MAAO4J,IAETlT,EAAAC,EAAAC,cAACsH,GAAA,EAAD,QAGJxH,EAAAC,EAAAC,cAACqL,EAAA,EAAKkK,IAAN,CAAUkG,WAAS,GACjB3b,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAawD,OAAQ,GAAIC,OAAQ,GAAIC,SAAU,IAC7CpP,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAASzO,UAAU,eACjBJ,EAAAC,EAAAC,cAAC6I,EAAA,EAAKC,MAAN,CACEzB,KAAK,UACLgI,MAAM,2BACNtG,YAAY,UACZ4S,OAAK,EACL3S,SAAU5G,KAAK8Y,YACf9R,MAAO6B,IAETnL,EAAAC,EAAAC,cAAC6I,EAAA,EAAKC,MAAN,CACEzB,KAAK,SACLgI,MAAM,mBACNtG,YAAY,SACZ4S,OAAK,EACL7L,KAAK,SACL9G,SAAU5G,KAAK8Y,YACf9R,MAAO2K,IAETjU,EAAAC,EAAAC,cAAC6I,EAAA,EAAKC,MAAN,CACEzB,KAAK,UACLgI,MAAM,2BACNtG,YAAY,MACZ4S,OAAK,EACL7L,KAAK,SACL9G,SAAU5G,KAAK8Y,YACf9R,MAAOgR,OAKfta,EAAAC,EAAAC,cAACqL,EAAA,EAAKkK,IAAN,KACEzV,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,CAAawD,OAAQ,GAAIC,OAAQ,GAAIC,SAAU,IAC7CpP,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAMC,QAAQ,SACZxL,EAAAC,EAAAC,cAACqL,EAAA,EAAKG,OAAN,KACE1L,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAASzO,UAAU,eACjBJ,EAAAC,EAAAC,cAAC6I,EAAA,EAAK+S,SAAN,CACEvU,KAAK,cACLgI,MAAM,cACNtG,YAAY,YACZ8S,KAAM,GACN7S,SAAU5G,KAAK8Y,YACf9R,MAAOkM,SAOnBxV,EAAAC,EAAAC,cAACqL,EAAA,EAAKkK,IAAN,KACEzV,EAAAC,EAAAC,cAAC8b,GAAA,EAAD,CAAY9M,OAAQ,GAAIC,OAAQ,EAAGC,SAAU,EAAGhP,UAAU,iBACxDJ,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CAAQyE,KAAK,QAAQC,MAAM,MAAMhH,QAAS3E,KAAKmM,cAA/C,+BAvKgChF,4SCOzC,IAAMwS,GAAY,CACvBC,SAAU,CACR/J,OAAQ,SAACD,EAAUiK,EAAX9P,GAEN,ON8DC,SAAiC6F,EAAUM,GAsBhD,OArBAN,EAASO,gBAAkBP,EAASO,eAGhCP,EAASkK,QACFpL,GAAeK,QACfa,EAASmK,WAAanK,EAASoK,QAC/BtL,GAAeM,OACfY,EAASmK,YAAcnK,EAASoK,QAChCtL,GAAeO,OACfmB,GAAcR,EAAUM,GACxBxB,GAAeI,YACfuB,GAAeT,EAAUM,GACzBxB,GAAeG,aACfoB,GAAQL,EAAUM,GAClBxB,GAAeE,QACf0B,GAAqBV,EAAUM,GAC/BxB,GAAeQ,mBAEfR,GAAeC,QMjFfsL,CAAwBrK,GAFO7F,EAAZmQ,MACMC,UAAU,CAAExR,MAAOlK,IAA3CyR,gBAGVU,MAAO,SAAAhB,GACL,IAEE,OADgBsJ,KAAKkB,MAAMxK,EAASyK,SACrBzJ,OAAShB,EAASyK,SAAW,GAC5C,MAAOnO,GAEP,OADA9F,QAAQC,IAAR,sDAAAtB,OAAkE6K,EAASkC,cAA3E,uBAAA/M,OAA8G6K,EAASyK,UAChHzK,EAASyK,SAAW,KAG/BnH,YAAa,SAAAtD,GACX,IAEE,OADgBsJ,KAAKkB,MAAMxK,EAASyK,SACrBnH,aAAe,GAC9B,MAAOhH,GAEP,OADA9F,QAAQC,IAAR,4DAAAtB,OAAwE6K,EAASkC,cAAjF,uBAAA/M,OAAoH6K,EAASyK,UACtH,KAGXrK,YAAa,SAACJ,EAAUiK,EAAXxO,GAAgC,IACnC6E,EADmC7E,EAAZ6O,MACCC,UAAU,CAAExR,MAAOlK,IAA3CyR,cACR,OAAIE,GAAcR,EAAUM,IAClBN,EAASO,eNrCW,GACD,GMoCoDD,EAE1E,GAETH,WAAY,SAACH,EAAUiK,EAAXtO,GAAgC,IAClC2E,EADkC3E,EAAZ2O,MACEC,UAAU,CAAExR,MAAOlK,IAA3CyR,cACR,OAAIG,GAAeT,EAAUM,GACpBN,EAASO,eN5CY,GM4C4BD,EAEnD,GAETJ,aAAc,SAACF,EAAUiK,EAAXpO,GAAgC,IACpCyE,EADoCzE,EAAZyO,MACAC,UAAU,CAAExR,MAAOlK,IAA3CyR,cACR,OAAID,GAAQL,EAAUM,GACbN,EAASO,eAAiBD,EAE5B,GAETsE,mBAAoB,SAAC5E,EAAUiK,EAAX/Q,GAAgC,IAC1CoH,EAD0CpH,EAAZoR,MACNC,UAAU,CAAExR,MAAOlK,IAA3CyR,cACR,SAAII,GAAqBV,EAAUM,IAAmBN,EAASmK,aAMnEO,SAAU,CACRC,cAAe,SAACC,EAAG5R,EAAJ0D,GAA6B,IAAZ4N,EAAY5N,EAAZ4N,MACxBrc,EAAE,YAAAkH,OAAe6D,EAAU/K,IAC3B4c,EAAW1c,IAAH2c,MAWR9K,EAAWsK,EAAMS,aAAa,CAAEF,WAAU5c,OAC1CsK,EAAI3C,OAAAoV,EAAA,EAAApV,CAAA,GACLoK,EADK,CAERC,OAAQjH,EAAUiH,OAClBe,MAAOhI,EAAUgI,MACjBsC,YAAatK,EAAUsK,YACvBlD,YAAapH,EAAUoH,YACvBD,WAAYnH,EAAUmH,WACtBD,aAAclH,EAAUkH,aACxB0E,mBAAoB5L,EAAU4L,qBAGhC,OADA0F,EAAMhS,UAAU,CAAErK,KAAIsK,SACfA,yVCzFN,IAAM0S,GAAW9c,IAAH+c,sKCoBrB1U,QAAQC,IAAI1E,0eAEZ,IAAMuY,GAAQ,IAAIa,KAEZpV,GAAS,IAAIqV,KAAa,CAC9Bd,SACAe,KAAM,IAAIC,KAAS,CACjBC,IAAKxZ,kEAEPgY,aACAkB,cAGIO,GAAc,CAClB7Y,aAAc,GACdkK,eAAgB,GAChBE,WAAY,GACZD,YAAa,GACbwD,cAAe,GACfzF,aAAc,IAEhByP,GAAMhS,UAAU,CACdC,KAAK3C,OAAAoV,EAAA,EAAApV,CAAA,GAAM4V,GAAP,CAAoB7Y,aAAc9B,OAAOS,aAAac,QAAQ,iBAAmB,OAEvF2D,GAAO0V,aAAa,kBAAMnB,GAAMhS,UAAU,CAAEC,KAAMiT,OAElD,IAAME,GAAevd,IAAHwd,MAMZvQ,GAAWC,aAAM,CACrBuQ,iBAAkB,SAAAzR,GAAA,IAAGoB,EAAHpB,EAAGoB,OAAH,OAAgBzN,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAAOC,MAAO2S,IAAenQ,IAC/DG,SAAU,SAAAD,GAAA,IAAGF,EAAHE,EAAGF,OAAH,OAAgBzN,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAAOC,MAAOlK,GAAe0M,MAyH1CsQ,eArHb,SAAAA,EAAYpX,GAAO,IAAA8B,EAAA,OAAAX,OAAAkW,EAAA,EAAAlW,CAAAxF,KAAAyb,IACjBtV,EAAAX,OAAAmW,EAAA,EAAAnW,CAAAxF,KAAAwF,OAAAoW,EAAA,EAAApW,CAAAiW,GAAAI,KAAA7b,KAAMqE,KACD0B,MAAQ,CACX+V,UAAU,EACVrR,aAAc,IACdiC,YAAa,IACbD,eAAgB,KANDtG,2MAYXnG,KAAK6F,cAAa,UACxB7F,KAAK8G,SAAS,CAAEgV,UAAU,mLAGTC,mHAGPpW,GAAOgD,MAAM,CACrBA,MAAO2S,4BAFC/Y,IAAR4F,KAAQ5F,sBAOAoD,GAAOgD,MAAM,CACrBA,MAAOlK,2BAFP0J,KAAQsC,iBAAciC,gBAAawD,kBAAezD,mBAAgBE,eAK/DlC,IAAgBsR,oCACMhY,GAAcxB,kBAAjChE,mBACgBA,EAAWyd,kBAAjCvR,SAA4C,GAC5CA,EAAeE,SAAMyI,aAAa3I,cAG/BiC,GAAgBwD,IAAiB6L,oCACf1Y,oBAAfhF,mBACcA,EAAOqO,6BAA3BA,mBACsBrO,EAAO4d,2BAA7B/L,kCAGkBxM,gBAAdpF,SACDmO,IAAkBsP,oCACEzd,EAAM4d,UAAUva,sDAAvC8K,iBAGEA,GAAkBC,IACdyP,EAAc1P,EAAe2P,GAAG,GAAK1P,EAAY2P,WAAatR,WAAWJ,SAAMC,YAAY6B,IAAmB,EACpHE,EAAahC,SAAM2R,WAAWH,EAAY7I,aAGtCiJ,EAAc,CAClB9P,eAAgBA,EAAe6G,WAC/B3G,WAAYA,EAAW2G,WACvB5G,YAAaA,EAAY4G,WACzBpD,cAAeA,EAAcoD,WAC7B7I,aAAcA,EAAa6I,YAE7BlN,QAAQC,IAAI,gBAAiBkW,GAE7B5W,GAAOuC,UAAU,CACfC,KAAMoU,oIAID,IAAAhW,EAAAvG,KACP,OAAOA,KAAK+F,MAAM+V,SAChBpe,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAAgB/C,OAAQA,IACtBjI,EAAAC,EAAAC,cAACiH,EAAA,EAAD,CAAQ2X,SAAU7a,IAChBjE,EAAAC,EAAAC,cAAC6e,GAAD,KACG,SAAA3T,GAAoC,IAAjC0S,EAAiC1S,EAAjC0S,iBAAiC1S,EAAfwC,SACpB,OACE5N,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6G,SAAA,KACE9G,EAAAC,EAAAC,cAACH,EAAD,MACAC,EAAAC,EAAAC,cAAC8e,GAAD,CAAQna,aAAciZ,EAAiBrT,KAAK5F,aAAcoD,OAAQA,GAAQE,aAAcU,EAAKV,eAC7FnI,EAAAC,EAAAC,cAACkM,GAAD,KACEpM,EAAAC,EAAAC,cAACyX,EAAA,EAAD,KACE3X,EAAAC,EAAAC,cAACyX,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,IACLpK,OAAQ,SAAA9G,GAAK,OAAI3G,EAAAC,EAAAC,cAAC+e,GAADnX,OAAAiQ,OAAA,GAAUpR,EAAV,CAAiB9B,aAAciZ,EAAiBrT,KAAK5F,mBAExE7E,EAAAC,EAAAC,cAACyX,EAAA,EAAD,CACEE,KAAK,aACLpK,OAAQ,SAAA9G,GAAK,OAAG3G,EAAAC,EAAAC,cAACgf,GAADpX,OAAAiQ,OAAA,GAAkBpR,EAAlB,CAAyB9B,aAAciZ,EAAiBrT,KAAK5F,mBAE/E7E,EAAAC,EAAAC,cAACyX,EAAA,EAAD,CACEE,KAAK,WACLpK,OAAQ,SAAA9G,GAAK,OAAI3G,EAAAC,EAAAC,cAACif,GAADrX,OAAAiQ,OAAA,GAAgBpR,EAAhB,CAAuB9B,aAAciZ,EAAiBrT,KAAK5F,mBAE9E7E,EAAAC,EAAAC,cAACyX,EAAA,EAAD,CACEE,KAAK,sBACLpK,OAAQ,SAAA9G,GAAK,OACXmX,EAAiBrT,KAAK5F,aACpB7E,EAAAC,EAAAC,cAACkf,GAADtX,OAAAiQ,OAAA,GAAwBpR,EAAxB,CAA+B9B,aAAciZ,EAAiBrT,KAAK5F,gBAEnE7E,EAAAC,EAAAC,cAACyX,EAAA,EAAD,CAAUvQ,GAAI,CAAEiP,SAAU,UAIhCrW,EAAAC,EAAAC,cAACyX,EAAA,EAAD,CACE0H,UAAW,SAAA1Y,GAAK,OAAI3G,EAAAC,EAAAC,cAAC+e,GAADnX,OAAAiQ,OAAA,GAAUpR,EAAV,CAAiB9B,aAAciZ,EAAiBrT,KAAK5F,0BAW3F7E,EAAAC,EAAAC,cAAA,gCAjHYsJ,IAAMC,yBCnDxB6V,IAAS7R,OAAOzN,EAAAC,EAAAC,cAACqf,GAAD,MAASC,SAASC,eAAe,6BCRjD9f,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.008f527c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bull.204229a6.png\";","import React from 'react';\n\n\nexport default () => (\n  <div id=\"background\">\n    <div className=\"blurred_image\" />\n    <div className=\"dark_overlay\" />\n  </div>\n)\n","import gql from \"graphql-tag\";\n\nexport const GET_EXCHANGE_RATE = gql`\n  query ExchangeRate {\n    exchangeRate @client\n  }\n`;\n\nexport const GET_TOTAL_SHARES = gql`\n  query TotalShares {\n    totalShares @client\n  }\n`;\n\nexport const GET_GUILD_BANK_VALUE = gql`\n  query GuildBankValue {\n    guildBankValue @client\n  }\n`;\n\nexport const GET_SHARE_VALUE = gql`\n  query ShareValue {\n    shareValue @client\n  }\n`;\n\nexport const GET_CURRENT_PERIOD = gql`\n  query CurrentPeriod {\n    currentPeriod @client\n  }\n`;\n\nexport const GET_METADATA = gql`\n  query Metadata {\n    exchangeRate @client\n    totalShares @client\n    guildBankValue @client\n    shareValue @client\n    currentPeriod @client\n  }\n`;\n\nexport const GET_MEMBER_DETAIL = gql`\n  query Member($address: String!) {\n    member(id: $address) {\n      id\n      shares\n      isActive\n      tokenTribute\n      delegateKey\n    }\n  }\n`;\n\nexport const GET_MEMBER_DETAIL_WITH_VOTES = gql`\n  query Member($address: String!) {\n    member(id: $address) {\n      id\n      shares\n      isActive\n      tokenTribute\n      delegateKey\n      votes {\n        uintVote\n          proposal {\n          id\n          timestamp\n          tokenTribute\n          sharesRequested\n          processed\n          didPass\n          aborted\n          yesVotes\n          noVotes\n          proposalIndex\n          details\n          status @client\n          title @client\n          description @client\n          gracePeriod @client\n          votingEnds @client\n          votingStarts @client\n          readyForProcessing @client\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_MEMBERS = gql`\n  {\n    members(first: 100, where: { shares_gt: 0, isActive: true }) {\n      id\n      shares\n      isActive\n      tokenTribute\n      delegateKey\n    }\n  }\n`;\n\n// TODO filter this to get current proposals?\nexport const GET_PROPOSALS = gql`\n  {\n    proposals(first: 100) {\n      id\n    }\n  }\n`;\n\nexport const GET_PROPOSAL_LIST = gql`\n  {\n    proposals(first: 100, orderBy: proposalIndex, orderDirection: desc) {\n      id\n      timestamp\n      tokenTribute\n      sharesRequested\n      processed\n      didPass\n      aborted\n      yesVotes\n      noVotes\n      proposalIndex\n      votes(first: 100) {\n        member {\n          shares\n        }\n        uintVote\n      }\n      details\n      startingPeriod\n      processed\n      status @client\n      title @client\n      description @client\n      gracePeriod @client\n      votingEnds @client\n      votingStarts @client\n      readyForProcessing @client\n    }\n  }\n`;\n\nexport const GET_PROPOSAL_HISTORY = gql`\n  query Proposals($id: String!) {\n    votes(first: 100, where: { memberAddress: $id }) {\n      uintVote\n      proposal {\n        id\n        timestamp\n        tokenTribute\n        sharesRequested\n        processed\n        didPass\n        aborted\n        yesVotes\n        noVotes\n        proposalIndex\n        details\n        startingPeriod\n        processed\n        status @client\n        title @client\n        description @client\n        gracePeriod @client\n        votingEnds @client\n        votingStarts @client\n        readyForProcessing @client\n      }\n    }\n  }\n`;\n\nexport const GET_PROPOSAL_DETAIL = gql`\n  query Proposal($id: String!) {\n    proposal(id: $id) {\n      id\n      timestamp\n      tokenTribute\n      sharesRequested\n      processed\n      didPass\n      aborted\n      yesVotes\n      noVotes\n      proposalIndex\n      votes(first: 100) {\n        member {\n          id\n          shares\n        }\n        uintVote\n      }\n      details\n      startingPeriod\n      processed\n      status @client\n      title @client\n      description @client\n      gracePeriod @client\n      votingEnds @client\n      votingStarts @client\n      readyForProcessing @client\n    }\n  }\n`;\n\nexport const SET_PROPOSAL_ATTRIBUTES = gql`\n  mutation SetAttributes(\n    $status: String!, \n    $title: String!, \n    $description: String!, \n    $gracePeriod: Number!, \n    $votingEnds: Number!, \n    $votingStarts: Number!, \n    $readyForProcessing: Bool!\n  ) {\n    setAttributes(\n      status: $status, \n      title: $title, \n      description: $description, \n      gracePeriod: $gracePeriod, \n      votingEnds: $votingEnds, \n      votingStarts: $votingStarts, \n      readyForProcessing: $readyForProcessing\n    ) @client {\n      status\n      title\n      description\n      gracePeriod\n      votingEnds\n      votingStarts\n      readyForProcessing\n    }\n  }\n`;\n","import SafeProvider from \"safe-web3-provider\"\nimport { ethers } from 'ethers';\n\nconst molochAbi = require('./abi/Moloch.abi.json')\nconst erc20Abi = require('./abi/ERC20.abi.json')\nconst medianizerAbi = require('./abi/Medianizer.abi.json')\n\nlet moloch\nlet token\nlet medianizer\nlet eth\n\nexport async function initMetamask() {\n  if (!window.ethereum && !window.web3) {\n    // Non-DApp browsers won't work.\n    alert(\"Web3 not detected.\");\n  }\n  if (window.ethereum) {\n    // Modern DApp browsers need to enable Metamask access.\n    try {\n      await window.ethereum.enable()\n      let web3Provider = window['ethereum'] || window.web3.currentProvider\n      eth = new ethers.providers.Web3Provider(web3Provider);\n      localStorage.setItem(\"loginType\", \"metamask\");\n    } catch (error) {\n      alert(\"Metamask needs to be enabled.\")\n    }\n  }\n  return eth\n}\n\nexport function initGnosisSafe() {\n  /**\n   *  Create Safe Provider\n   */\n  const provider = new SafeProvider({\n    // TODO: CHANGE THIS TO INFURA/ALCHEMY\n    rpcUrl: process.env.REACT_APP_ETH_URL\n  });\n\n  /**\n   *  Create Web3\n   */\n  eth = new ethers.providers.Web3Provider(provider);\n  localStorage.setItem(\"loginType\", \"gnosis\");\n  return eth\n}\n\nexport async function getEthSigner() {\n  if (!eth) {\n    if (localStorage.getItem(\"loginType\") === \"metamask\") {\n      eth = await initMetamask()\n    } else if (localStorage.getItem(\"loginType\") === \"gnosis\") {\n      eth = await initGnosisSafe()\n    } else {\n      throw new Error(\"Not logged in with web3.\")\n    }\n  }\n  return eth\n}\n\nexport async function initMoloch(loggedInUser) {\n  if (loggedInUser) {\n    eth = await getEthSigner()\n    moloch = new ethers.Contract(process.env.REACT_APP_MOLOCH_ADDRESS, molochAbi, eth.getSigner())\n  } else {\n    const provider = ethers.getDefaultProvider();\n    moloch = new ethers.Contract(process.env.REACT_APP_MOLOCH_ADDRESS, molochAbi, provider)\n  }\n  return moloch\n}\n\nexport async function initToken(loggedInUser) {\n  if (loggedInUser) {\n    eth = await getEthSigner()\n    token = new ethers.Contract(process.env.REACT_APP_TOKEN_ADDRESS, erc20Abi, eth.getSigner())\n  } else {\n    const provider = ethers.getDefaultProvider();\n    token = new ethers.Contract(process.env.REACT_APP_TOKEN_ADDRESS, erc20Abi, provider)\n  }\n  // token = new web3.eth.Contract(erc20Abi, process.env.REACT_APP_TOKEN_ADDRESS)\n  return token\n}\n\nexport async function initMedianizer() {\n  // pull from mainnet\n  let provider = ethers.getDefaultProvider();\n  medianizer = new ethers.Contract(process.env.REACT_APP_MEDIANIZER_ADDRESS, medianizerAbi, provider)\n  return medianizer\n}\n\nexport async function getMoloch(loggedInUser) {\n  await initMoloch(loggedInUser)\n  return moloch\n}\n\nexport async function getToken(loggedInUser) {\n  await initToken(loggedInUser)\n  return token\n}\n\nexport async function getMedianizer() {\n  if (!medianizer) {\n    await initMedianizer()\n  }\n  return medianizer\n}","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Grid, Icon, Dropdown, Form, Button } from \"semantic-ui-react\";\nimport { Query, withApollo } from \"react-apollo\";\nimport { GET_MEMBER_DETAIL } from \"../helpers/graphQlQueries\";\nimport { getMoloch, initMetamask, initGnosisSafe } from \"../web3\";\n\nconst MainMenu = props => (\n  <div className=\"dropdownItems\">\n    {props.member && props.member.isActive ? (\n      <>\n        <Dropdown.Item className=\"item\" onClick={() => props._handleCloseDropdown()}>\n          <Link to={`/members/${props.member.id}`} className=\"link\">\n            <p>\n              <Icon name=\"user\" />\n              View Profile\n            </p>\n          </Link>\n        </Dropdown.Item>\n        <Dropdown.Divider />\n        <Dropdown.Item\n          icon=\"key\"\n          className=\"item\"\n          content=\"Change Delegate Key\"\n          onClick={() => {\n            props._handleOpenDropdown();\n            props.onLoadChangeDelegateKey();\n          }}\n        />\n        <Dropdown.Divider />\n        <Dropdown.Item\n          icon=\"dollar\"\n          className=\"item\"\n          content=\"Ragequit\"\n          onClick={() => {\n            props._handleOpenDropdown();\n            props.onLoadWithdrawLootToken();\n          }}\n        />\n        <Dropdown.Divider />\n      </>\n    ) : null}\n    <Dropdown.Item className=\"item\">\n      <Link\n        to=\"/login\"\n        className=\"link\"\n        onClick={async () => {\n          props._handleCloseDropdown();\n          window.localStorage.setItem(\"loggedInUser\", \"\");\n          await props.client.resetStore();\n          await props.populateData(true);\n        }}\n      >\n        <p>\n          <Icon name=\"power off\" />\n          Sign Out\n        </p>\n      </Link>\n    </Dropdown.Item>\n  </div>\n);\nconst MainMenuWrapped = withApollo(MainMenu);\n\nclass ChangeDelegateKeyMenu extends React.Component {\n  state = {\n    newDelegateKey: \"\"\n  }\n\n  submitChangeDelegateKey = async () => {\n    const { newDelegateKey } = this.state;\n    const { moloch } = this.props\n\n    console.log(`Sending moloch.updateDelegateKey(${newDelegateKey})`);\n\n    const tx = await moloch.updateDelegateKey(newDelegateKey);\n    console.log(\"tx: \", tx);\n  };\n\n  render() {\n    const { newDelegateKey } = this.state;\n    const { onLoadMain } = this.props\n    return (\n      <div>\n        <Dropdown.Item icon=\"arrow left\" className=\"item\" content=\"Back to Menu\" onClick={() => onLoadMain()} />\n        <Dropdown.Divider />\n        <Dropdown.Item className=\"item submenu\">\n          <p>\n            <Icon name=\"key\" />\n            Change Delegate Key\n          </p>\n          <Form.Input placeholder=\"Enter new key address\" onChange={event => this.setState({ newDelegateKey: event.target.value })} value={newDelegateKey} />\n          <Button onClick={this.submitChangeDelegateKey}>Save</Button>\n        </Dropdown.Item>\n      </div>\n    );\n  }\n}\n\nclass WithdrawLootTokenMenu extends React.Component {\n  state = {\n    ragequitAmount: \"\"\n  };\n\n  submitRagequit = async () => {\n    const { ragequitAmount } = this.state;\n    const { moloch } = this.props;\n\n    console.log(`Sending moloch.ragequit(${ragequitAmount})`);\n\n    const tx = await moloch.ragequit(ragequitAmount);\n    console.log(\"tx: \", tx);\n  };\n\n  render() {\n    const { ragequitAmount } = this.state;\n    const { onLoadMain } = this.props\n    return (\n      <div>\n        <Dropdown.Item icon=\"arrow left\" className=\"item\" content=\"Back to Menu\" onClick={() => onLoadMain()} />\n        <Dropdown.Divider />\n        <Dropdown.Item className=\"item submenu\">\n          <p>\n            <Icon name=\"dollar\" />\n            Ragequit\n          </p>\n          <Form.Input\n            placeholder=\"Number of shares\"\n            onChange={event => this.setState({ ragequitAmount: event.target.value })}\n            value={ragequitAmount}\n          />\n          <Button onClick={this.submitRagequit}>Withdraw</Button>\n        </Dropdown.Item>\n      </div>\n    );\n  }\n}\n\nexport default class Header extends Component {\n  state = {\n    visibleMenu: \"main\",\n    visibleRightMenu: false,\n    moloch: {},\n  };\n\n  async componentDidMount() {\n    const { loggedInUser } = this.props;\n    const moloch = await getMoloch(loggedInUser);\n    this.setState({ moloch });\n  }\n\n  _handleOpenDropdown() {\n    this.setState({ visibleRightMenu: true });\n  }\n\n  _handleCloseDropdown() {\n    this.setState({ visibleRightMenu: false });\n  }\n\n  logIn = async (method) => {\n    const { loggedInUser } = this.props;\n    const { client } = this.props\n    let eth\n    if (method === 'metamask') {\n      eth = await initMetamask();\n    } else if (method === 'gnosis') {\n      eth = await initGnosisSafe()\n    } else {\n      throw new Error('Unsupported Web3 login method')\n    }\n    if (!eth) {\n      return\n    }\n\n    const coinbase = (await eth.listAccounts())[0];\n\n    if (!coinbase) {\n      alert(\"Could not retrieve address from Gnosis Safe/MetaMask, is it configured and this domain whitelisted?\");\n    } else {\n      // Try getting a user by their public address.\n      client.writeData({\n        data: {\n          loggedInUser: coinbase.toLowerCase()\n        }\n      });\n      window.localStorage.setItem(\"loggedInUser\", coinbase.toLowerCase())\n    }\n    \n    const moloch = await getMoloch(loggedInUser);\n    this.setState({ moloch });\n  }\n\n  getTopRightMenuContent(member) {\n    const { loggedInUser } = this.props;\n    let topRightMenuContent;\n    const { moloch } = this.state;\n    if (loggedInUser) {\n      switch (this.state.visibleMenu) {\n        case \"main\":\n          topRightMenuContent = (\n            <MainMenuWrapped\n              member={member}\n              _handleOpenDropdown={() => this._handleOpenDropdown()}\n              _handleCloseDropdown={() => this._handleCloseDropdown()}\n              onLoadChangeDelegateKey={() => this.setState({ visibleMenu: \"changeDelegateKey\" })}\n              onLoadWithdrawLootToken={() => this.setState({ visibleMenu: \"withdrawLootToken\" })}\n            />\n          );\n          break;\n        case \"changeDelegateKey\":\n          topRightMenuContent = (\n            <ChangeDelegateKeyMenu\n              onLoadMain={() => {\n                this._handleOpenDropdown();\n                this.setState({ visibleMenu: \"main\" });\n              }}\n              moloch={moloch}\n            />\n          );\n          break;\n        case \"withdrawLootToken\":\n          topRightMenuContent = (\n            <WithdrawLootTokenMenu\n              onLoadMain={() => {\n                this._handleOpenDropdown();\n                this.setState({ visibleMenu: \"main\" });\n              }}\n              moloch={moloch}\n            />\n          );\n          break;\n        default:\n          break;\n      }\n    } else {\n      topRightMenuContent = (\n        <>\n          <Dropdown.Item\n            icon=\"user\"\n            className=\"item\"\n            content=\"Log In With Metamask\"\n            onClick={() => this.logIn('metamask')}\n          />\n          <Dropdown.Divider />\n          <Dropdown.Item\n            icon=\"user\"\n            className=\"item\"\n            content=\"Log In With Gnosis Safe\"\n            onClick={() => this.logIn('gnosis')}\n          />\n        </>\n      );\n    }\n    return topRightMenuContent;\n  }\n\n  render() {\n    const { loggedInUser } = this.props;\n    return (\n      <Query query={GET_MEMBER_DETAIL} variables={{ address: loggedInUser }}>\n        {({ loading, error, data }) => {\n          if (loading) return \"Loading...\";\n          if (error) throw new Error(`Error!: ${error}`);\n          return (\n            <div id=\"header\">\n              <Grid columns=\"equal\" verticalAlign=\"middle\">\n                {loggedInUser ? (\n                  <Grid.Column textAlign=\"left\" className=\"menu\">\n                    {/* <Dropdown icon=\"bars\">\n                <Dropdown.Menu className=\"menu blurred\" direction=\"right\">\n                  <Link to=\"guildbank\" className=\"item\">\n                    <p>Guild Bank</p>\n                  </Link>\n                  <Dropdown.Divider />\n                  <Link to=\"/members\" className=\"item\">\n                    <p>Members</p>\n                  </Link>\n                  <Dropdown.Divider />\n                  <Link to=\"/proposals\" className=\"item\">\n                    <p>Proposals</p>\n                  </Link>\n                </Dropdown.Menu>\n              </Dropdown> */}\n                  </Grid.Column>\n                ) : null}\n                <Grid.Column textAlign=\"center\" className=\"logo\">\n                  <Link to=\"/\">MOLOCH</Link>\n                </Grid.Column>\n                  <Grid.Column textAlign=\"right\" className=\"dropdown\">\n                    <Dropdown\n                      className=\"right_dropdown\"\n                      open={this.state.visibleRightMenu}\n                      onBlur={() => this._handleCloseDropdown()}\n                      onFocus={() => this._handleOpenDropdown()}\n                      text={loggedInUser ? `${loggedInUser.substring(0, 6)}...` : 'Web3 Login'}\n                    >\n                      <Dropdown.Menu className=\"menu blurred\" direction=\"left\">\n                        {this.getTopRightMenuContent(data.member)}\n                      </Dropdown.Menu>\n                    </Dropdown>\n                  </Grid.Column>\n              </Grid>\n            </div>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n","import React from 'react';\n\n\nexport default ({ children }) => (\n  <div id=\"wrapper\">\n    { children }\n  </div>\n)","import { utils } from \"ethers\";\n\nexport const currencyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n  minimumFractionDigits: 2\n});\n\n/**\n * Converts Wei amount to Dollars\n * @param {*} weiAmount \n * @param {*} exchangeRate in Wei units\n */\nexport function convertWeiToDollars(weiAmount, exchangeRate) {\n  const weitoEth = utils.formatEther(weiAmount)\n  const exchWeiToEth = utils.formatEther(exchangeRate)\n  \n  return currencyFormatter.format(parseFloat(weitoEth * exchWeiToEth))\n}","import React from \"react\";\nimport { Grid, Button, Segment, Modal, Form, Statistic } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { Query } from \"react-apollo\";\nimport { getToken } from \"../web3\";\nimport { utils } from \"ethers\";\nimport { GET_METADATA, GET_MEMBERS, GET_PROPOSALS } from \"../helpers/graphQlQueries\";\nimport { convertWeiToDollars } from \"../helpers/currency\";\nimport { adopt } from \"react-adopt\";\n\nconst Composed = adopt({\n  members: ({ render }) => <Query query={GET_MEMBERS}>{render}</Query>,\n  proposals: ({ render }) => <Query query={GET_PROPOSALS}>{render}</Query>,\n  metadata: ({ render }) => <Query query={GET_METADATA}>{render}</Query>\n});\n\nconst NumMembers = ({ members }) => (\n  <Link to=\"/members\" className=\"link\">\n    <Button size=\"large\" color=\"grey\" className=\"btn_link\">\n      {members.length} Members\n    </Button>\n  </Link>\n);\n\nconst NumProposals = ({ proposals }) => (\n  <Link to=\"/proposals\" className=\"link\">\n    <Button size=\"large\" color=\"grey\" className=\"btn_link\">\n      {proposals.length} Proposals\n    </Button>\n  </Link>\n);\n\nexport default class HomePage extends React.Component {\n  state = {\n    approval: \"\",\n    token: null,\n    userAddress: null\n  };\n\n  async componentDidMount() {\n    const { loggedInUser } = this.props\n    const token = await getToken(loggedInUser);\n\n    this.setState({\n      token\n    });\n  }\n\n  handleChange = e => this.setState({ approval: e.target.value });\n\n  handleSubmit = () => {\n    const { approval, token } = this.state;\n    token.approve(process.env.REACT_APP_MOLOCH_ADDRESS, approval);\n  };\n\n  render() {\n    const { approval } = this.state;\n    return (\n      <Composed>\n        {({ members, proposals, metadata }) => {\n          if (members.loading || proposals.loading || metadata.loading) return <Segment className=\"blurred box\">Loading...</Segment>;\n          if (members.error) throw new Error(`Error!: ${members.error}`);\n          if (proposals.error) throw new Error(`Error!: ${proposals.error}`);\n          if (metadata.error) throw new Error(`Error!: ${metadata.error}`);\n          const { guildBankValue, exchangeRate, totalShares, shareValue } = metadata.data;\n          return (\n            <div id=\"homepage\">\n              <Grid columns={16} verticalAlign=\"middle\">\n                <Grid.Column mobile={16} tablet={6} computer={4} className=\"guild_value\">\n                  {/* <Link to=\"/guildbank\" className=\"text_link\"> */}\n                  <Statistic inverted label=\"Guild Bank Value\" value={convertWeiToDollars(guildBankValue, exchangeRate)} />\n                  {/* </Link> */}\n                </Grid.Column>\n                <Grid.Column mobile={16} tablet={10} computer={8} textAlign=\"center\" className=\"browse_buttons\">\n                  <NumMembers members={members.data.members} />\n                  <NumProposals proposals={proposals.data.proposals} />\n                </Grid.Column>\n                <Grid.Column mobile={16} tablet={6} computer={4} className=\"guild_value\">\n                  <Modal\n                    basic\n                    size=\"small\"\n                    trigger={\n                      <Button size=\"large\" color=\"grey\" className=\"browse_buttons\">\n                        Approve wETH\n                      </Button>\n                    }\n                  >\n                    <Modal.Header>Approve wETH</Modal.Header>\n                    <Modal.Content>\n                      <Form onSubmit={this.handleSubmit}>\n                        <Form.Field>\n                          <label>Amount to Approve</label>\n                          <input placeholder=\"Amount in Wei\" name=\"amount\" value={approval} onChange={this.handleChange} className=\"asset_amount\" />\n                        </Form.Field>\n                        <Button type=\"submit\" color=\"grey\" className=\"btn_link\">\n                          Submit\n                        </Button>\n                      </Form>\n                    </Modal.Content>\n                  </Modal>\n                </Grid.Column>\n\n                <Grid.Column width={16}>\n                  <Segment className=\"blurred box\">\n                    <Grid columns=\"equal\" className=\"graph_values\">\n                      <Grid.Column textAlign=\"left\">\n                        <Statistic inverted label=\"Total Shares\" value={totalShares} />\n                      </Grid.Column>\n                      <Grid.Column textAlign=\"center\">\n                        <Statistic inverted label=\"Total ETH\" value={utils.formatEther(guildBankValue)} />\n                      </Grid.Column>\n                      <Grid.Column textAlign=\"right\">\n                        <Statistic inverted label=\"Share Value\" value={convertWeiToDollars(shareValue, exchangeRate)} />\n                      </Grid.Column>\n                    </Grid>\n                  </Segment>\n                </Grid.Column>\n              </Grid>\n            </div>\n          );\n        }}\n      </Composed>\n    );\n  }\n}\n","import React from 'react';\nimport { Progress, Grid } from 'semantic-ui-react';\n\n\nconst ProgressBar = ({ yes, no }) => {\n  const total = yes + no\n  const percentYes = yes === 0 ? 0 : Math.round((yes / total) * 100)\n  const percentNo = no === 0 ? 0 : Math.round((no / total) * 100)\n  return (\n  <>\n    <div style={{ position: \"relative\" }}>\n      <Progress\n        percent={percentYes + percentNo}\n        color=\"red\"\n        size=\"small\"\n        style={{\n          position: \"absolute\",\n          top: \"0\",\n          width: \"100%\"\n        }}\n        className={no === 0 ? \"hide-bar\" : \"\"}\n      />\n      <Progress percent={percentYes} color=\"green\" size=\"small\" className={yes === 0 ? \"hide-bar\" : \"\"} />\n    </div>\n    <Grid columns=\"equal\">\n      <Grid.Column floated=\"left\">{yes} Yes Votes</Grid.Column>\n      <Grid.Column floated=\"right\" textAlign=\"right\">\n        {no} No Votes\n      </Grid.Column>\n    </Grid>\n  </>\n)};\n\nexport default ProgressBar","import React from \"react\";\n\nexport const VOTING_PERIOD_LENGTH = 35;\nexport const GRACE_PERIOD_LENGTH = 35;\nexport const PERIOD_DURATION = 17280;\n\nexport const ProposalStatus = {\n  Unknown: \"Unknown\",\n  InQueue: \"InQueue\",\n  VotingPeriod: \"VotingPeriod\",\n  GracePeriod: \"GracePeriod\",\n  Aborted: \"Aborted\",\n  Passed: \"Passed\",\n  Failed: \"Failed\",\n  ReadyForProcessing: \"ReadyForProcessing\"\n};\n\nexport function periodsToTime(periods) {\n  const seconds = PERIOD_DURATION * periods;\n\n  const days = Math.floor((seconds % 31536000) / 86400);\n  const hours = Math.floor(((seconds % 31536000) % 86400) / 3600);\n  const minutes = Math.floor((((seconds % 31536000) % 86400) % 3600) / 60);\n\n  let string = \"\";\n  string = days ? `${days} days` : string;\n  string = hours ? `${string} ${hours} hours` : string;\n  string = minutes ? `${string} ${minutes} minutes` : string;\n\n  return string;\n}\n\nexport function getProposalCountdownText(proposal) {\n  switch (proposal.status) {\n    case ProposalStatus.InQueue:\n      return (\n        <>\n          <span className=\"subtext\">Voting Begins: </span>\n          <span>{proposal.votingStarts ? periodsToTime(proposal.votingStarts) : \"-\"}</span>\n        </>\n      );\n    case ProposalStatus.VotingPeriod:\n      return (\n        <>\n          <span className=\"subtext\">Voting Ends: </span>\n          <span>{proposal.votingEnds ? periodsToTime(proposal.votingEnds) : \"-\"}</span>\n        </>\n      );\n    case ProposalStatus.GracePeriod:\n      return (\n        <>\n          <span className=\"subtext\">Grace Period Ends: </span>\n          <span>{proposal.gracePeriod ? periodsToTime(proposal.gracePeriod) : \"-\"}</span>\n        </>\n      );\n    case ProposalStatus.Passed:\n      return <span className=\"subtext\">Passed</span>;\n    case ProposalStatus.Failed:\n      return <span className=\"subtext\">Failed</span>;\n    case ProposalStatus.Aborted:\n      return <span className=\"subtext\">Aborted</span>;\n    case ProposalStatus.ReadyForProcessing:\n      return <span className=\"subtext\">Ready For Processing</span>;\n    default:\n      return <></>;\n  }\n}\n\nexport const inQueue = (proposal, currentPeriod) => currentPeriod < proposal.startingPeriod;\n\nexport const inGracePeriod = (proposal, currentPeriod) =>\n    currentPeriod > proposal.startingPeriod + VOTING_PERIOD_LENGTH &&\n    currentPeriod < proposal.startingPeriod + VOTING_PERIOD_LENGTH + GRACE_PERIOD_LENGTH;\n\nexport const inVotingPeriod = (proposal, currentPeriod) => currentPeriod >= proposal.startingPeriod && currentPeriod <= proposal.startingPeriod + VOTING_PERIOD_LENGTH;\n\nexport const passedVotingAndGrace = (proposal, currentPeriod) => currentPeriod > proposal.startingPeriod + VOTING_PERIOD_LENGTH + GRACE_PERIOD_LENGTH;\n\nexport function determineProposalStatus(proposal, currentPeriod) {\n  proposal.startingPeriod = +proposal.startingPeriod\n\n  let status;\n  if (proposal.aborted) {\n    status = ProposalStatus.Aborted;\n  } else if (proposal.processed && proposal.didPass) {\n    status = ProposalStatus.Passed;\n  } else if (proposal.processed && !proposal.didPass) {\n    status = ProposalStatus.Failed;\n  } else if (inGracePeriod(proposal, currentPeriod)) {\n    status = ProposalStatus.GracePeriod;\n  } else if (inVotingPeriod(proposal, currentPeriod)) {\n    status = ProposalStatus.VotingPeriod;\n  } else if (inQueue(proposal, currentPeriod)) {\n    status = ProposalStatus.InQueue;\n  } else if (passedVotingAndGrace(proposal, currentPeriod)) {\n    status = ProposalStatus.ReadyForProcessing;\n  } else {\n    status = ProposalStatus.Unknown;\n  }\n\n  return status;\n}\n","import React, { Component } from \"react\";\nimport { Divider, Grid, Icon, Segment, Button, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport hood from \"assets/hood.png\";\n\nimport ProgressBar from \"./ProgressBar\";\n\nimport { Query } from \"react-apollo\";\nimport { ProposalStatus, getProposalCountdownText } from \"../helpers/proposals\";\nimport { getMoloch } from \"../web3\";\nimport { GET_PROPOSAL_DETAIL, GET_METADATA, GET_MEMBERS } from \"../helpers/graphQlQueries\";\nimport { convertWeiToDollars } from \"../helpers/currency\";\nimport { utils } from \"ethers\";\nimport { adopt } from \"react-adopt\";\n\nexport const Vote = {\n  Null: 0, // default value, counted as abstention\n  Yes: 1,\n  No: 2\n};\n\nconst MemberAvatar = ({ member }) => {\n  return (\n    <Grid.Column mobile={4} tablet={3} computer={3} textAlign=\"center\" className=\"member_avatar\" title={member}>\n      <Link to={`/members/${member}`} className=\"uncolored\">\n        <Image src={hood} centered />\n        <p className=\"name\">{!member ? \"\" : member.length > 10 ? member.substring(0, 10) + \"...\" : member}</p>\n      </Link>\n    </Grid.Column>\n  );\n};\n\nconst Composed = adopt({\n  proposalDetail: ({ render, id }) => (\n    <Query query={GET_PROPOSAL_DETAIL} variables={{ id }}>\n      {render}\n    </Query>\n  ),\n  metadata: ({ render }) => <Query query={GET_METADATA}>{render}</Query>,\n  // TODO: dont query all members\n  members: ({ render }) => <Query query={GET_MEMBERS}>{render}</Query>\n});\n\nexport default class ProposalDetail extends Component {\n  state = {\n    proposal: {\n      tokenTribute: 0,\n      sharesRequested: 0,\n      votingEnded: true,\n      graceEnded: true,\n      yesVotes: 0,\n      noVotes: 0,\n      status: ProposalStatus.InQueue,\n      votes: []\n    },\n    user: {\n      id: 0,\n      shares: 0,\n      isActive: false\n    },\n    moloch: null,\n    shareValue: \"0\",\n    exchangeRate: \"0\"\n  };\n\n  async componentDidMount() {\n    const { loggedInUser } = this.props;\n    const moloch = await getMoloch(loggedInUser);\n    this.setState({\n      moloch\n    });\n  }\n\n  handleNo = async (proposal) => {\n    const { moloch } = this.state;\n    await moloch.submitVote(proposal.proposalIndex, Vote.No);\n    this.setState({\n      userHasVoted: true\n    });\n  };\n\n  handleYes = async (proposal) => {\n    const { moloch } = this.state;\n    await moloch.submitVote(proposal.proposalIndex, Vote.Yes);\n    this.setState({\n      userHasVoted: true\n    });\n  };\n\n  handleProcess = async (proposal) => {\n    const { moloch } = this.state;\n    await moloch.processProposal(proposal.proposalIndex);\n  };\n\n  render() {\n    const { loggedInUser } = this.props;\n\n    return (\n      <Composed id={this.props.match.params.id}>\n        {({ proposalDetail, metadata, members }) => {\n          if (proposalDetail.loading || metadata.loading || members.loading) return <Segment className=\"blurred box\">Loading...</Segment>;\n          if (proposalDetail.error) throw new Error(`Error!: ${proposalDetail.error}`);\n          if (metadata.error) throw new Error(`Error!: ${metadata.error}`);\n          if (members.error) throw new Error(`Error!: ${members.error}`);\n\n          const { proposal } = proposalDetail.data;\n          const { shareValue, exchangeRate } = metadata.data;\n\n          const yesShares = proposal.votes.reduce((totalVotes, vote) => {\n            if (vote.uintVote === Vote.Yes) {\n              return (totalVotes += parseInt(vote.member.shares));\n            } else {\n              return totalVotes;\n            }\n          }, 0);\n\n          const noShares = proposal.votes.reduce((totalVotes, vote) => {\n            if (vote.uintVote === Vote.No) {\n              return (totalVotes += parseInt(vote.member.shares));\n            } else {\n              return totalVotes;\n            }\n          }, 0);\n\n          const user = members.data.members.find(m => m.delegateKey === loggedInUser);\n          const userHasVoted = proposal.votes.find(vote => vote.member.id === loggedInUser) ? true : false;\n          const cannotVote = userHasVoted || proposal.status !== ProposalStatus.VotingPeriod || (!(user && user.shares) || !(user && user.isActive));\n\n          return (\n            <div id=\"proposal_detail\">\n              <Grid centered columns={16}>\n                <Segment className=\"transparent box segment\" textAlign=\"center\">\n                  <Grid centered columns={14}>\n                    <Grid.Column mobile={16} tablet={16} computer={12}>\n                      <span className=\"title\">{proposal.title ? proposal.title : \"N/A\"}</span>\n                    </Grid.Column>\n                  </Grid>\n                  <Grid centered columns={14}>\n                    <Grid.Column mobile={16} tablet={16} computer={4}>\n                      <div className=\"subtext description\">{proposal.description ? proposal.description : \"N/A\"}</div>\n                      <Grid columns=\"equal\" className=\"tokens\">\n                        <Grid.Row>\n                          <Grid.Column className=\"tributes\">\n                            <Segment className=\"pill\" textAlign=\"center\">\n                              <Icon name=\"ethereum\" />\n                              {utils.formatEther(proposal.tokenTribute)} ETH\n                            </Segment>\n                          </Grid.Column>\n                        </Grid.Row>\n                      </Grid>\n                      <Grid columns=\"equal\">\n                        <Grid.Column>\n                          <p className=\"subtext voting\">Shares</p>\n                          <p className=\"amount\">{proposal.sharesRequested}</p>\n                        </Grid.Column>\n                        <Grid.Column textAlign=\"right\">\n                          <p className=\"subtext\">Total USD Value</p>\n                          <p className=\"amount\">\n                            {convertWeiToDollars(\n                              utils\n                                .bigNumberify(proposal.sharesRequested)\n                                .mul(shareValue)\n                                .toString(),\n                              exchangeRate\n                            )}\n                          </p>\n                        </Grid.Column>\n                      </Grid>\n                    </Grid.Column>\n\n                    <Grid.Column mobile={16} tablet={16} computer={2}>\n                      <Divider vertical />\n                    </Grid.Column>\n\n                    <Grid.Column mobile={16} tablet={16} computer={6}>\n                      <Grid columns={16}>\n                        <Grid.Column textAlign=\"center\" mobile={16} tablet={16} computer={16} className=\"pill_column\">\n                          <span className=\"pill\">{getProposalCountdownText(proposal)}</span>\n                        </Grid.Column>\n                      </Grid>\n                      <Grid columns={16} className=\"member_list\">\n                        <Grid.Row>\n                          <Grid.Column mobile={16} tablet={16} computer={16} className=\"pill_column\">\n                            {proposal.votes && proposal.votes.length > 0 ? (\n                              <Grid>\n                                <Grid.Row className=\"members_row\">\n                                  {/* centered */}\n                                  {proposal.votes.map((vote, idx) => (\n                                    <MemberAvatar member={vote.member.id} shares={vote.member.shares} key={idx} />\n                                  ))}\n                                </Grid.Row>\n                              </Grid>\n                            ) : null}\n                          </Grid.Column>\n                        </Grid.Row>\n                      </Grid>\n                      <Grid>\n                        <Grid.Column>\n                          <ProgressBar yes={yesShares} no={noShares} />\n                        </Grid.Column>\n                      </Grid>\n                      <Grid columns=\"equal\" centered>\n                        <Grid.Column textAlign=\"center\" mobile={16} tablet={5} computer={5}>\n                          <Button className=\"btn\" color=\"grey\" disabled={cannotVote} onClick={() => this.handleNo(proposal)}>\n                            Vote No\n                          </Button>\n                        </Grid.Column>\n                        <Grid.Column textAlign=\"center\" mobile={16} tablet={5} computer={5}>\n                          <Button className=\"btn\" color=\"grey\" disabled={cannotVote} onClick={() => this.handleYes(proposal)}>\n                            Vote Yes\n                          </Button>\n                        </Grid.Column>\n                        <Grid.Column textAlign=\"center\" mobile={16} tablet={5} computer={5}>\n                          <Button\n                            className=\"btn\"\n                            color=\"grey\"\n                            onClick={() => this.handleProcess(proposal)}\n                            disabled={proposal.status !== ProposalStatus.ReadyForProcessing}\n                          >\n                            Process Proposal\n                          </Button>\n                        </Grid.Column>\n                      </Grid>\n                    </Grid.Column>\n                  </Grid>\n                </Segment>\n              </Grid>\n            </div>\n          );\n        }}\n      </Composed>\n    );\n  }\n}\n","import React from \"react\";\nimport { Segment, Grid, Button, Tab, Icon } from \"semantic-ui-react\";\nimport { Route, Switch, Link } from \"react-router-dom\";\n\nimport ProposalDetail, { Vote } from \"./ProposalDetail\";\nimport ProgressBar from \"./ProgressBar\";\nimport { Query } from \"react-apollo\";\nimport { ProposalStatus, getProposalCountdownText } from \"../helpers/proposals\";\nimport { GET_PROPOSAL_LIST, GET_METADATA, GET_MEMBERS } from \"../helpers/graphQlQueries\";\nimport { utils } from \"ethers\";\nimport { adopt } from \"react-adopt\";\n\nconst ProposalCard = ({ proposal }) => {\n  let id = proposal.id;\n\n  const yesShares = proposal.votes.reduce((totalVotes, vote) => {\n    if (vote.uintVote === Vote.Yes) {\n      return (totalVotes += parseInt(vote.member.shares));\n    } else {\n      return totalVotes;\n    }\n  }, 0);\n\n  const noShares = proposal.votes.reduce((totalVotes, vote) => {\n    if (vote.uintVote === Vote.No) {\n      return (totalVotes += parseInt(vote.member.shares));\n    } else {\n      return totalVotes;\n    }\n  }, 0);\n\n  return (\n    <Grid.Column mobile={16} tablet={8} computer={5}>\n      <Link to={{ pathname: `/proposals/${id}` }} className=\"uncolored\">\n        <Segment className=\"blurred box\">\n          <p className=\"name\">{proposal.title ? proposal.title : \"N/A\"}</p>\n          <p className=\"subtext description\">{proposal.description ? proposal.description : \"N/A\"}</p>\n          <Grid columns=\"equal\" className=\"value_shares\">\n            <Grid.Row>\n              <Grid.Column textAlign=\"center\">\n                <p className=\"subtext\">Shares Requested</p>\n                <p className=\"amount\">{proposal.sharesRequested}</p>\n              </Grid.Column>\n              <Grid.Column textAlign=\"center\">\n                <p className=\"subtext\">\n                  Tribute <Icon name=\"ethereum\" />\n                </p>\n                <p className=\"amount\">{utils.formatEther(proposal.tokenTribute)}</p>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n          <Grid columns=\"equal\" className=\"deadlines\">\n            <Grid.Row>\n              <Grid.Column textAlign=\"center\">\n                <Segment className=\"voting pill\" textAlign=\"center\">\n                  {getProposalCountdownText(proposal)}\n                </Segment>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n          <ProgressBar yes={yesShares} no={noShares} />\n        </Segment>\n      </Link>\n    </Grid.Column>\n  );\n};\n\nconst Composed = adopt({\n  proposalsResult: ({ render }) => <Query query={GET_PROPOSAL_LIST}>{render}</Query>,\n  metadata: ({ render }) => <Query query={GET_METADATA}>{render}</Query>\n});\n\nclass ProposalList extends React.Component {\n  state = {\n    proposals: [],\n    totalShares: 0,\n    shareValue: 0,\n    exchangeRate: \"0\"\n  };\n\n  render() {\n    const { isActive } = this.props;\n    // const { proposals, totalShares, loading, shareValue, exchangeRate } = this.state;\n\n    return (\n      <Composed id={this.props.match.params.id}>\n        {({ proposalsResult, metadata }) => {\n          if (proposalsResult.loading || metadata.loading) return <Segment className=\"blurred box\">Loading...</Segment>;\n          if (proposalsResult.error) throw new Error(`Error!: ${proposalsResult.error}`);\n          if (metadata.error) throw new Error(`Error!: ${metadata.error}`);\n\n          const { proposals } = proposalsResult.data\n          const { shareValue, exchangeRate, totalShares } = metadata.data\n\n          // sort in descending order of index\n          const sortProposals = (a, b) => b.proposalIndex - a.proposalIndex;\n\n          const gracePeriod = proposals.filter(p => p.status === ProposalStatus.GracePeriod).sort(sortProposals);\n          const votingPeriod = proposals.filter(p => p.status === ProposalStatus.VotingPeriod).sort(sortProposals);\n          const inQueue = proposals.filter(p => p.status === ProposalStatus.InQueue).sort(sortProposals);\n          const readyForProcessing = proposals.filter(p => p.status === ProposalStatus.ReadyForProcessing).sort(sortProposals);\n          const completed = proposals\n            .filter(p => p.status === ProposalStatus.Aborted || p.status === ProposalStatus.Passed || p.status === ProposalStatus.Failed)\n            .sort(sortProposals);\n\n          const panes = [\n            {\n              menuItem: `Voting Period (${votingPeriod.length})`,\n              render: () => (\n                <Tab.Pane attached={false}>\n                  <Grid columns={3}>\n                    {votingPeriod.map((p, index) => (\n                      <ProposalCard exchangeRate={exchangeRate} shareValue={shareValue} totalShares={+totalShares} proposal={p} key={index} />\n                    ))}\n                  </Grid>\n                </Tab.Pane>\n              )\n            },\n            {\n              menuItem: `Grace Period (${gracePeriod.length})`,\n              render: () => (\n                <Tab.Pane attached={false}>\n                  <Grid columns={3}>\n                    {gracePeriod.map((p, index) => (\n                      <ProposalCard exchangeRate={exchangeRate} shareValue={shareValue} totalShares={+totalShares} proposal={p} key={index} />\n                    ))}\n                  </Grid>\n                </Tab.Pane>\n              )\n            },\n            {\n              menuItem: `Ready For Processing (${readyForProcessing.length})`,\n              render: () => (\n                <Tab.Pane attached={false}>\n                  <Grid columns={3}>\n                    {readyForProcessing.map((p, index) => (\n                      <ProposalCard exchangeRate={exchangeRate} shareValue={shareValue} totalShares={+totalShares} proposal={p} key={index} />\n                    ))}\n                  </Grid>\n                </Tab.Pane>\n              )\n            },\n            {\n              menuItem: `Completed (${completed.length})`,\n              render: () => (\n                <Tab.Pane attached={false}>\n                  <Grid columns={3}>\n                    {completed.map((p, index) => (\n                      <ProposalCard exchangeRate={exchangeRate} shareValue={shareValue} totalShares={+totalShares} proposal={p} key={index} />\n                    ))}\n                  </Grid>\n                </Tab.Pane>\n              )\n            },\n            {\n              menuItem: `In Queue (${inQueue.length})`,\n              render: () => (\n                <Tab.Pane attached={false}>\n                  <Grid columns={3}>\n                    {inQueue.map((p, index) => (\n                      <ProposalCard exchangeRate={exchangeRate} shareValue={shareValue} totalShares={+totalShares} proposal={p} key={index} />\n                    ))}\n                  </Grid>\n                </Tab.Pane>\n              )\n            }\n          ];\n\n          return (\n            <div id=\"proposal_list\">\n              <>\n                <Grid columns={16} verticalAlign=\"middle\">\n                  <Grid.Column mobile={16} tablet={8} computer={4} textAlign=\"right\" floated=\"right\" className=\"submit_button\">\n                    <Link to={isActive ? \"/proposalsubmission\" : \"/proposals\"} className=\"link\">\n                      <Button size=\"large\" color=\"red\" disabled={!isActive}>\n                        New Proposal\n                      </Button>\n                    </Link>\n                  </Grid.Column>\n                </Grid>\n                <Tab menu={{ secondary: true, pointing: true, vertical: true }} panes={panes} />\n              </>\n            </div>\n          );\n        }}\n      </Composed>\n    );\n  }\n}\n\nconst ProposalListView = ({ loggedInUser }) => {\n  return (\n    <Query query={GET_MEMBERS}>\n      {({ loading, error, data }) => {\n        if (loading) return \"Loading...\";\n        if (error) throw new Error(`Error!: ${error}`);\n        const member = data.members.find(m => m.delegateKey === loggedInUser);\n        return (\n          <Switch>\n            <Route exact path=\"/proposals\" render={props => <ProposalList {...props} isActive={member ? member.isActive : false} />} />\n            <Route path=\"/proposals/:id\" render={props => <ProposalDetail {...props} loggedInUser={loggedInUser} />} />\n          </Switch>\n        );\n      }}\n    </Query>\n  );\n};\n\nexport default ProposalListView;\n","import React from \"react\";\nimport { Divider, Grid, Segment, Image, Icon, Label, Header } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nimport bull from \"assets/bull.png\";\nimport hood from \"assets/hood.png\";\n\nimport { Query } from \"react-apollo\";\nimport { Vote } from \"./ProposalDetail\";\nimport { utils } from \"ethers\";\nimport { convertWeiToDollars } from \"../helpers/currency\";\nimport { adopt } from \"react-adopt\";\nimport { GET_METADATA, GET_MEMBER_DETAIL_WITH_VOTES } from \"../helpers/graphQlQueries\";\nimport { getProposalCountdownText } from \"../helpers/proposals\";\n\nconst Composed = adopt({\n  memberDetail: ({ render, name }) => (\n    <Query query={GET_MEMBER_DETAIL_WITH_VOTES} variables={{ address: name }}>\n      {render}\n    </Query>\n  ),\n  metadata: ({ render }) => <Query query={GET_METADATA}>{render}</Query>,\n});\n\nconst MemberDetail = ({ loggedInUser, member, shareValue, exchangeRate }) => (\n  <Segment className=\"blurred box\">\n    <Grid columns=\"equal\">\n      <Grid.Column>\n        <p className=\"subtext\">Shares</p>\n        <p className=\"amount\">{member.shares}</p>\n      </Grid.Column>\n      <Grid.Column textAlign=\"right\">\n        <p className=\"subtext\">Total Value</p>\n        <p className=\"amount\">\n          {convertWeiToDollars(\n            utils\n              .bigNumberify(member.shares)\n              .mul(shareValue)\n              .toString(),\n            exchangeRate\n          )}\n        </p>\n      </Grid.Column>\n    </Grid>\n    <Grid>\n      <Grid.Column textAlign=\"center\" className=\"avatar\">\n        <Image centered src={loggedInUser === member.id || loggedInUser === member.delegateKey ? bull : hood} size=\"tiny\" />\n      </Grid.Column>\n    </Grid>\n    <p className=\"subtext\">Tribute</p>\n    <Grid columns=\"equal\">\n      <Grid.Row>\n        <Grid.Column>\n          <Segment className=\"pill\" textAlign=\"center\">\n            <Icon name=\"ethereum\" />\n            {utils.formatEther(member.tokenTribute)} ETH\n          </Segment>\n        </Grid.Column>\n      </Grid.Row>\n      <p className=\"subtext\">Delegate Key</p>\n      <Grid.Row>\n        <Grid.Column>\n          <p className=\"subtext\">{member.delegateKey}</p>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  </Segment>\n);\n\nconst ProposalDetail = ({ proposals }) => (\n  <Segment className=\"blurred box\">\n    <Grid columns=\"equal\" textAlign=\"center\">\n      <Grid.Row className=\"subtext\" style={{ fontSize: 20 }}>\n        History\n      </Grid.Row>\n    </Grid>\n    <Grid columns=\"equal\">\n      <Grid.Row className=\"header\">\n        <Grid.Column textAlign=\"center\">\n          <p className=\"subtext\">Proposal Title</p>\n        </Grid.Column>\n        <Grid.Column textAlign=\"center\">\n          <p className=\"subtext\">Date</p>\n        </Grid.Column>\n        <Grid.Column textAlign=\"center\">\n          <p className=\"subtext\">Shares Requested</p>\n        </Grid.Column>\n        <Grid.Column textAlign=\"center\">\n          <p className=\"subtext\">Tribute Offered</p>\n        </Grid.Column>\n        <Grid.Column textAlign=\"center\">\n          <p className=\"subtext\">Vote</p>\n        </Grid.Column>\n        <Grid.Column textAlign=\"center\">\n          <p className=\"subtext\">Status</p>\n        </Grid.Column>\n      </Grid.Row>\n      {proposals && proposals.length > 0 ? (\n        proposals.map((p, idx) => {\n          return (\n            <React.Fragment key={idx}>\n                <Grid.Row verticalAlign=\"middle\">\n                  <Grid.Column textAlign=\"center\">\n                    <Link to={{ pathname: `/proposals/${p.proposal.id}` }} className=\"uncolored\">\n                    {p.uintVote === Vote.Yes && <Label className=\"dot\" circular color=\"green\" empty />}\n                    {/* TODO: is this right? */}\n                    {(p.uintVote === Vote.No || p.uintVote === Vote.Null) && <Label className=\"dot\" circular color=\"red\" empty />}\n                    {p.proposal.title}\n                    </Link>\n                  </Grid.Column>\n                  <Grid.Column textAlign=\"center\">\n                    <p className=\"subtext date\">{new Date(p.proposal.timestamp * 1000).toISOString().slice(0, 10)}</p>\n                  </Grid.Column>\n                  <Grid.Column textAlign=\"center\">\n                    <p className=\"subtext date\">{p.proposal.sharesRequested}</p>\n                  </Grid.Column>\n                  <Grid.Column textAlign=\"center\">\n                    <p className=\"subtext date\">{utils.formatEther(p.proposal.tokenTribute)}</p>\n                  </Grid.Column>\n                  <Grid.Column textAlign=\"center\">\n                    <Header as=\"p\" color={p.uintVote === Vote.Yes ? \"green\" : p.uintVote === Vote.No ? \"red\" : null}>\n                      {p.uintVote === Vote.Yes ? \"Y\" : p.uintVote === Vote.No ? \"N\" : \"\"}\n                    </Header>\n                  </Grid.Column>\n                  <Grid.Column textAlign=\"center\">\n                    <p className=\"subtext date\">{getProposalCountdownText(p.proposal)}</p>\n                  </Grid.Column>\n              </Grid.Row>\n              <Divider />\n            </React.Fragment>\n          );\n        })\n      ) : (\n        <Grid.Row verticalAlign=\"middle\">\n          <Grid.Column textAlign=\"center\">This member hasn't voted on any proposals yet.</Grid.Column>\n        </Grid.Row>\n      )}\n    </Grid>\n  </Segment>\n);\n\nconst MemberDetailView = props => (\n  <Composed name={props.match.params.name}>\n    {({ memberDetail, metadata }) => {\n      if (memberDetail.loading || metadata.loading) return <Segment className=\"blurred box\">Loading...</Segment>;\n      if (memberDetail.error) throw new Error(`Error!: ${memberDetail.error}`);\n      if (metadata.error) throw new Error(`Error!: ${metadata.error}`);\n      return (\n        <div id=\"member_detail\">\n          <p className=\"title\"> {props.match.params.name} </p>\n          <Divider />\n          <Grid columns={16}>\n            <Grid.Row className=\"details\">\n              <Grid.Column mobile={16} tablet={16} computer={6} className=\"user\">\n                <MemberDetail\n                  loggedInUser={props.loggedInUser}\n                  member={memberDetail.data.member}\n                  shareValue={metadata.data.shareValue}\n                  exchangeRate={metadata.data.exchangeRate}\n                />\n              </Grid.Column>\n              <Grid.Column mobile={16} tablet={16} computer={10} className=\"proposals\">\n                <ProposalDetail proposals={memberDetail.data.member.votes} />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </div>\n      );\n    }}\n  </Composed>\n);\n\nexport default MemberDetailView;\n","import React from \"react\";\nimport { Grid, Image, Divider } from \"semantic-ui-react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\n\nimport MemberDetail from \"./MemberDetail\";\nimport bull from \"assets/bull.png\";\nimport hood from \"assets/hood.png\";\n\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { GET_MEMBERS, GET_MEMBER_DETAIL } from \"../helpers/graphQlQueries\";\n\nconst MemberAvatar = ({ address, shares }) => (\n  <Grid.Column mobile={5} tablet={3} computer={3} textAlign=\"center\" className=\"member_avatar\" title={address}>\n    <Link to={`/members/${address}`} className=\"uncolored\">\n      <Image src={hood} centered size=\"tiny\" />\n      <p className=\"name\">{!address ? \"\" : address.length > 10 ? address.substring(0, 10) + \"...\" : address}</p>\n      <p className=\"subtext\">{shares} shares</p>\n    </Link>\n  </Grid.Column>\n);\n\nconst LoggedInUser = props => (\n  <Query query={GET_MEMBER_DETAIL} variables={{ address: props.loggedInUser }}>\n    {({ loading, error, data }) => {\n      if (loading) return \"...\";\n      if (error) throw new Error(`Error!: ${error}`);\n      return data.member && data.member.isActive ? (\n        <Link to={`/members/${data.member.id}`} className=\"uncolored\">\n          <Image centered src={bull} size=\"tiny\" />\n          <p className=\"name\">{!data.member.id ? \"\" : data.member.id.length > 10 ? data.member.id.substring(0, 10) + \"...\" : data.member.id}</p>\n          <p className=\"subtext\">{data.member.shares ? data.member.shares : 0} shares</p>\n        </Link>\n      ) : (\n        <div />\n      );\n    }}\n  </Query>\n);\n\nconst GET_ELDERS = gql`\n  {\n    members(first: 100, where: { shares_gte: 100, isActive: true }) {\n      id\n      shares\n    }\n  }\n`;\nconst Elders = () => (\n  <Query query={GET_ELDERS}>\n    {({ loading, error, data }) => {\n      if (loading) return \"...\";\n      if (error) throw new Error(`Error!: ${error}`);\n      return data.members.length > 0 ? (\n        data.members.map((elder, idx) => <MemberAvatar address={elder.id} shares={elder.shares} key={idx} />)\n      ) : (\n        <>No elders to show.</>\n      );\n    }}\n  </Query>\n);\n\nconst GET_NON_ELDERS = gql`\n  {\n    members(first: 100, where: { shares_gt: 0, shares_lt: 100, isActive: true }) {\n      id\n      shares\n    }\n  }\n`;\nconst Contributors = () => (\n  <Query query={GET_NON_ELDERS}>\n    {({ loading, error, data }) => {\n      if (loading) return \"...\";\n      if (error) throw new Error(`Error!: ${error}`);\n      return data.members.length > 0 ? (\n        data.members.map((contributor, idx) => <MemberAvatar address={contributor.id} shares={contributor.shares} key={idx} />)\n      ) : (\n        <>No contributors to show.</>\n      );\n    }}\n  </Query>\n);\n\nconst MemberList = props => (\n  <Query query={GET_MEMBERS}>\n    {({ loading, error, data }) => {\n      let members;\n      if (error) {\n        members = \"NA\";\n        console.error(`Could not load members: ${error}`);\n      } else if (loading) {\n        members = \"-\";\n      } else {\n        members = data.members.length;\n      }\n      return (\n        <div id=\"member_list\">\n          <Grid columns={16} verticalAlign=\"middle\">\n            <Grid.Column mobile={16} tablet={6} computer={6} textAlign=\"left\" className=\"member_list_header\">\n              <p className=\"subtext\">{members} Members</p>\n            </Grid.Column>\n\n            {/* <Grid.Column mobile={16} tablet={10} computer={10} textAlign=\"right\" className=\"submit_button\">\n              <Link to='/membershipproposalsubmission' className=\"link\">\n                <Button size='large' color='red' disabled={(props.user.status === 'founder') ? true : false}>Membership Proposal</Button>\n              </Link>\n            </Grid.Column> */}\n          </Grid>\n\n          <Grid>\n            <Grid.Column textAlign=\"center\">\n              <LoggedInUser {...props} />\n            </Grid.Column>\n          </Grid>\n          <Grid className=\"member_item\">\n            <Grid.Row>\n              <p style={{ paddingLeft: \"1rem\" }}>Elders (100+ shares)</p>\n            </Grid.Row>\n            <Divider />\n            <Grid.Row className=\"members_row\" centered>\n              <Elders />\n            </Grid.Row>\n          </Grid>\n          <Grid className=\"member_item\">\n            <Grid.Row>\n              <p style={{ paddingLeft: \"1rem\" }}>Contributors</p>\n            </Grid.Row>\n            <Divider />\n            <Grid.Row className=\"members_row\" centered>\n              <Contributors />\n            </Grid.Row>\n          </Grid>\n        </div>\n      );\n    }}\n  </Query>\n);\n\nconst MemberListView = higherProps => (\n  <Switch>\n    <Route exact path=\"/members\" render={props => <MemberList {...props} loggedInUser={higherProps.loggedInUser} />} />\n    <Route path=\"/members/:name\" render={props => <MemberDetail {...props} loggedInUser={higherProps.loggedInUser} />} />\n  </Switch>\n);\n\nexport default MemberListView;\n","import React, { Component } from \"react\";\nimport { Button, Divider, Form, Grid, Input, Segment, GridColumn } from \"semantic-ui-react\";\nimport { getMoloch } from \"../web3\";\nimport { utils } from \"ethers\";\n\nexport default class ProposalSubmission extends Component {\n  state = {\n    address: \"\",\n    title: \"\",\n    description: \"\",\n    shares: \"\",\n    tribute: \"\", // TODO: this will be calculated with the blockchain\n    fieldValidationErrors: { title: \"\", description: \"\", assets: \"\", shares: \"\" },\n    titleValid: false,\n    descriptionValid: false,\n    tributeValid: false,\n    sharesValid: false,\n    addressValid: false,\n    formValid: false\n  };\n\n  async componentDidMount() {\n    const { loggedInUser } = this.props\n    const moloch = await getMoloch(loggedInUser);\n    this.setState({\n      moloch\n    });\n  }\n\n  validateField = (fieldName, value) => {\n    let { fieldValidationErrors, titleValid, descriptionValid, tributeValid, sharesValid, addressValid } = this.state\n\n    switch (fieldName) {\n      case \"title\":\n        titleValid = value !== \"\";\n        fieldValidationErrors.title = titleValid ? \"\" : \"Title is invalid\";\n        break;\n      case \"address\":\n        addressValid = utils.isHexString(value)\n        console.log('utils.isHexString(value): ', utils.isHexString(value));\n        console.log('value: ', value);\n        fieldValidationErrors.address = addressValid ? \"\" : \"Address is invalid\";\n        break\n      case \"description\":\n        descriptionValid = value !== \"\";\n        fieldValidationErrors.description = descriptionValid ? \"\" : \"Description is invalid\";\n        break;\n      case \"shares\":\n        sharesValid = value > 0;\n        fieldValidationErrors.shares = sharesValid ? \"\" : \"Shares is invalid\";\n        break;\n      case \"tribute\":\n        tributeValid = value > 0;\n        fieldValidationErrors.tribute = tributeValid ? \"\" : \"Tribute is invalid\";\n        break;\n      default:\n        break;\n    }\n    this.setState(\n      {\n        fieldValidationErrors,\n        titleValid,\n        descriptionValid,\n        tributeValid,\n        sharesValid,\n        addressValid\n      },\n      this.validateForm\n    );\n  }\n\n  validateForm = () => {\n    const { titleValid, descriptionValid, sharesValid, tributeValid, addressValid } = this.state\n    this.setState({ formValid: titleValid && descriptionValid && sharesValid && tributeValid && addressValid});\n  }\n\n  handleInput = (event) => {\n    let name = event.target.name;\n    let value = event.target.value;\n    this.setState({ [event.target.name]: event.target.value }, () => {\n      this.validateField(name, value);\n    });\n  }\n\n  handleSubmit = async () => {\n    const { moloch, formValid, address, title, description, shares, tribute } = this.state\n\n    if (formValid || true) {\n      try {\n        const tx = await moloch.submitProposal(address, tribute, shares, JSON.stringify({ title, description }))\n        console.log('tx: ', tx);\n      } catch (e) {\n        console.error(e);\n        alert(\"Error processing proposal\");\n      }\n    } else {\n      alert(\"Please fill any missing fields.\");\n    }\n  }\n\n  render() {\n    const { shares, tribute, title, description, address } = this.state\n    return (\n      <div id=\"proposal_submission\">\n        <Form>\n          <Grid centered columns={16}>\n            <Grid.Row stretched>\n              <Grid.Column mobile={16} tablet={16} computer={12}>\n                <Input\n                  name=\"title\"\n                  transparent\n                  size=\"big\"\n                  inverted\n                  placeholder=\"Proposal Title\"\n                  onChange={this.handleInput}\n                  value={title}\n                />\n                <Divider />\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row stretched>\n              <Grid.Column mobile={16} tablet={16} computer={12}>\n                <Segment className=\"blurred box\">\n                  <Form.Input\n                    name=\"address\"\n                    label=\"Beneficiary or Applicant\"\n                    placeholder=\"Address\"\n                    fluid\n                    onChange={this.handleInput}\n                    value={address}\n                  />\n                  <Form.Input\n                    name=\"shares\"\n                    label=\"Shares Requested\"\n                    placeholder=\"Shares\"\n                    fluid\n                    type=\"number\"\n                    onChange={this.handleInput}\n                    value={shares}\n                  />\n                  <Form.Input\n                    name=\"tribute\"\n                    label=\"Tribute Offered (in ETH)\"\n                    placeholder=\"ETH\"\n                    fluid\n                    type=\"number\"\n                    onChange={this.handleInput}\n                    value={tribute}\n                  />\n                </Segment>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column mobile={16} tablet={16} computer={12}>\n                <Grid columns=\"equal\">\n                  <Grid.Column>\n                    <Segment className=\"blurred box\">\n                      <Form.TextArea\n                        name=\"description\"\n                        label=\"Description\"\n                        placeholder=\"Type here\"\n                        rows={15}\n                        onChange={this.handleInput}\n                        value={description}\n                      />\n                    </Segment>\n                  </Grid.Column>\n                </Grid>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <GridColumn mobile={16} tablet={8} computer={8} className=\"submit_button\">\n                <Button size=\"large\" color=\"red\" onClick={this.handleSubmit}>\n                  Submit Proposal\n                </Button>\n              </GridColumn>\n            </Grid.Row>\n          </Grid>\n        </Form>\n      </div>\n    );\n  }\n}\n","import {\n  determineProposalStatus,\n  inGracePeriod,\n  VOTING_PERIOD_LENGTH,\n  GRACE_PERIOD_LENGTH,\n  inVotingPeriod,\n  inQueue,\n  passedVotingAndGrace\n} from \"./helpers/proposals\";\nimport gql from \"graphql-tag\";\nimport { GET_METADATA } from \"./helpers/graphQlQueries\";\n\nexport const resolvers = {\n  Proposal: {\n    status: (proposal, _args, { cache }) => {\n      const { currentPeriod } = cache.readQuery({ query: GET_METADATA });\n      return determineProposalStatus(proposal, +currentPeriod);\n    },\n    title: proposal => {\n      try {\n        const details = JSON.parse(proposal.details);\n        return details.title || proposal.details || \"\";\n      } catch (e) {\n        console.log(`Could not parse title from proposal.proposalIndex: ${proposal.proposalIndex} proposal.details: ${proposal.details}`);\n        return proposal.details || \"\";\n      }\n    },\n    description: proposal => {\n      try {\n        const details = JSON.parse(proposal.details);\n        return details.description || \"\";\n      } catch (e) {\n        console.log(`Could not parse description from proposal.proposalIndex: ${proposal.proposalIndex} proposal.details: ${proposal.details}`);\n        return \"\";\n      }\n    },\n    gracePeriod: (proposal, _args, { cache }) => {\n      const { currentPeriod } = cache.readQuery({ query: GET_METADATA });\n      if (inGracePeriod(proposal, currentPeriod)) {\n        return +proposal.startingPeriod + VOTING_PERIOD_LENGTH + GRACE_PERIOD_LENGTH - currentPeriod;\n      }\n      return 0;\n    },\n    votingEnds: (proposal, _args, { cache }) => {\n      const { currentPeriod } = cache.readQuery({ query: GET_METADATA });\n      if (inVotingPeriod(proposal, currentPeriod)) {\n        return proposal.startingPeriod + VOTING_PERIOD_LENGTH - currentPeriod;\n      }\n      return 0;\n    },\n    votingStarts: (proposal, _args, { cache }) => {\n      const { currentPeriod } = cache.readQuery({ query: GET_METADATA });\n      if (inQueue(proposal, currentPeriod)) {\n        return proposal.startingPeriod - currentPeriod;\n      }\n      return 0;\n    },\n    readyForProcessing: (proposal, _args, { cache }) => {\n      const { currentPeriod } = cache.readQuery({ query: GET_METADATA });\n      if (passedVotingAndGrace(proposal, currentPeriod) && !proposal.processed) {\n        return true;\n      }\n      return false\n    }\n  },\n  Mutation: {\n    setAttributes: (_, variables, { cache }) => {\n      const id = `Proposal:${variables.id}`;\n      const fragment = gql`\n        fragment getMeta on Proposal {\n          status\n          title\n          description\n          gracePeriod\n          votingEnds\n          votingStarts\n          readyForProcessing\n        }\n      `;\n      const proposal = cache.readFragment({ fragment, id });\n      const data = {\n        ...proposal,\n        status: variables.status,\n        title: variables.title,\n        description: variables.description,\n        gracePeriod: variables.gracePeriod,\n        votingEnds: variables.votingEnds,\n        votingStarts: variables.votingStarts,\n        readyForProcessing: variables.readyForProcessing\n      };\n      cache.writeData({ id, data });\n      return data;\n    }\n  }\n};\n","import gql from \"graphql-tag\";\n\nexport const typeDefs = gql`\n  extend type Proposal {\n    status: String\n    title: String\n    description: String\n    gracePeriod: Number\n    votingEnds: Number\n    votingStarts: Number\n    readyForProcessing: Bool\n  }\n\n  extend type Query {\n    proposalsWithStatus: [Proposal]\n  }\n`;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Background from \"./components/Background\";\nimport Header from \"./components/Header\";\nimport Wrapper from \"./components/Wrapper\";\nimport Home from \"./components/Home\";\nimport ProposalList from \"./components/ProposalList\";\nimport MemberList from \"./components/MemberList\";\nimport ProposalSubmission from \"./components/ProposalSubmission\";\nimport { ApolloProvider, Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { resolvers } from \"./resolvers\";\nimport { typeDefs } from \"./schema\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { GET_METADATA } from \"./helpers/graphQlQueries\";\nimport { getMedianizer, getMoloch, getToken } from \"./web3\";\nimport { utils } from \"ethers\";\nimport { adopt } from \"react-adopt\";\n\nconsole.log(process.env);\n\nconst cache = new InMemoryCache();\n\nconst client = new ApolloClient({\n  cache,\n  link: new HttpLink({\n    uri: process.env.REACT_APP_GRAPH_NODE_URI\n  }),\n  resolvers,\n  typeDefs\n});\n\nconst initialData = {\n  loggedInUser: \"\",\n  guildBankValue: \"\",\n  shareValue: \"\",\n  totalShares: \"\",\n  currentPeriod: \"\",\n  exchangeRate: \"\"\n};\ncache.writeData({\n  data: { ...initialData, loggedInUser: window.localStorage.getItem(\"loggedInUser\") || \"\" }\n});\nclient.onResetStore(() => cache.writeData({ data: initialData }));\n\nconst IS_LOGGED_IN = gql`\n  query IsUserLoggedIn {\n    loggedInUser @client\n  }\n`;\n\nconst Composed = adopt({\n  loggedInUserData: ({ render }) => <Query query={IS_LOGGED_IN}>{render}</Query>,\n  metadata: ({ render }) => <Query query={GET_METADATA}>{render}</Query>\n});\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      restored: false,\n      exchangeRate: \"0\",\n      totalShares: \"0\",\n      guildBankValue: \"0\"\n    };\n  }\n\n  async componentDidMount() {\n    // await persistor.restore();\n    await this.populateData(true);\n    this.setState({ restored: true });\n  }\n\n  async populateData(refetch) {\n    let {\n      data: { loggedInUser }\n    } = await client.query({\n      query: IS_LOGGED_IN\n    });\n\n    let {\n      data: { exchangeRate, totalShares, currentPeriod, guildBankValue, shareValue }\n    } = await client.query({\n      query: GET_METADATA\n    });\n\n    if (!exchangeRate || refetch) {\n      const medianizer = await getMedianizer(loggedInUser);\n      exchangeRate = (await medianizer.compute())[0];\n      exchangeRate = utils.bigNumberify(exchangeRate);\n    }\n\n    if (!totalShares || !currentPeriod || refetch) {\n      const moloch = await getMoloch();\n      totalShares = await moloch.totalShares();\n      currentPeriod = await moloch.getCurrentPeriod();\n    }\n\n    const token = await getToken();\n    if (!guildBankValue || refetch) {\n      guildBankValue = await token.balanceOf(process.env.REACT_APP_GUILD_BANK_ADDRESS);\n    }\n\n    if (guildBankValue && totalShares) {\n      const ethPerShare = guildBankValue.gt(0) ? totalShares.toNumber() / parseFloat(utils.formatEther(guildBankValue)) : 0; // in eth\n      shareValue = utils.parseEther(ethPerShare.toString()); // in wei\n    }\n\n    const dataToWrite = {\n      guildBankValue: guildBankValue.toString(),\n      shareValue: shareValue.toString(),\n      totalShares: totalShares.toString(),\n      currentPeriod: currentPeriod.toString(),\n      exchangeRate: exchangeRate.toString()\n    };\n    console.log(\"dataToWrite: \", dataToWrite);\n\n    client.writeData({\n      data: dataToWrite\n    });\n  }\n\n  render() {\n    return this.state.restored ? (\n      <ApolloProvider client={client}>\n        <Router basename={process.env.PUBLIC_URL}>\n          <Composed>\n            {({ loggedInUserData, metadata }) => {\n              return (\n                <>\n                  <Background />\n                  <Header loggedInUser={loggedInUserData.data.loggedInUser} client={client} populateData={this.populateData} />\n                  <Wrapper>\n                    <Switch>\n                      <Route\n                        exact\n                        path=\"/\"\n                        render={props => <Home {...props} loggedInUser={loggedInUserData.data.loggedInUser} />}\n                      />\n                      <Route\n                        path=\"/proposals\"\n                        render={props =><ProposalList {...props} loggedInUser={loggedInUserData.data.loggedInUser} />}\n                      />\n                      <Route\n                        path=\"/members\"\n                        render={props => <MemberList {...props} loggedInUser={loggedInUserData.data.loggedInUser} />}\n                      />\n                      <Route\n                        path=\"/proposalsubmission\"\n                        render={props =>\n                          loggedInUserData.data.loggedInUser ? (\n                            <ProposalSubmission {...props} loggedInUser={loggedInUserData.data.loggedInUser} />\n                          ) : (\n                            <Redirect to={{ pathname: \"/\" }} />\n                          )\n                        }\n                      />\n                      <Route\n                        component={props => <Home {...props} loggedInUser={loggedInUserData.data.loggedInUser} />}\n                      />\n                    </Switch>\n                  </Wrapper>\n                </>\n              );\n            }}\n          </Composed>\n        </Router>\n      </ApolloProvider>\n    ) : (\n      <div>Loading!!!</div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport './index.scss';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/hood.ba69d28c.png\";"],"sourceRoot":""}