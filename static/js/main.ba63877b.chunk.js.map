{"version":3,"sources":["assets/bull.png","components/Background.js","helpers/graphQlQueries.js","web3.js","components/Header.js","components/Wrapper.js","helpers/currency.js","components/Home.js","components/ProgressBar.js","helpers/proposals.js","components/ProposalDetail.js","components/ProposalList.js","components/MemberDetail.js","components/MemberList.js","components/ProposalSubmission.js","resolvers.js","schema.js","App.js","index.js","assets/hood.png"],"names":["module","exports","__webpack_require__","p","Background","react_default","a","createElement","id","className","gql","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","moloch","token","medianizer","eth","GET_METADATA","_templateObject6","GET_MEMBER_DETAIL","_templateObject7","GET_MEMBER_BY_DELEGATE_KEY","_templateObject8","GET_MEMBER_DETAIL_WITH_VOTES","_templateObject9","GET_MEMBERS","_templateObject10","GET_PROPOSALS","_templateObject11","GET_ACTIVE_PROPOSAL_LIST","_templateObject12","GET_COMPLETED_PROPOSAL_LIST","_templateObject13","GET_PROPOSAL_DETAIL","_templateObject14","_templateObject15","_templateObject16","molochAbi","require","erc20Abi","medianizerAbi","initWeb3","_x","_initWeb","apply","this","arguments","_callee","client","regenerator_default","wrap","_context","prev","next","localStorage","getItem","initGnosisSafe","initMetamask","stop","checkNetwork","_callee2","network","_context2","getNetwork","sent","console","log","chainId","alert","abrupt","_x3","_initMetamask","_callee3","coinbase","web3Provider","_context3","window","ethereum","web3","enable","currentProvider","ethers","providers","Web3Provider","setItem","listAccounts","toLowerCase","writeData","data","loggedInUser","_x4","_initGnosisSafe","_callee4","provider","_context4","SafeProvider","rpcUrl","process","getEthSigner","_getEthSigner","_callee5","_context5","Error","initMoloch","_x5","_initMoloch","_callee6","_context6","Contract","getSigner","getDefaultProvider","initToken","_x6","_initToken","_callee7","_context7","initMedianizer","_initMedianizer","_callee8","_context8","getMoloch","_x7","_getMoloch","_callee9","_context9","getToken","_x8","_getToken","_callee10","_context10","getMedianizer","_getMedianizer","_callee11","_context11","MainMenuWrapped","withApollo","props","member","isActive","Fragment","Dropdown","Item","onClick","_handleCloseDropdown","react_router_dom","to","concat","Icon","name","Divider","icon","content","_handleOpenDropdown","onLoadChangeDelegateKey","onLoadWithdrawLootToken","Object","asyncToGenerator","mark","resetStore","populateData","location","reload","ChangeDelegateKeyMenu","state","newDelegateKey","submitChangeDelegateKey","tx","_this","updateDelegateKey","_this2","onLoadMain","Form","Input","placeholder","onChange","event","setState","target","value","Button","React","Component","WithdrawLootTokenMenu","ragequitAmount","submitRagequit","_this3","ragequit","_this4","Header","visibleMenu","visibleRightMenu","logIn","method","_this5","topRightMenuContent","_this6","Header_ChangeDelegateKeyMenu","Header_WithdrawLootTokenMenu","_this7","react_apollo_esm","query","variables","address","_ref5","loading","error","Grid","columns","verticalAlign","Column","textAlign","open","onBlur","onFocus","text","substring","Menu","direction","getTopRightMenuContent","Wrapper","_ref","children","currencyFormatter","Intl","NumberFormat","style","currency","minimumFractionDigits","convertWeiToDollars","weiAmount","exchangeRate","weitoEth","utils","formatEther","exchWeiToEth","format","parseFloat","Composed","adopt","members","render","proposals","_ref2","metadata","_ref3","NumMembers","_ref4","size","color","length","NumProposals","HomePage","approval","userAddress","handleChange","e","handleSubmit","_this$state","parseEther","toString","approve","_ref7","Segment","membersLoading","proposalsLoading","_metadata$data","guildBankValue","totalShares","shareValue","mobile","tablet","computer","Statistic","inverted","label","Home_NumMembers","Home_NumProposals","Modal","basic","trigger","Content","onSubmit","Field","type","width","ProgressBar","yes","no","total","percentYes","Math","round","percentNo","position","Progress","percent","top","floated","PERIOD_DURATION","ProposalStatus","Unknown","InQueue","VotingPeriod","GracePeriod","Aborted","Passed","Failed","ReadyForProcessing","periodsToTime","periods","seconds","days","floor","hours","minutes","string","getProposalCountdownText","proposal","status","votingStarts","votingEnds","gracePeriod","inQueue","currentPeriod","startingPeriod","inGracePeriod","inVotingPeriod","passedVotingAndGrace","Vote","Null","Yes","No","MemberAvatar","title","Image","src","hood","centered","proposalDetail","delegateKey","ProposalDetail","tokenTribute","sharesRequested","votingEnded","graceEnded","yesVotes","noVotes","votes","user","shares","handleNo","submitVote","proposalIndex","userHasVoted","handleYes","handleProcess","processProposal","ProposalDetail_Composed","match","params","_ref8","yesShares","reduce","totalVotes","vote","uintVote","parseInt","noShares","find","cannotVote","aborted","Linkify_default","properties","description","Row","bigNumberify","mul","vertical","map","idx","ProposalDetail_MemberAvatar","key","components_ProgressBar","disabled","ProposalCard","pathname","toFixed","activeProposalsResult","completedProposalsResult","ProposalList","ProposalList_Composed","_ref6","completedProposals","sortProposals","b","filter","sort","votingPeriod","readyForProcessing","panes","menuItem","Tab","Pane","attached","index","ProposalList_ProposalCard","menu","secondary","pointing","ProposalListView","react_router","exact","path","ProposalList_ProposalList","assign","ProposalDetail_ProposalDetail","memberDetail","MemberDetail","bull","fontSize","Label","circular","empty","Date","timestamp","toISOString","slice","elements_Header_Header","as","MemberDetailView","MemberDetail_Composed","MemberDetail_MemberDetail","MemberDetail_ProposalDetail","LoggedInUser","GET_ELDERS","MemberList_templateObject","Elders","elder","MemberList_MemberAvatar","GET_NON_ELDERS","MemberList_templateObject2","Contributors","contributor","MemberList","MemberList_LoggedInUser","paddingLeft","MemberList_Elders","MemberList_Contributors","MemberListView","higherProps","MemberList_MemberList","components_MemberDetail","ProposalSubmission","tribute","fieldValidationErrors","assets","titleValid","descriptionValid","tributeValid","sharesValid","addressValid","formValid","validateField","fieldName","isHexString","validateForm","_this$state2","handleInput","defineProperty","_this$state3","JSON","stringify","submitProposal","t0","_this$state4","stretched","transparent","fluid","TextArea","rows","GridColumn","resolvers","Proposal","_args","processed","didPass","determineProposalStatus","cache","readQuery","parse","details","Mutation","setAttributes","_","fragment","resolvers_templateObject","readFragment","objectSpread","typeDefs","schema_templateObject","InMemoryCache","ApolloClient","link","HttpLink","uri","initialData","onResetStore","IS_LOGGED_IN","App_templateObject","loggedInUserData","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","restored","refetch","compute","getCurrentPeriod","balanceOf","ethPerShare","gt","toNumber","dataToWrite","basename","App_Composed","Header_Header","Home_HomePage","components_ProposalList","components_MemberList","ProposalSubmission_ProposalSubmission","component","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ba63877b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bull.204229a6.png\";","import React from 'react';\n\n\nexport default () => (\n  <div id=\"background\">\n    <div className=\"blurred_image\" />\n    <div className=\"dark_overlay\" />\n  </div>\n)\n","import gql from \"graphql-tag\";\n\nexport const GET_EXCHANGE_RATE = gql`\n  query ExchangeRate {\n    exchangeRate @client\n  }\n`;\n\nexport const GET_TOTAL_SHARES = gql`\n  query TotalShares {\n    totalShares @client\n  }\n`;\n\nexport const GET_GUILD_BANK_VALUE = gql`\n  query GuildBankValue {\n    guildBankValue @client\n  }\n`;\n\nexport const GET_SHARE_VALUE = gql`\n  query ShareValue {\n    shareValue @client\n  }\n`;\n\nexport const GET_CURRENT_PERIOD = gql`\n  query CurrentPeriod {\n    currentPeriod @client\n  }\n`;\n\nexport const GET_METADATA = gql`\n  query Metadata {\n    exchangeRate @client\n    totalShares @client\n    guildBankValue @client\n    shareValue @client\n    currentPeriod @client\n  }\n`;\n\nexport const GET_MEMBER_DETAIL = gql`\n  query Member($address: String!) {\n    member(id: $address) {\n      id\n      shares\n      isActive\n      tokenTribute\n      delegateKey\n    }\n  }\n`;\n\nexport const GET_MEMBER_BY_DELEGATE_KEY = gql`\n  query Member($delegateKey: String!) {\n    members(where: { delegateKey: $delegateKey }) {\n      id\n      shares\n      isActive\n      tokenTribute\n      delegateKey\n    }\n  }\n`;\n\nexport const GET_MEMBER_DETAIL_WITH_VOTES = gql`\n  query Member($address: String!) {\n    member(id: $address) {\n      id\n      shares\n      isActive\n      tokenTribute\n      delegateKey\n      votes {\n        uintVote\n          proposal {\n          id\n          timestamp\n          tokenTribute\n          sharesRequested\n          processed\n          didPass\n          aborted\n          yesVotes\n          noVotes\n          proposalIndex\n          details\n          status @client\n          title @client\n          description @client\n          gracePeriod @client\n          votingEnds @client\n          votingStarts @client\n          readyForProcessing @client\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_MEMBERS = gql`\n  {\n    members(first: 100, where: { shares_gt: 0, isActive: true }) {\n      id\n      shares\n      isActive\n      tokenTribute\n      delegateKey\n    }\n  }\n`;\n\n// TODO filter this to get current proposals?\nexport const GET_PROPOSALS = gql`\n  {\n    proposals(first: 100) {\n      id\n    }\n  }\n`;\n\nexport const GET_ACTIVE_PROPOSAL_LIST = gql`\n  {\n    proposals(first: 100, orderBy: proposalIndex, orderDirection: desc, where: { processed: false }) {\n      id\n      timestamp\n      tokenTribute\n      sharesRequested\n      processed\n      didPass\n      aborted\n      yesVotes\n      noVotes\n      proposalIndex\n      votes(first: 100) {\n        member {\n          shares\n        }\n        uintVote\n      }\n      details\n      startingPeriod\n      processed\n      status @client\n      title @client\n      description @client\n      gracePeriod @client\n      votingEnds @client\n      votingStarts @client\n      readyForProcessing @client\n    }\n  }\n`;\n\nexport const GET_COMPLETED_PROPOSAL_LIST = gql`\n  {\n    proposals(first: 100, orderBy: proposalIndex, orderDirection: desc, where: { processed: true } ) {\n      id\n      timestamp\n      tokenTribute\n      sharesRequested\n      processed\n      didPass\n      aborted\n      yesVotes\n      noVotes\n      proposalIndex\n      votes(first: 100) {\n        member {\n          shares\n        }\n        uintVote\n      }\n      details\n      startingPeriod\n      processed\n      status @client\n      title @client\n      description @client\n      gracePeriod @client\n      votingEnds @client\n      votingStarts @client\n      readyForProcessing @client\n    }\n  }\n`;\n\nexport const GET_PROPOSAL_HISTORY = gql`\n  query Proposals($id: String!) {\n    votes(first: 100, where: { memberAddress: $id }) {\n      uintVote\n      proposal {\n        id\n        timestamp\n        tokenTribute\n        sharesRequested\n        processed\n        didPass\n        aborted\n        yesVotes\n        noVotes\n        proposalIndex\n        details\n        startingPeriod\n        processed\n        status @client\n        title @client\n        description @client\n        gracePeriod @client\n        votingEnds @client\n        votingStarts @client\n        readyForProcessing @client\n      }\n    }\n  }\n`;\n\nexport const GET_PROPOSAL_DETAIL = gql`\n  query Proposal($id: String!) {\n    proposal(id: $id) {\n      id\n      timestamp\n      tokenTribute\n      sharesRequested\n      processed\n      didPass\n      aborted\n      yesVotes\n      noVotes\n      proposalIndex\n      votes(first: 100) {\n        member {\n          id\n          shares\n        }\n        uintVote\n      }\n      details\n      startingPeriod\n      processed\n      status @client\n      title @client\n      description @client\n      gracePeriod @client\n      votingEnds @client\n      votingStarts @client\n      readyForProcessing @client\n    }\n  }\n`;\n\nexport const SET_PROPOSAL_ATTRIBUTES = gql`\n  mutation SetAttributes(\n    $status: String!, \n    $title: String!, \n    $description: String!, \n    $gracePeriod: Number!, \n    $votingEnds: Number!, \n    $votingStarts: Number!, \n    $readyForProcessing: Bool!\n  ) {\n    setAttributes(\n      status: $status, \n      title: $title, \n      description: $description, \n      gracePeriod: $gracePeriod, \n      votingEnds: $votingEnds, \n      votingStarts: $votingStarts, \n      readyForProcessing: $readyForProcessing\n    ) @client {\n      status\n      title\n      description\n      gracePeriod\n      votingEnds\n      votingStarts\n      readyForProcessing\n    }\n  }\n`;\n","import SafeProvider from \"safe-web3-provider\"\nimport { ethers } from 'ethers';\n\nconst molochAbi = require('./abi/Moloch.abi.json')\nconst erc20Abi = require('./abi/ERC20.abi.json')\nconst medianizerAbi = require('./abi/Medianizer.abi.json')\n\nlet moloch\nlet token\nlet medianizer\nlet eth\n\nexport async function initWeb3(client) {\n  const loginMethod = localStorage.getItem(\"loginType\")\n  if (loginMethod === \"gnosis\") {\n    await initGnosisSafe(client)\n  } else {\n    await initMetamask(client)\n  }\n}\n\nasync function checkNetwork(eth) {\n  const network = await eth.getNetwork()\n  console.log('network: ', network);\n  if (network.chainId !== 1) {\n    alert('Please set Web3 provider to Mainnet and try again.')\n    return false\n  }\n  return true\n}\n\nexport async function initMetamask(client) {\n  if (!window.ethereum && !window.web3) {\n    // Non-DApp browsers won't work.\n    alert(\"Web3 not detected.\");\n  }\n  let coinbase = \"\"\n  if (window.ethereum) {\n    // Modern DApp browsers need to enable Metamask access.\n    await window.ethereum.enable()\n    let web3Provider = window['ethereum'] || window.web3.currentProvider\n    eth = new ethers.providers.Web3Provider(web3Provider);\n    if (await checkNetwork(eth)) {\n      localStorage.setItem(\"loginType\", \"metamask\");\n      coinbase = (await eth.listAccounts())[0].toLowerCase();\n    }\n  }\n  client.writeData({\n    data: {\n      loggedInUser: coinbase\n    }\n  });\n  window.localStorage.setItem(\"loggedInUser\", coinbase)\n  return eth\n}\n\nexport async function initGnosisSafe(client) {\n  /**\n   *  Create Safe Provider\n   */\n  const provider = new SafeProvider({\n    // TODO: CHANGE THIS TO INFURA/ALCHEMY\n    rpcUrl: process.env.REACT_APP_ETH_URL\n  });\n\n  /**\n   *  Create Web3\n   */\n  let coinbase = \"\"\n  eth = new ethers.providers.Web3Provider(provider);\n  if (await checkNetwork(eth)) {\n    localStorage.setItem(\"loginType\", \"gnosis\");\n    coinbase = (await eth.listAccounts())[0].toLowerCase();\n  }\n  client.writeData({\n    data: {\n      loggedInUser: coinbase\n    }\n  });\n  window.localStorage.setItem(\"loggedInUser\", coinbase)\n}\n\nexport async function getEthSigner() {\n  if (!eth) {\n    if (localStorage.getItem(\"loginType\") === \"metamask\") {\n      eth = await initMetamask()\n    } else if (localStorage.getItem(\"loginType\") === \"gnosis\") {\n      eth = await initGnosisSafe()\n    } else {\n      throw new Error(\"Not logged in with web3.\")\n    }\n  }\n  return eth\n}\n\nexport async function initMoloch(loggedInUser) {\n  if (loggedInUser) {\n    eth = await getEthSigner()\n    moloch = new ethers.Contract(process.env.REACT_APP_MOLOCH_ADDRESS, molochAbi, eth.getSigner())\n  } else {\n    const provider = ethers.getDefaultProvider();\n    moloch = new ethers.Contract(process.env.REACT_APP_MOLOCH_ADDRESS, molochAbi, provider)\n  }\n  return moloch\n}\n\nexport async function initToken(loggedInUser) {\n  if (loggedInUser) {\n    eth = await getEthSigner()\n    token = new ethers.Contract(process.env.REACT_APP_TOKEN_ADDRESS, erc20Abi, eth.getSigner())\n  } else {\n    const provider = ethers.getDefaultProvider();\n    token = new ethers.Contract(process.env.REACT_APP_TOKEN_ADDRESS, erc20Abi, provider)\n  }\n  // token = new web3.eth.Contract(erc20Abi, process.env.REACT_APP_TOKEN_ADDRESS)\n  return token\n}\n\nexport async function initMedianizer() {\n  // pull from mainnet\n  let provider = ethers.getDefaultProvider();\n  medianizer = new ethers.Contract(process.env.REACT_APP_MEDIANIZER_ADDRESS, medianizerAbi, provider)\n  return medianizer\n}\n\nexport async function getMoloch(loggedInUser) {\n  await initMoloch(loggedInUser)\n  return moloch\n}\n\nexport async function getToken(loggedInUser) {\n  await initToken(loggedInUser)\n  return token\n}\n\nexport async function getMedianizer() {\n  if (!medianizer) {\n    await initMedianizer()\n  }\n  return medianizer\n}","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Grid, Icon, Dropdown, Form, Button } from \"semantic-ui-react\";\nimport { Query, withApollo } from \"react-apollo\";\nimport { GET_MEMBER_DETAIL } from \"../helpers/graphQlQueries\";\nimport { getMoloch, initMetamask, initGnosisSafe } from \"../web3\";\n\nconst MainMenu = props => (\n  <div className=\"dropdownItems\">\n    {props.member && props.member.isActive ? (\n      <>\n        <Dropdown.Item className=\"item\" onClick={() => props._handleCloseDropdown()}>\n          <Link to={`/members/${props.member.id}`} className=\"link\">\n            <p>\n              <Icon name=\"user\" />\n              View Profile\n            </p>\n          </Link>\n        </Dropdown.Item>\n        <Dropdown.Divider />\n        <Dropdown.Item\n          icon=\"key\"\n          className=\"item\"\n          content=\"Change Delegate Key\"\n          onClick={() => {\n            props._handleOpenDropdown();\n            props.onLoadChangeDelegateKey();\n          }}\n        />\n        <Dropdown.Divider />\n        <Dropdown.Item\n          icon=\"dollar\"\n          className=\"item\"\n          content=\"Ragequit\"\n          onClick={() => {\n            props._handleOpenDropdown();\n            props.onLoadWithdrawLootToken();\n          }}\n        />\n        <Dropdown.Divider />\n      </>\n    ) : null}\n    <Dropdown.Item className=\"item\">\n      <Link\n        to=\"/login\"\n        className=\"link\"\n        onClick={async () => {\n          props._handleCloseDropdown();\n          window.localStorage.setItem(\"loggedInUser\", \"\");\n          await props.client.resetStore();\n          await props.populateData(true);\n          window.location.reload();\n        }}\n      >\n        <p>\n          <Icon name=\"power off\" />\n          Sign Out\n        </p>\n      </Link>\n    </Dropdown.Item>\n  </div>\n);\nconst MainMenuWrapped = withApollo(MainMenu);\n\nclass ChangeDelegateKeyMenu extends React.Component {\n  state = {\n    newDelegateKey: \"\"\n  }\n\n  submitChangeDelegateKey = async () => {\n    const { newDelegateKey } = this.state;\n    const { moloch } = this.props\n\n    console.log(`Sending moloch.updateDelegateKey(${newDelegateKey})`);\n\n    const tx = await moloch.updateDelegateKey(newDelegateKey);\n    console.log(\"tx: \", tx);\n  };\n\n  render() {\n    const { newDelegateKey } = this.state;\n    const { onLoadMain } = this.props\n    return (\n      <div>\n        <Dropdown.Item icon=\"arrow left\" className=\"item\" content=\"Back to Menu\" onClick={() => onLoadMain()} />\n        <Dropdown.Divider />\n        <Dropdown.Item className=\"item submenu\">\n          <p>\n            <Icon name=\"key\" />\n            Change Delegate Key\n          </p>\n          <Form.Input placeholder=\"Enter new key address\" onChange={event => this.setState({ newDelegateKey: event.target.value })} value={newDelegateKey} />\n          <Button onClick={this.submitChangeDelegateKey}>Save</Button>\n        </Dropdown.Item>\n      </div>\n    );\n  }\n}\n\nclass WithdrawLootTokenMenu extends React.Component {\n  state = {\n    ragequitAmount: \"\"\n  };\n\n  submitRagequit = async () => {\n    const { ragequitAmount } = this.state;\n    const { moloch } = this.props;\n\n    console.log(`Sending moloch.ragequit(${ragequitAmount})`);\n\n    const tx = await moloch.ragequit(ragequitAmount);\n    console.log(\"tx: \", tx);\n  };\n\n  render() {\n    const { ragequitAmount } = this.state;\n    const { onLoadMain } = this.props\n    return (\n      <div>\n        <Dropdown.Item icon=\"arrow left\" className=\"item\" content=\"Back to Menu\" onClick={() => onLoadMain()} />\n        <Dropdown.Divider />\n        <Dropdown.Item className=\"item submenu\">\n          <p>\n            <Icon name=\"dollar\" />\n            Ragequit\n          </p>\n          <Form.Input\n            placeholder=\"Number of shares\"\n            onChange={event => this.setState({ ragequitAmount: event.target.value })}\n            value={ragequitAmount}\n          />\n          <Button onClick={this.submitRagequit}>Withdraw</Button>\n        </Dropdown.Item>\n      </div>\n    );\n  }\n}\n\nexport default class Header extends Component {\n  state = {\n    visibleMenu: \"main\",\n    visibleRightMenu: false,\n    moloch: {},\n  };\n\n  async componentDidMount() {\n    const { loggedInUser } = this.props;\n    const moloch = await getMoloch(loggedInUser);\n    this.setState({ moloch });\n  }\n\n  _handleOpenDropdown() {\n    this.setState({ visibleRightMenu: true });\n  }\n\n  _handleCloseDropdown() {\n    this.setState({ visibleRightMenu: false });\n  }\n\n  logIn = async (method) => {\n    const { loggedInUser } = this.props;\n    const { client } = this.props\n    let eth\n    if (method === 'metamask') {\n      eth = await initMetamask(client);\n    } else if (method === 'gnosis') {\n      eth = await initGnosisSafe(client)\n    } else {\n      throw new Error('Unsupported Web3 login method')\n    }\n    if (!eth) {\n      return\n    }\n    \n    const moloch = await getMoloch(loggedInUser);\n    this.setState({ moloch });\n  }\n\n  getTopRightMenuContent(member) {\n    const { loggedInUser } = this.props;\n    let topRightMenuContent;\n    const { moloch } = this.state;\n    if (loggedInUser) {\n      switch (this.state.visibleMenu) {\n        case \"main\":\n          topRightMenuContent = (\n            <MainMenuWrapped\n              member={member}\n              _handleOpenDropdown={() => this._handleOpenDropdown()}\n              _handleCloseDropdown={() => this._handleCloseDropdown()}\n              onLoadChangeDelegateKey={() => this.setState({ visibleMenu: \"changeDelegateKey\" })}\n              onLoadWithdrawLootToken={() => this.setState({ visibleMenu: \"withdrawLootToken\" })}\n            />\n          );\n          break;\n        case \"changeDelegateKey\":\n          topRightMenuContent = (\n            <ChangeDelegateKeyMenu\n              onLoadMain={() => {\n                this._handleOpenDropdown();\n                this.setState({ visibleMenu: \"main\" });\n              }}\n              moloch={moloch}\n            />\n          );\n          break;\n        case \"withdrawLootToken\":\n          topRightMenuContent = (\n            <WithdrawLootTokenMenu\n              onLoadMain={() => {\n                this._handleOpenDropdown();\n                this.setState({ visibleMenu: \"main\" });\n              }}\n              moloch={moloch}\n            />\n          );\n          break;\n        default:\n          break;\n      }\n    } else {\n      topRightMenuContent = (\n        <>\n          <Dropdown.Item\n            icon=\"user\"\n            className=\"item\"\n            content=\"Log In With Metamask\"\n            onClick={() => this.logIn('metamask')}\n          />\n          <Dropdown.Divider />\n          <Dropdown.Item\n            icon=\"user\"\n            className=\"item\"\n            content=\"Log In With Gnosis Safe\"\n            onClick={() => this.logIn('gnosis')}\n          />\n        </>\n      );\n    }\n    return topRightMenuContent;\n  }\n\n  render() {\n    const { loggedInUser } = this.props;\n    return (\n      <Query query={GET_MEMBER_DETAIL} variables={{ address: loggedInUser }}>\n        {({ loading, error, data }) => {\n          if (loading) return \"Loading...\";\n          if (error) throw new Error(`Error!: ${error}`);\n          return (\n            <div id=\"header\">\n              <Grid columns=\"equal\" verticalAlign=\"middle\">\n                {loggedInUser ? (\n                  <Grid.Column textAlign=\"left\" className=\"menu\">\n                    {/* <Dropdown icon=\"bars\">\n                <Dropdown.Menu className=\"menu blurred\" direction=\"right\">\n                  <Link to=\"guildbank\" className=\"item\">\n                    <p>Guild Bank</p>\n                  </Link>\n                  <Dropdown.Divider />\n                  <Link to=\"/members\" className=\"item\">\n                    <p>Members</p>\n                  </Link>\n                  <Dropdown.Divider />\n                  <Link to=\"/proposals\" className=\"item\">\n                    <p>Proposals</p>\n                  </Link>\n                </Dropdown.Menu>\n              </Dropdown> */}\n                  </Grid.Column>\n                ) : null}\n                <Grid.Column textAlign=\"center\" className=\"logo\">\n                  <Link to=\"/\">MOLOCH</Link>\n                </Grid.Column>\n                  <Grid.Column textAlign=\"right\" className=\"dropdown\">\n                    <Dropdown\n                      className=\"right_dropdown\"\n                      open={this.state.visibleRightMenu}\n                      onBlur={() => this._handleCloseDropdown()}\n                      onFocus={() => this._handleOpenDropdown()}\n                      text={loggedInUser ? `${loggedInUser.substring(0, 6)}...` : 'Web3 Login'}\n                    >\n                      <Dropdown.Menu className=\"menu blurred\" direction=\"left\">\n                        {this.getTopRightMenuContent(data.member)}\n                      </Dropdown.Menu>\n                    </Dropdown>\n                  </Grid.Column>\n              </Grid>\n            </div>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n","import React from 'react';\n\n\nexport default ({ children }) => (\n  <div id=\"wrapper\">\n    { children }\n  </div>\n)","import { utils } from \"ethers\";\n\nexport const currencyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n  minimumFractionDigits: 2\n});\n\n/**\n * Converts Wei amount to Dollars\n * @param {*} weiAmount \n * @param {*} exchangeRate in Wei units\n */\nexport function convertWeiToDollars(weiAmount, exchangeRate) {\n  const weitoEth = utils.formatEther(weiAmount)\n  const exchWeiToEth = utils.formatEther(exchangeRate)\n  \n  return currencyFormatter.format(parseFloat(weitoEth * exchWeiToEth))\n}","import React from \"react\";\nimport { Grid, Button, Segment, Modal, Form, Statistic } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { Query } from \"react-apollo\";\nimport { getToken } from \"../web3\";\nimport { utils } from \"ethers\";\nimport { GET_METADATA, GET_MEMBERS, GET_PROPOSALS } from \"../helpers/graphQlQueries\";\nimport { convertWeiToDollars } from \"../helpers/currency\";\nimport { adopt } from \"react-adopt\";\n\nconst Composed = adopt({\n  members: ({ render }) => <Query query={GET_MEMBERS}>{render}</Query>,\n  proposals: ({ render }) => <Query query={GET_PROPOSALS}>{render}</Query>,\n  metadata: ({ render }) => <Query query={GET_METADATA}>{render}</Query>\n});\n\nconst NumMembers = ({ members, loading }) => (\n  <Link to=\"/members\" className=\"link\">\n    <Button size=\"large\" color=\"grey\" className=\"btn_link\">\n      {loading ? '...' : members.length} Members\n    </Button>\n  </Link>\n);\n\nconst NumProposals = ({ proposals, loading }) => (\n  <Link to=\"/proposals\" className=\"link\">\n    <Button size=\"large\" color=\"grey\" className=\"btn_link\">\n      {loading ? '...' : proposals.length} Proposals\n    </Button>\n  </Link>\n);\n\nexport default class HomePage extends React.Component {\n  state = {\n    approval: \"\",\n    token: null,\n    userAddress: null\n  };\n\n  async componentDidMount() {\n    const { loggedInUser } = this.props\n    const token = await getToken(loggedInUser);\n\n    this.setState({\n      token\n    });\n  }\n\n  handleChange = e => this.setState({ approval: e.target.value });\n\n  handleSubmit = async () => {\n    const { approval, token } = this.state;\n    console.log(\"Approving wETH: \", process.env.REACT_APP_MOLOCH_ADDRESS, utils.parseEther(approval).toString())\n    const tx = await token.approve(process.env.REACT_APP_MOLOCH_ADDRESS, utils.parseEther(approval));\n    console.log('tx: ', tx);\n  };\n\n  render() {\n    const { approval } = this.state;\n    return (\n      <Composed>\n        {({ members, proposals, metadata }) => {\n          if (metadata.loading) return <Segment className=\"blurred box\">Loading...</Segment>;\n\n          let membersLoading = false\n          if (members.loading) {\n            membersLoading = true\n          }\n\n          let proposalsLoading = false\n          if (proposals.loading) {\n            proposalsLoading = true\n          }\n\n          if (members.error) throw new Error(`Error!: ${members.error}`);\n          if (proposals.error) throw new Error(`Error!: ${proposals.error}`);\n          if (metadata.error) throw new Error(`Error!: ${metadata.error}`);\n          const { guildBankValue, exchangeRate, totalShares, shareValue } = metadata.data;\n          return (\n            <div id=\"homepage\">\n              <Grid columns={16} verticalAlign=\"middle\">\n                <Grid.Column mobile={16} tablet={6} computer={4} className=\"guild_value\">\n                  {/* <Link to=\"/guildbank\" className=\"text_link\"> */}\n                  <Statistic inverted label=\"Guild Bank Value\" value={convertWeiToDollars(guildBankValue, exchangeRate)} />\n                  {/* </Link> */}\n                </Grid.Column>\n                <Grid.Column mobile={16} tablet={10} computer={8} textAlign=\"center\" className=\"browse_buttons\">\n                  <NumMembers members={members.data.members} loading={membersLoading} />\n                  <NumProposals proposals={proposals.data.proposals} loading={proposalsLoading} />\n                </Grid.Column>\n                <Grid.Column mobile={16} tablet={6} computer={4} className=\"guild_value\">\n                  <Modal\n                    basic\n                    size=\"small\"\n                    trigger={\n                      <Button size=\"large\" color=\"grey\" className=\"browse_buttons\">\n                        Approve wETH\n                      </Button>\n                    }\n                  >\n                    <Modal.Header>Approve wETH</Modal.Header>\n                    <Modal.Content>\n                      <Form onSubmit={this.handleSubmit}>\n                        <Form.Field>\n                          <label>Amount to Approve</label>\n                          <input placeholder=\"Amount in ETH\" name=\"amount\" value={approval} onChange={this.handleChange} className=\"asset_amount\" />\n                        </Form.Field>\n                        <Button type=\"submit\" color=\"grey\" className=\"btn_link\">\n                          Submit\n                        </Button>\n                      </Form>\n                    </Modal.Content>\n                  </Modal>\n                </Grid.Column>\n\n                <Grid.Column width={16}>\n                  <Segment className=\"blurred box\">\n                    <Grid columns=\"equal\" className=\"graph_values\">\n                      <Grid.Column textAlign=\"left\">\n                        <Statistic inverted label=\"Total Shares\" value={totalShares} />\n                      </Grid.Column>\n                      <Grid.Column textAlign=\"center\">\n                        <Statistic inverted label=\"Total ETH\" value={utils.formatEther(guildBankValue)} />\n                      </Grid.Column>\n                      <Grid.Column textAlign=\"right\">\n                        <Statistic inverted label=\"Share Value\" value={convertWeiToDollars(shareValue, exchangeRate)} />\n                      </Grid.Column>\n                    </Grid>\n                  </Segment>\n                </Grid.Column>\n              </Grid>\n            </div>\n          );\n        }}\n      </Composed>\n    );\n  }\n}\n","import React from 'react';\nimport { Progress, Grid } from 'semantic-ui-react';\n\n\nconst ProgressBar = ({ yes, no }) => {\n  const total = yes + no\n  const percentYes = yes === 0 ? 0 : Math.round((yes / total) * 100)\n  const percentNo = no === 0 ? 0 : Math.round((no / total) * 100)\n  return (\n  <>\n    <div style={{ position: \"relative\" }}>\n      <Progress\n        percent={percentYes + percentNo}\n        color=\"red\"\n        size=\"small\"\n        style={{\n          position: \"absolute\",\n          top: \"0\",\n          width: \"100%\"\n        }}\n        className={no === 0 ? \"hide-bar\" : \"\"}\n      />\n      <Progress percent={percentYes} color=\"green\" size=\"small\" className={yes === 0 ? \"hide-bar\" : \"\"} />\n    </div>\n    <Grid columns=\"equal\">\n      <Grid.Column floated=\"left\">{yes} Yes Votes</Grid.Column>\n      <Grid.Column floated=\"right\" textAlign=\"right\">\n        {no} No Votes\n      </Grid.Column>\n    </Grid>\n  </>\n)};\n\nexport default ProgressBar","import React from \"react\";\n\nexport const VOTING_PERIOD_LENGTH = 35;\nexport const GRACE_PERIOD_LENGTH = 35;\nexport const PERIOD_DURATION = 17280;\n\nexport const ProposalStatus = {\n  Unknown: \"Unknown\",\n  InQueue: \"InQueue\",\n  VotingPeriod: \"VotingPeriod\",\n  GracePeriod: \"GracePeriod\",\n  Aborted: \"Aborted\",\n  Passed: \"Passed\",\n  Failed: \"Failed\",\n  ReadyForProcessing: \"ReadyForProcessing\"\n};\n\nexport function periodsToTime(periods) {\n  const seconds = PERIOD_DURATION * periods;\n\n  const days = Math.floor((seconds % 31536000) / 86400);\n  const hours = Math.floor(((seconds % 31536000) % 86400) / 3600);\n  const minutes = Math.floor((((seconds % 31536000) % 86400) % 3600) / 60);\n\n  let string = \"\";\n  string = days ? `${days} days` : string;\n  string = hours ? `${string} ${hours} hours` : string;\n  string = minutes ? `${string} ${minutes} minutes` : string;\n\n  return string;\n}\n\nexport function getProposalCountdownText(proposal) {\n  switch (proposal.status) {\n    case ProposalStatus.InQueue:\n      return (\n        <>\n          <span className=\"subtext\">Voting Begins: </span>\n          <span>{proposal.votingStarts ? periodsToTime(proposal.votingStarts) : \"-\"}</span>\n        </>\n      );\n    case ProposalStatus.VotingPeriod:\n      return (\n        <>\n          <span className=\"subtext\">Voting Ends: </span>\n          <span>{proposal.votingEnds ? periodsToTime(proposal.votingEnds) : \"-\"}</span>\n        </>\n      );\n    case ProposalStatus.GracePeriod:\n      return (\n        <>\n          <span className=\"subtext\">Grace Period Ends: </span>\n          <span>{proposal.gracePeriod ? periodsToTime(proposal.gracePeriod) : \"-\"}</span>\n        </>\n      );\n    case ProposalStatus.Passed:\n      return <span className=\"subtext\">Passed</span>;\n    case ProposalStatus.Failed:\n      return <span className=\"subtext\">Failed</span>;\n    case ProposalStatus.Aborted:\n      return <span className=\"subtext\">Aborted</span>;\n    case ProposalStatus.ReadyForProcessing:\n      return <span className=\"subtext\">Ready For Processing</span>;\n    default:\n      return <></>;\n  }\n}\n\nexport const inQueue = (proposal, currentPeriod) => currentPeriod < proposal.startingPeriod;\n\nexport const inGracePeriod = (proposal, currentPeriod) =>\n    currentPeriod > proposal.startingPeriod + VOTING_PERIOD_LENGTH &&\n    currentPeriod < proposal.startingPeriod + VOTING_PERIOD_LENGTH + GRACE_PERIOD_LENGTH;\n\nexport const inVotingPeriod = (proposal, currentPeriod) => currentPeriod >= proposal.startingPeriod && currentPeriod <= proposal.startingPeriod + VOTING_PERIOD_LENGTH;\n\nexport const passedVotingAndGrace = (proposal, currentPeriod) => currentPeriod > proposal.startingPeriod + VOTING_PERIOD_LENGTH + GRACE_PERIOD_LENGTH;\n\nexport function determineProposalStatus(proposal, currentPeriod) {\n  proposal.startingPeriod = +proposal.startingPeriod\n\n  let status;\n  if (proposal.processed && proposal.aborted) {\n    status = ProposalStatus.Aborted;\n  } else if (proposal.processed && proposal.didPass) {\n    status = ProposalStatus.Passed;\n  } else if (proposal.processed && !proposal.didPass) {\n    status = ProposalStatus.Failed;\n  } else if (inGracePeriod(proposal, currentPeriod)) {\n    status = ProposalStatus.GracePeriod;\n  } else if (inVotingPeriod(proposal, currentPeriod)) {\n    status = ProposalStatus.VotingPeriod;\n  } else if (inQueue(proposal, currentPeriod)) {\n    status = ProposalStatus.InQueue;\n  } else if (passedVotingAndGrace(proposal, currentPeriod)) {\n    status = ProposalStatus.ReadyForProcessing;\n  } else {\n    status = ProposalStatus.Unknown;\n  }\n\n  return status;\n}\n","import React, { Component } from \"react\";\nimport { Divider, Grid, Icon, Segment, Button, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport hood from \"assets/hood.png\";\nimport ProgressBar from \"./ProgressBar\";\nimport { Query } from \"react-apollo\";\nimport { ProposalStatus, getProposalCountdownText } from \"../helpers/proposals\";\nimport { getMoloch } from \"../web3\";\nimport { GET_PROPOSAL_DETAIL, GET_METADATA, GET_MEMBER_BY_DELEGATE_KEY } from \"../helpers/graphQlQueries\";\nimport { convertWeiToDollars } from \"../helpers/currency\";\nimport { utils } from \"ethers\";\nimport { adopt } from \"react-adopt\";\nimport Linkify from 'react-linkify';\n\nexport const Vote = {\n  Null: 0, // default value, counted as abstention\n  Yes: 1,\n  No: 2\n};\n\nconst MemberAvatar = ({ member }) => {\n  return (\n    <Grid.Column mobile={4} tablet={3} computer={3} textAlign=\"center\" className=\"member_avatar\" title={member}>\n      <Link to={`/members/${member}`} className=\"uncolored\">\n        <Image src={hood} centered />\n        <p className=\"name\">{!member ? \"\" : member.length > 10 ? member.substring(0, 10) + \"...\" : member}</p>\n      </Link>\n    </Grid.Column>\n  );\n};\n\nconst Composed = adopt({\n  proposalDetail: ({ render, id }) => (\n    <Query query={GET_PROPOSAL_DETAIL} variables={{ id }}>\n      {render}\n    </Query>\n  ),\n  metadata: ({ render }) => <Query query={GET_METADATA}>{render}</Query>,\n  member: ({ render, delegateKey }) => (\n    <Query query={GET_MEMBER_BY_DELEGATE_KEY} variables={{ delegateKey }}>\n      {render}\n    </Query>\n  )\n});\n\nexport default class ProposalDetail extends Component {\n  state = {\n    proposal: {\n      tokenTribute: 0,\n      sharesRequested: 0,\n      votingEnded: true,\n      graceEnded: true,\n      yesVotes: 0,\n      noVotes: 0,\n      status: ProposalStatus.InQueue,\n      votes: []\n    },\n    user: {\n      id: 0,\n      shares: 0,\n      isActive: false\n    },\n    moloch: null,\n    shareValue: \"0\",\n    exchangeRate: \"0\"\n  };\n\n  async componentDidMount() {\n    const { loggedInUser } = this.props;\n    const moloch = await getMoloch(loggedInUser);\n    this.setState({\n      moloch\n    });\n  }\n\n  handleNo = async proposal => {\n    const { moloch } = this.state;\n    await moloch.submitVote(proposal.proposalIndex, Vote.No);\n    this.setState({\n      userHasVoted: true\n    });\n  };\n\n  handleYes = async proposal => {\n    const { moloch } = this.state;\n    await moloch.submitVote(proposal.proposalIndex, Vote.Yes);\n    this.setState({\n      userHasVoted: true\n    });\n  };\n\n  handleProcess = async proposal => {\n    const { moloch } = this.state;\n    await moloch.processProposal(proposal.proposalIndex);\n  };\n\n  render() {\n    const { loggedInUser } = this.props;\n\n    return (\n      <Composed id={this.props.match.params.id} delegateKey={loggedInUser}>\n        {({ proposalDetail, metadata, member }) => {\n          if (proposalDetail.loading || metadata.loading || member.loading) return <Segment className=\"blurred box\">Loading...</Segment>;\n          if (proposalDetail.error) throw new Error(`Error!: ${proposalDetail.error}`);\n          if (metadata.error) throw new Error(`Error!: ${metadata.error}`);\n          if (member.error) throw new Error(`Error!: ${member.error}`);\n\n          const { proposal } = proposalDetail.data;\n          const { shareValue, exchangeRate } = metadata.data;\n\n          const yesShares = proposal.votes.reduce((totalVotes, vote) => {\n            if (vote.uintVote === Vote.Yes) {\n              return (totalVotes += parseInt(vote.member.shares));\n            } else {\n              return totalVotes;\n            }\n          }, 0);\n\n          const noShares = proposal.votes.reduce((totalVotes, vote) => {\n            if (vote.uintVote === Vote.No) {\n              return (totalVotes += parseInt(vote.member.shares));\n            } else {\n              return totalVotes;\n            }\n          }, 0);\n\n          const user = member.data.members.length > 0 ? member.data.members[0] : null;\n          const userHasVoted = proposal.votes.find(vote => vote.member.id === loggedInUser) ? true : false;\n          const cannotVote =\n            proposal.aborted ||\n            userHasVoted ||\n            proposal.status !== ProposalStatus.VotingPeriod ||\n            (!(user && user.shares) || !(user && user.isActive));\n\n          return (\n            <div id=\"proposal_detail\">\n              <Grid centered columns={16}>\n                <Segment className=\"transparent box segment\" textAlign=\"center\">\n                  <Grid centered columns={14}>\n                    <Grid.Column mobile={16} tablet={16} computer={12}>\n                      <span className=\"title\">{proposal.title ? proposal.title : \"N/A\"}</span>\n                    </Grid.Column>\n                  </Grid>\n                  <Grid centered columns={14}>\n                    <Grid.Column mobile={16} tablet={16} computer={4}>\n                      <Linkify properties={{target: '_blank'}}>\n                        <div className=\"subtext description wordwrap\">{proposal.description ? proposal.description : \"N/A\"}</div>\n                      </Linkify>\n                      <Grid columns=\"equal\" className=\"tokens\">\n                        <Grid.Row>\n                          <Grid.Column className=\"tributes\">\n                            <Segment className=\"pill\" textAlign=\"center\">\n                              <Icon name=\"ethereum\" />\n                              {utils.formatEther(proposal.tokenTribute)} ETH\n                            </Segment>\n                          </Grid.Column>\n                        </Grid.Row>\n                      </Grid>\n                      <Grid columns=\"equal\">\n                        <Grid.Column>\n                          <p className=\"subtext voting\">Shares</p>\n                          <p className=\"amount\">{proposal.sharesRequested}</p>\n                        </Grid.Column>\n                        <Grid.Column textAlign=\"right\">\n                          <p className=\"subtext\">Total USD Value</p>\n                          <p className=\"amount\">\n                            {convertWeiToDollars(\n                              utils\n                                .bigNumberify(proposal.sharesRequested)\n                                .mul(shareValue)\n                                .toString(),\n                              exchangeRate\n                            )}\n                          </p>\n                        </Grid.Column>\n                      </Grid>\n                    </Grid.Column>\n\n                    <Grid.Column mobile={16} tablet={16} computer={2}>\n                      <Divider vertical />\n                    </Grid.Column>\n\n                    <Grid.Column mobile={16} tablet={16} computer={6}>\n                      <Grid columns={16}>\n                        <Grid.Column textAlign=\"center\" mobile={16} tablet={16} computer={16} className=\"pill_column\">\n                          <span className=\"pill\">{getProposalCountdownText(proposal)}</span>\n                        </Grid.Column>\n                      </Grid>\n                      <Grid columns={16} className=\"member_list\">\n                        <Grid.Row>\n                          <Grid.Column mobile={16} tablet={16} computer={16} className=\"pill_column\">\n                            {proposal.votes.length > 0 ? (\n                              <Grid>\n                                <Grid.Row className=\"members_row\">\n                                  {/* centered */}\n                                  {proposal.votes.map((vote, idx) => (\n                                    <MemberAvatar member={vote.member.id} shares={vote.member.shares} key={idx} />\n                                  ))}\n                                </Grid.Row>\n                              </Grid>\n                            ) : null}\n                          </Grid.Column>\n                        </Grid.Row>\n                      </Grid>\n                      <Grid>\n                        <Grid.Column textAlign={proposal.aborted ? \"center\" : \"\"}>\n                          {proposal.aborted ? <p className=\"amount\">Aborted</p> : <ProgressBar yes={yesShares} no={noShares} />}\n                        </Grid.Column>\n                      </Grid>\n                      <Grid columns=\"equal\" centered>\n                        <Grid.Column textAlign=\"center\" mobile={16} tablet={5} computer={5}>\n                          <Button className=\"btn\" color=\"grey\" disabled={cannotVote} onClick={() => this.handleNo(proposal)}>\n                            Vote No\n                          </Button>\n                        </Grid.Column>\n                        <Grid.Column textAlign=\"center\" mobile={16} tablet={5} computer={5}>\n                          <Button className=\"btn\" color=\"grey\" disabled={cannotVote} onClick={() => this.handleYes(proposal)}>\n                            Vote Yes\n                          </Button>\n                        </Grid.Column>\n                        <Grid.Column textAlign=\"center\" mobile={16} tablet={5} computer={5}>\n                          <Button\n                            className=\"btn\"\n                            color=\"grey\"\n                            onClick={() => this.handleProcess(proposal)}\n                            disabled={proposal.status !== ProposalStatus.ReadyForProcessing}\n                          >\n                            Process Proposal\n                          </Button>\n                        </Grid.Column>\n                      </Grid>\n                    </Grid.Column>\n                  </Grid>\n                </Segment>\n              </Grid>\n            </div>\n          );\n        }}\n      </Composed>\n    );\n  }\n}\n","import React from \"react\";\nimport { Segment, Grid, Button, Tab, Icon } from \"semantic-ui-react\";\nimport { Route, Switch, Link } from \"react-router-dom\";\n\nimport ProposalDetail, { Vote } from \"./ProposalDetail\";\nimport ProgressBar from \"./ProgressBar\";\nimport { Query } from \"react-apollo\";\nimport { ProposalStatus, getProposalCountdownText } from \"../helpers/proposals\";\nimport { GET_METADATA, GET_MEMBER_BY_DELEGATE_KEY, GET_COMPLETED_PROPOSAL_LIST, GET_ACTIVE_PROPOSAL_LIST } from \"../helpers/graphQlQueries\";\nimport { utils } from \"ethers\";\nimport { adopt } from \"react-adopt\";\n\nconst ProposalCard = ({ proposal }) => {\n  let id = proposal.id;\n\n  const yesShares = proposal.votes.reduce((totalVotes, vote) => {\n    if (vote.uintVote === Vote.Yes) {\n      return (totalVotes += parseInt(vote.member.shares));\n    } else {\n      return totalVotes;\n    }\n  }, 0);\n\n  const noShares = proposal.votes.reduce((totalVotes, vote) => {\n    if (vote.uintVote === Vote.No) {\n      return (totalVotes += parseInt(vote.member.shares));\n    } else {\n      return totalVotes;\n    }\n  }, 0);\n\n  return (\n    <Grid.Column mobile={16} tablet={8} computer={5}>\n      <Link to={{ pathname: `/proposals/${id}` }} className=\"uncolored\">\n        <Segment className=\"blurred box\">\n          <p className=\"name\">{proposal.title ? proposal.title : \"N/A\"}</p>\n          <p className=\"subtext description\">{proposal.description ? proposal.description : \"N/A\"}</p>\n          <Grid columns=\"equal\" className=\"value_shares\">\n            <Grid.Row>\n              <Grid.Column textAlign=\"center\">\n                <p className=\"subtext\">Shares Requested</p>\n                <p className=\"amount\">{proposal.sharesRequested}</p>\n              </Grid.Column>\n              <Grid.Column textAlign=\"center\">\n                <p className=\"subtext\">\n                  Tribute <Icon name=\"ethereum\" />\n                </p>\n                <p className=\"amount\">{parseFloat(utils.formatEther(proposal.tokenTribute)).toFixed(2)}</p>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n          <Grid columns=\"equal\" className=\"deadlines\">\n            <Grid.Row>\n              <Grid.Column textAlign=\"center\">\n                <Segment className=\"voting pill\" textAlign=\"center\">\n                  {getProposalCountdownText(proposal)}\n                </Segment>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n          {proposal.aborted ? (\n             <Grid columns=\"equal\" className=\"deadlines\">\n            <Grid.Row>\n              <Grid.Column textAlign=\"center\">\n                <p className=\"amount\">Aborted</p>\n              </Grid.Column>\n            </Grid.Row>\n            </Grid>\n          ) : (\n            <ProgressBar yes={yesShares} no={noShares} />\n          )}\n        </Segment>\n      </Link>\n    </Grid.Column>\n  );\n};\n\nconst Composed = adopt({\n  activeProposalsResult: ({ render }) => <Query query={GET_ACTIVE_PROPOSAL_LIST}>{render}</Query>,\n  completedProposalsResult: ({ render }) => <Query query={GET_COMPLETED_PROPOSAL_LIST}>{render}</Query>,\n  metadata: ({ render }) => <Query query={GET_METADATA}>{render}</Query>\n});\n\nconst ProposalList = ({ isActive }) => (\n  <Composed>\n    {({ activeProposalsResult, completedProposalsResult, metadata }) => {\n      if (metadata.loading) return <Segment className=\"blurred box\">Loading...</Segment>;\n      if (activeProposalsResult.loading) {\n        activeProposalsResult.data = { proposals: [] };\n      }\n\n      if (completedProposalsResult.loading) {\n        completedProposalsResult.data = { proposals: [] };\n      }\n\n      if (activeProposalsResult.error) throw new Error(`Error!: ${activeProposalsResult.error}`);\n      if (completedProposalsResult.error) throw new Error(`Error!: ${completedProposalsResult.error}`);\n      if (metadata.error) throw new Error(`Error!: ${metadata.error}`);\n\n      const { proposals } = activeProposalsResult.data;\n      const { proposals: completedProposals } = completedProposalsResult.data;\n      const { shareValue, exchangeRate, totalShares } = metadata.data;\n\n      // sort in descending order of index\n      const sortProposals = (a, b) => b.proposalIndex - a.proposalIndex;\n\n      const gracePeriod = proposals.filter(p => p.status === ProposalStatus.GracePeriod).sort(sortProposals);\n      const votingPeriod = proposals.filter(p => p.status === ProposalStatus.VotingPeriod).sort(sortProposals);\n      const inQueue = proposals.filter(p => p.status === ProposalStatus.InQueue).sort(sortProposals);\n      const readyForProcessing = proposals.filter(p => p.status === ProposalStatus.ReadyForProcessing).sort(sortProposals);\n\n      const panes = [\n        {\n          menuItem: `Voting Period (${activeProposalsResult.loading ? \"...\" : votingPeriod.length})`,\n          render: () => (\n            <Tab.Pane attached={false}>\n              <Grid columns={3}>\n                {votingPeriod.map((p, index) => (\n                  <ProposalCard exchangeRate={exchangeRate} shareValue={shareValue} totalShares={+totalShares} proposal={p} key={index} />\n                ))}\n              </Grid>\n            </Tab.Pane>\n          )\n        },\n        {\n          menuItem: `Grace Period (${activeProposalsResult.loading ? \"...\" : gracePeriod.length})`,\n          render: () => (\n            <Tab.Pane attached={false}>\n              <Grid columns={3}>\n                {gracePeriod.map((p, index) => (\n                  <ProposalCard exchangeRate={exchangeRate} shareValue={shareValue} totalShares={+totalShares} proposal={p} key={index} />\n                ))}\n              </Grid>\n            </Tab.Pane>\n          )\n        },\n        {\n          menuItem: `Ready For Processing (${activeProposalsResult.loading ? \"...\" : readyForProcessing.length})`,\n          render: () => (\n            <Tab.Pane attached={false}>\n              <Grid columns={3}>\n                {readyForProcessing.map((p, index) => (\n                  <ProposalCard exchangeRate={exchangeRate} shareValue={shareValue} totalShares={+totalShares} proposal={p} key={index} />\n                ))}\n              </Grid>\n            </Tab.Pane>\n          )\n        },\n        {\n          menuItem: `Completed (${completedProposalsResult.loading ? \"...\" : completedProposals.length})`,\n          render: () => (\n            <Tab.Pane attached={false}>\n              <Grid columns={3}>\n                {completedProposals.map((p, index) => (\n                  <ProposalCard exchangeRate={exchangeRate} shareValue={shareValue} totalShares={+totalShares} proposal={p} key={index} />\n                ))}\n              </Grid>\n            </Tab.Pane>\n          )\n        },\n        {\n          menuItem: `In Queue (${activeProposalsResult.loading ? \"...\" : inQueue.length})`,\n          render: () => (\n            <Tab.Pane attached={false}>\n              <Grid columns={3}>\n                {inQueue.map((p, index) => (\n                  <ProposalCard exchangeRate={exchangeRate} shareValue={shareValue} totalShares={+totalShares} proposal={p} key={index} />\n                ))}\n              </Grid>\n            </Tab.Pane>\n          )\n        }\n      ];\n\n      return (\n        <div id=\"proposal_list\">\n          <>\n            <Grid columns={16} verticalAlign=\"middle\">\n              <Grid.Column mobile={16} tablet={8} computer={4} textAlign=\"right\" floated=\"right\" className=\"submit_button\">\n                <Link to={isActive ? \"/proposalsubmission\" : \"/proposals\"} className=\"link\">\n                  <Button size=\"large\" color=\"red\" disabled={!isActive}>\n                    New Proposal\n                  </Button>\n                </Link>\n              </Grid.Column>\n            </Grid>\n            <Tab menu={{ secondary: true, pointing: true }} panes={panes} />\n          </>\n        </div>\n      );\n    }}\n  </Composed>\n);\n\nconst ProposalListView = ({ loggedInUser }) => {\n  return (\n    <Query query={GET_MEMBER_BY_DELEGATE_KEY} variables={{ delegateKey: loggedInUser }}>\n      {({ loading, error, data }) => {\n        if (loading) return \"Loading...\";\n        if (error) throw new Error(`Error!: ${error}`);\n        const member = data.members.length > 0 ? data.members[0] : null;\n        return (\n          <Switch>\n            <Route exact path=\"/proposals\" render={props => <ProposalList {...props} isActive={member ? member.isActive : false} />} />\n            <Route path=\"/proposals/:id\" render={props => <ProposalDetail {...props} loggedInUser={loggedInUser} />} />\n          </Switch>\n        );\n      }}\n    </Query>\n  );\n};\n\nexport default ProposalListView;\n","import React from \"react\";\nimport { Divider, Grid, Segment, Image, Icon, Label, Header } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nimport bull from \"assets/bull.png\";\nimport hood from \"assets/hood.png\";\n\nimport { Query } from \"react-apollo\";\nimport { Vote } from \"./ProposalDetail\";\nimport { utils } from \"ethers\";\nimport { convertWeiToDollars } from \"../helpers/currency\";\nimport { adopt } from \"react-adopt\";\nimport { GET_METADATA, GET_MEMBER_DETAIL_WITH_VOTES } from \"../helpers/graphQlQueries\";\nimport { getProposalCountdownText } from \"../helpers/proposals\";\n\nconst Composed = adopt({\n  memberDetail: ({ render, name }) => (\n    <Query query={GET_MEMBER_DETAIL_WITH_VOTES} variables={{ address: name }}>\n      {render}\n    </Query>\n  ),\n  metadata: ({ render }) => <Query query={GET_METADATA}>{render}</Query>,\n});\n\nconst MemberDetail = ({ loggedInUser, member, shareValue, exchangeRate }) => (\n  <Segment className=\"blurred box\">\n    <Grid columns=\"equal\">\n      <Grid.Column>\n        <p className=\"subtext\">Shares</p>\n        <p className=\"amount\">{member.shares}</p>\n      </Grid.Column>\n      <Grid.Column textAlign=\"right\">\n        <p className=\"subtext\">Total Value</p>\n        <p className=\"amount\">\n          {convertWeiToDollars(\n            utils\n              .bigNumberify(member.shares)\n              .mul(shareValue)\n              .toString(),\n            exchangeRate\n          )}\n        </p>\n      </Grid.Column>\n    </Grid>\n    <Grid>\n      <Grid.Column textAlign=\"center\" className=\"avatar\">\n        <Image centered src={loggedInUser === member.id || loggedInUser === member.delegateKey ? bull : hood} size=\"tiny\" />\n      </Grid.Column>\n    </Grid>\n    <p className=\"subtext\">Tribute</p>\n    <Grid columns=\"equal\">\n      <Grid.Row>\n        <Grid.Column>\n          <Segment className=\"pill\" textAlign=\"center\">\n            <Icon name=\"ethereum\" />\n            {utils.formatEther(member.tokenTribute)} ETH\n          </Segment>\n        </Grid.Column>\n      </Grid.Row>\n      <p className=\"subtext\">Delegate Key</p>\n      <Grid.Row>\n        <Grid.Column>\n          <p className=\"subtext\">{member.delegateKey}</p>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  </Segment>\n);\n\nconst ProposalDetail = ({ proposals }) => (\n  <Segment className=\"blurred box\">\n    <Grid columns=\"equal\" textAlign=\"center\">\n      <Grid.Row className=\"subtext\" style={{ fontSize: 20 }}>\n        History\n      </Grid.Row>\n    </Grid>\n    <Grid columns=\"equal\">\n      <Grid.Row className=\"header\">\n        <Grid.Column textAlign=\"center\">\n          <p className=\"subtext\">Proposal Title</p>\n        </Grid.Column>\n        <Grid.Column textAlign=\"center\">\n          <p className=\"subtext\">Date</p>\n        </Grid.Column>\n        <Grid.Column textAlign=\"center\">\n          <p className=\"subtext\">Shares Requested</p>\n        </Grid.Column>\n        <Grid.Column textAlign=\"center\">\n          <p className=\"subtext\">Tribute Offered</p>\n        </Grid.Column>\n        <Grid.Column textAlign=\"center\">\n          <p className=\"subtext\">Vote</p>\n        </Grid.Column>\n        <Grid.Column textAlign=\"center\">\n          <p className=\"subtext\">Status</p>\n        </Grid.Column>\n      </Grid.Row>\n      {proposals && proposals.length > 0 ? (\n        proposals.map((p, idx) => {\n          return (\n            <React.Fragment key={idx}>\n                <Grid.Row verticalAlign=\"middle\">\n                  <Grid.Column textAlign=\"center\">\n                    <Link to={{ pathname: `/proposals/${p.proposal.id}` }} className=\"uncolored\">\n                    {p.uintVote === Vote.Yes && <Label className=\"dot\" circular color=\"green\" empty />}\n                    {/* TODO: is this right? */}\n                    {(p.uintVote === Vote.No || p.uintVote === Vote.Null) && <Label className=\"dot\" circular color=\"red\" empty />}\n                    {p.proposal.title}\n                    </Link>\n                  </Grid.Column>\n                  <Grid.Column textAlign=\"center\">\n                    <p className=\"subtext date\">{new Date(p.proposal.timestamp * 1000).toISOString().slice(0, 10)}</p>\n                  </Grid.Column>\n                  <Grid.Column textAlign=\"center\">\n                    <p className=\"subtext date\">{p.proposal.sharesRequested}</p>\n                  </Grid.Column>\n                  <Grid.Column textAlign=\"center\">\n                    <p className=\"subtext date\">{utils.formatEther(p.proposal.tokenTribute)}</p>\n                  </Grid.Column>\n                  <Grid.Column textAlign=\"center\">\n                    <Header as=\"p\" color={p.uintVote === Vote.Yes ? \"green\" : p.uintVote === Vote.No ? \"red\" : null}>\n                      {p.uintVote === Vote.Yes ? \"Y\" : p.uintVote === Vote.No ? \"N\" : \"\"}\n                    </Header>\n                  </Grid.Column>\n                  <Grid.Column textAlign=\"center\">\n                    <p className=\"subtext date\">{getProposalCountdownText(p.proposal)}</p>\n                  </Grid.Column>\n              </Grid.Row>\n              <Divider />\n            </React.Fragment>\n          );\n        })\n      ) : (\n        <Grid.Row verticalAlign=\"middle\">\n          <Grid.Column textAlign=\"center\">This member hasn't voted on any proposals yet.</Grid.Column>\n        </Grid.Row>\n      )}\n    </Grid>\n  </Segment>\n);\n\nconst MemberDetailView = props => (\n  <Composed name={props.match.params.name}>\n    {({ memberDetail, metadata }) => {\n      if (memberDetail.loading || metadata.loading) return <Segment className=\"blurred box\">Loading...</Segment>;\n      if (memberDetail.error) throw new Error(`Error!: ${memberDetail.error}`);\n      if (metadata.error) throw new Error(`Error!: ${metadata.error}`);\n      return (\n        <div id=\"member_detail\">\n          <p className=\"title\"> {props.match.params.name} </p>\n          <Divider />\n          <Grid columns={16}>\n            <Grid.Row className=\"details\">\n              <Grid.Column mobile={16} tablet={16} computer={6} className=\"user\">\n                <MemberDetail\n                  loggedInUser={props.loggedInUser}\n                  member={memberDetail.data.member}\n                  shareValue={metadata.data.shareValue}\n                  exchangeRate={metadata.data.exchangeRate}\n                />\n              </Grid.Column>\n              <Grid.Column mobile={16} tablet={16} computer={10} className=\"proposals\">\n                <ProposalDetail proposals={memberDetail.data.member.votes} />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </div>\n      );\n    }}\n  </Composed>\n);\n\nexport default MemberDetailView;\n","import React from \"react\";\nimport { Grid, Image, Divider } from \"semantic-ui-react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\n\nimport MemberDetail from \"./MemberDetail\";\nimport bull from \"assets/bull.png\";\nimport hood from \"assets/hood.png\";\n\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { GET_MEMBERS, GET_MEMBER_DETAIL } from \"../helpers/graphQlQueries\";\n\nconst MemberAvatar = ({ address, shares }) => (\n  <Grid.Column mobile={5} tablet={3} computer={3} textAlign=\"center\" className=\"member_avatar\" title={address}>\n    <Link to={`/members/${address}`} className=\"uncolored\">\n      <Image src={hood} centered size=\"tiny\" />\n      <p className=\"name\">{!address ? \"\" : address.length > 10 ? address.substring(0, 10) + \"...\" : address}</p>\n      <p className=\"subtext\">{shares} shares</p>\n    </Link>\n  </Grid.Column>\n);\n\nconst LoggedInUser = props => (\n  <Query query={GET_MEMBER_DETAIL} variables={{ address: props.loggedInUser }}>\n    {({ loading, error, data }) => {\n      if (loading) return \"...\";\n      if (error) throw new Error(`Error!: ${error}`);\n      return data.member && data.member.isActive ? (\n        <Link to={`/members/${data.member.id}`} className=\"uncolored\">\n          <Image centered src={bull} size=\"tiny\" />\n          <p className=\"name\">{!data.member.id ? \"\" : data.member.id.length > 10 ? data.member.id.substring(0, 10) + \"...\" : data.member.id}</p>\n          <p className=\"subtext\">{data.member.shares ? data.member.shares : 0} shares</p>\n        </Link>\n      ) : (\n        <div />\n      );\n    }}\n  </Query>\n);\n\nconst GET_ELDERS = gql`\n  {\n    members(first: 100, where: { shares_gte: 100, isActive: true }) {\n      id\n      shares\n    }\n  }\n`;\nconst Elders = () => (\n  <Query query={GET_ELDERS}>\n    {({ loading, error, data }) => {\n      if (loading) return \"...\";\n      if (error) throw new Error(`Error!: ${error}`);\n      return data.members.length > 0 ? (\n        data.members.map((elder, idx) => <MemberAvatar address={elder.id} shares={elder.shares} key={idx} />)\n      ) : (\n        <>No elders to show.</>\n      );\n    }}\n  </Query>\n);\n\nconst GET_NON_ELDERS = gql`\n  {\n    members(first: 100, where: { shares_gt: 0, shares_lt: 100, isActive: true }) {\n      id\n      shares\n    }\n  }\n`;\nconst Contributors = () => (\n  <Query query={GET_NON_ELDERS}>\n    {({ loading, error, data }) => {\n      if (loading) return \"...\";\n      if (error) throw new Error(`Error!: ${error}`);\n      return data.members.length > 0 ? (\n        data.members.map((contributor, idx) => <MemberAvatar address={contributor.id} shares={contributor.shares} key={idx} />)\n      ) : (\n        <>No contributors to show.</>\n      );\n    }}\n  </Query>\n);\n\nconst MemberList = props => (\n  <Query query={GET_MEMBERS}>\n    {({ loading, error, data }) => {\n      let members;\n      if (error) {\n        members = \"NA\";\n        console.error(`Could not load members: ${error}`);\n      } else if (loading) {\n        members = \"-\";\n      } else {\n        members = data.members.length;\n      }\n      return (\n        <div id=\"member_list\">\n          <Grid columns={16} verticalAlign=\"middle\">\n            <Grid.Column mobile={16} tablet={6} computer={6} textAlign=\"left\" className=\"member_list_header\">\n              <p className=\"subtext\">{members} Members</p>\n            </Grid.Column>\n\n            {/* <Grid.Column mobile={16} tablet={10} computer={10} textAlign=\"right\" className=\"submit_button\">\n              <Link to='/membershipproposalsubmission' className=\"link\">\n                <Button size='large' color='red' disabled={(props.user.status === 'founder') ? true : false}>Membership Proposal</Button>\n              </Link>\n            </Grid.Column> */}\n          </Grid>\n\n          <Grid>\n            <Grid.Column textAlign=\"center\">\n              <LoggedInUser {...props} />\n            </Grid.Column>\n          </Grid>\n          <Grid className=\"member_item\">\n            <Grid.Row>\n              <p style={{ paddingLeft: \"1rem\" }}>Elders (100+ shares)</p>\n            </Grid.Row>\n            <Divider />\n            <Grid.Row className=\"members_row\" centered>\n              <Elders />\n            </Grid.Row>\n          </Grid>\n          <Grid className=\"member_item\">\n            <Grid.Row>\n              <p style={{ paddingLeft: \"1rem\" }}>Contributors</p>\n            </Grid.Row>\n            <Divider />\n            <Grid.Row className=\"members_row\" centered>\n              <Contributors />\n            </Grid.Row>\n          </Grid>\n        </div>\n      );\n    }}\n  </Query>\n);\n\nconst MemberListView = higherProps => (\n  <Switch>\n    <Route exact path=\"/members\" render={props => <MemberList {...props} loggedInUser={higherProps.loggedInUser} />} />\n    <Route path=\"/members/:name\" render={props => <MemberDetail {...props} loggedInUser={higherProps.loggedInUser} />} />\n  </Switch>\n);\n\nexport default MemberListView;\n","import React, { Component } from \"react\";\nimport { Button, Divider, Form, Grid, Input, Segment, GridColumn } from \"semantic-ui-react\";\nimport { getMoloch } from \"../web3\";\nimport { utils } from \"ethers\";\n\nexport default class ProposalSubmission extends Component {\n  state = {\n    address: \"\",\n    title: \"\",\n    description: \"\",\n    shares: \"\",\n    tribute: \"\", // TODO: this will be calculated with the blockchain\n    fieldValidationErrors: { title: \"\", description: \"\", assets: \"\", shares: \"\" },\n    titleValid: false,\n    descriptionValid: false,\n    tributeValid: false,\n    sharesValid: false,\n    addressValid: false,\n    formValid: false\n  };\n\n  async componentDidMount() {\n    const { loggedInUser } = this.props\n    const moloch = await getMoloch(loggedInUser);\n    this.setState({\n      moloch\n    });\n  }\n\n  validateField = (fieldName, value) => {\n    let { fieldValidationErrors, titleValid, descriptionValid, tributeValid, sharesValid, addressValid } = this.state\n\n    switch (fieldName) {\n      case \"title\":\n        titleValid = value !== \"\";\n        fieldValidationErrors.title = titleValid ? \"\" : \"Title is invalid\";\n        break;\n      case \"address\":\n        addressValid = utils.isHexString(value)\n        console.log('utils.isHexString(value): ', utils.isHexString(value));\n        console.log('value: ', value);\n        fieldValidationErrors.address = addressValid ? \"\" : \"Address is invalid\";\n        break\n      case \"description\":\n        descriptionValid = value !== \"\";\n        fieldValidationErrors.description = descriptionValid ? \"\" : \"Description is invalid\";\n        break;\n      case \"shares\":\n        sharesValid = value > 0;\n        fieldValidationErrors.shares = sharesValid ? \"\" : \"Shares is invalid\";\n        break;\n      case \"tribute\":\n        tributeValid = value >= 0;\n        fieldValidationErrors.tribute = tributeValid ? \"\" : \"Tribute is invalid\";\n        break;\n      default:\n        break;\n    }\n    this.setState(\n      {\n        fieldValidationErrors,\n        titleValid,\n        descriptionValid,\n        tributeValid,\n        sharesValid,\n        addressValid\n      },\n      this.validateForm\n    );\n  }\n\n  validateForm = () => {\n    const { titleValid, descriptionValid, sharesValid, tributeValid, addressValid } = this.state\n    this.setState({ formValid: titleValid && descriptionValid && sharesValid && tributeValid && addressValid});\n  }\n\n  handleInput = (event) => {\n    let name = event.target.name;\n    let value = event.target.value;\n    this.setState({ [event.target.name]: event.target.value }, () => {\n      this.validateField(name, value);\n    });\n  }\n\n  handleSubmit = async () => {\n    const { moloch, formValid, address, title, description, shares, tribute } = this.state\n\n    if (formValid) {\n      try {\n        console.log(\"Submitting proposal: \", address, utils.parseEther(tribute).toString(), shares, JSON.stringify({ title, description }))\n        const tx = await moloch.submitProposal(address, utils.parseEther(tribute), shares, JSON.stringify({ title, description }))\n        console.log('tx: ', tx);\n      } catch (e) {\n        console.error(e);\n        alert(\"Error processing proposal\");\n      }\n    } else {\n      alert(\"Please fill any missing fields.\");\n    }\n  }\n\n  render() {\n    const { shares, tribute, title, description, address } = this.state\n    return (\n      <div id=\"proposal_submission\">\n        <Form>\n          <Grid centered columns={16}>\n            <Grid.Row stretched>\n              <Grid.Column mobile={16} tablet={16} computer={12}>\n                <Input\n                  name=\"title\"\n                  transparent\n                  size=\"big\"\n                  inverted\n                  placeholder=\"Proposal Title\"\n                  onChange={this.handleInput}\n                  value={title}\n                />\n                <Divider />\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row stretched>\n              <Grid.Column mobile={16} tablet={16} computer={12}>\n                <Segment className=\"blurred box\">\n                  <Form.Input\n                    name=\"address\"\n                    label=\"Beneficiary or Applicant\"\n                    placeholder=\"Address\"\n                    fluid\n                    onChange={this.handleInput}\n                    value={address}\n                  />\n                  <Form.Input\n                    name=\"shares\"\n                    label=\"Shares Requested\"\n                    placeholder=\"Shares\"\n                    fluid\n                    type=\"number\"\n                    onChange={this.handleInput}\n                    value={shares}\n                  />\n                  <Form.Input\n                    name=\"tribute\"\n                    label=\"Tribute Offered (in ETH)\"\n                    placeholder=\"ETH\"\n                    fluid\n                    type=\"number\"\n                    onChange={this.handleInput}\n                    value={tribute}\n                  />\n                </Segment>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column mobile={16} tablet={16} computer={12}>\n                <Grid columns=\"equal\">\n                  <Grid.Column>\n                    <Segment className=\"blurred box\">\n                      <Form.TextArea\n                        name=\"description\"\n                        label=\"Description\"\n                        placeholder=\"Type here\"\n                        rows={15}\n                        onChange={this.handleInput}\n                        value={description}\n                      />\n                    </Segment>\n                  </Grid.Column>\n                </Grid>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <GridColumn mobile={16} tablet={8} computer={8} className=\"submit_button\">\n                <Button size=\"large\" color=\"red\" onClick={this.handleSubmit}>\n                  Submit Proposal\n                </Button>\n              </GridColumn>\n            </Grid.Row>\n          </Grid>\n        </Form>\n      </div>\n    );\n  }\n}\n","import {\n  determineProposalStatus,\n  inGracePeriod,\n  VOTING_PERIOD_LENGTH,\n  GRACE_PERIOD_LENGTH,\n  inVotingPeriod,\n  inQueue,\n  passedVotingAndGrace\n} from \"./helpers/proposals\";\nimport gql from \"graphql-tag\";\nimport { GET_METADATA } from \"./helpers/graphQlQueries\";\n\nexport const resolvers = {\n  Proposal: {\n    status: (proposal, _args, { cache }) => {\n      const { currentPeriod } = cache.readQuery({ query: GET_METADATA });\n      return determineProposalStatus(proposal, +currentPeriod);\n    },\n    title: proposal => {\n      try {\n        const details = JSON.parse(proposal.details);\n        return details.title || proposal.details || \"\";\n      } catch (e) {\n        console.log(`Could not parse title from proposal.proposalIndex: ${proposal.proposalIndex} proposal.details: ${proposal.details}`);\n        return proposal.details || \"\";\n      }\n    },\n    description: proposal => {\n      try {\n        const details = JSON.parse(proposal.details);\n        return details.description || \"\";\n      } catch (e) {\n        console.log(`Could not parse description from proposal.proposalIndex: ${proposal.proposalIndex} proposal.details: ${proposal.details}`);\n        return \"\";\n      }\n    },\n    gracePeriod: (proposal, _args, { cache }) => {\n      const { currentPeriod } = cache.readQuery({ query: GET_METADATA });\n      if (inGracePeriod(proposal, currentPeriod)) {\n        return +proposal.startingPeriod + VOTING_PERIOD_LENGTH + GRACE_PERIOD_LENGTH - currentPeriod;\n      }\n      return 0;\n    },\n    votingEnds: (proposal, _args, { cache }) => {\n      const { currentPeriod } = cache.readQuery({ query: GET_METADATA });\n      if (inVotingPeriod(proposal, currentPeriod)) {\n        return proposal.startingPeriod + VOTING_PERIOD_LENGTH - currentPeriod;\n      }\n      return 0;\n    },\n    votingStarts: (proposal, _args, { cache }) => {\n      const { currentPeriod } = cache.readQuery({ query: GET_METADATA });\n      if (inQueue(proposal, currentPeriod)) {\n        return proposal.startingPeriod - currentPeriod;\n      }\n      return 0;\n    },\n    readyForProcessing: (proposal, _args, { cache }) => {\n      const { currentPeriod } = cache.readQuery({ query: GET_METADATA });\n      if (passedVotingAndGrace(proposal, currentPeriod) && !proposal.processed) {\n        return true;\n      }\n      return false\n    }\n  },\n  Mutation: {\n    setAttributes: (_, variables, { cache }) => {\n      const id = `Proposal:${variables.id}`;\n      const fragment = gql`\n        fragment getMeta on Proposal {\n          status\n          title\n          description\n          gracePeriod\n          votingEnds\n          votingStarts\n          readyForProcessing\n        }\n      `;\n      const proposal = cache.readFragment({ fragment, id });\n      const data = {\n        ...proposal,\n        status: variables.status,\n        title: variables.title,\n        description: variables.description,\n        gracePeriod: variables.gracePeriod,\n        votingEnds: variables.votingEnds,\n        votingStarts: variables.votingStarts,\n        readyForProcessing: variables.readyForProcessing\n      };\n      cache.writeData({ id, data });\n      return data;\n    }\n  }\n};\n","import gql from \"graphql-tag\";\n\nexport const typeDefs = gql`\n  extend type Proposal {\n    status: String\n    title: String\n    description: String\n    gracePeriod: Number\n    votingEnds: Number\n    votingStarts: Number\n    readyForProcessing: Bool\n  }\n\n  extend type Query {\n    proposalsWithStatus: [Proposal]\n  }\n`;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Background from \"./components/Background\";\nimport Header from \"./components/Header\";\nimport Wrapper from \"./components/Wrapper\";\nimport Home from \"./components/Home\";\nimport ProposalList from \"./components/ProposalList\";\nimport MemberList from \"./components/MemberList\";\nimport ProposalSubmission from \"./components/ProposalSubmission\";\nimport { ApolloProvider, Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { resolvers } from \"./resolvers\";\nimport { typeDefs } from \"./schema\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { GET_METADATA } from \"./helpers/graphQlQueries\";\nimport { getMedianizer, getMoloch, getToken, initWeb3 } from \"./web3\";\nimport { utils } from \"ethers\";\nimport { adopt } from \"react-adopt\";\n\nconsole.log(process.env);\n\nconst cache = new InMemoryCache();\n\nconst client = new ApolloClient({\n  cache,\n  link: new HttpLink({\n    uri: process.env.REACT_APP_GRAPH_NODE_URI\n  }),\n  resolvers,\n  typeDefs\n});\n\nconst initialData = {\n  loggedInUser: \"\",\n  guildBankValue: \"\",\n  shareValue: \"\",\n  totalShares: \"\",\n  currentPeriod: \"\",\n  exchangeRate: \"\"\n};\ncache.writeData({\n  data: { ...initialData, loggedInUser: window.localStorage.getItem(\"loggedInUser\") || \"\" }\n});\nclient.onResetStore(() => cache.writeData({ data: initialData }));\n\nconst IS_LOGGED_IN = gql`\n  query IsUserLoggedIn {\n    loggedInUser @client\n  }\n`;\n\nconst Composed = adopt({\n  loggedInUserData: ({ render }) => <Query query={IS_LOGGED_IN}>{render}</Query>,\n  metadata: ({ render }) => <Query query={GET_METADATA}>{render}</Query>\n});\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      restored: false,\n      exchangeRate: \"0\",\n      totalShares: \"0\",\n      guildBankValue: \"0\"\n    };\n  }\n\n  async componentDidMount() {\n    // await persistor.restore();\n    await this.populateData(true);\n    this.setState({ restored: true });\n  }\n\n  async populateData(refetch) {\n    let {\n      data: { loggedInUser }\n    } = await client.query({\n      query: IS_LOGGED_IN\n    });\n\n    // make sure logged in metamask user is the one that's saved to storage\n    if (loggedInUser) {\n      await initWeb3(client)\n    }\n\n    let {\n      data: { exchangeRate, totalShares, currentPeriod, guildBankValue, shareValue }\n    } = await client.query({\n      query: GET_METADATA\n    });\n\n    if (!exchangeRate || refetch) {\n      const medianizer = await getMedianizer(loggedInUser);\n      exchangeRate = (await medianizer.compute())[0];\n      exchangeRate = utils.bigNumberify(exchangeRate);\n    }\n\n    if (!totalShares || !currentPeriod || refetch) {\n      const moloch = await getMoloch();\n      totalShares = await moloch.totalShares();\n      currentPeriod = await moloch.getCurrentPeriod();\n    }\n\n    const token = await getToken();\n    if (!guildBankValue || refetch) {\n      guildBankValue = await token.balanceOf(process.env.REACT_APP_GUILD_BANK_ADDRESS);\n    }\n\n    if (guildBankValue && totalShares) {\n      const ethPerShare = guildBankValue.gt(0) ? totalShares.toNumber() / parseFloat(utils.formatEther(guildBankValue)) : 0; // in eth\n      shareValue = utils.parseEther(ethPerShare.toString()); // in wei\n    }\n\n    const dataToWrite = {\n      guildBankValue: guildBankValue.toString(),\n      shareValue: shareValue.toString(),\n      totalShares: totalShares.toString(),\n      currentPeriod: currentPeriod.toString(),\n      exchangeRate: exchangeRate.toString()\n    };\n\n    client.writeData({\n      data: dataToWrite\n    });\n  }\n\n  render() {\n    return this.state.restored ? (\n      <ApolloProvider client={client}>\n        <Router basename={process.env.PUBLIC_URL}>\n          <Composed>\n            {({ loggedInUserData, metadata }) => {\n              return (\n                <>\n                  <Background />\n                  <Header loggedInUser={loggedInUserData.data.loggedInUser} client={client} populateData={this.populateData} />\n                  <Wrapper>\n                    <Switch>\n                      <Route\n                        exact\n                        path=\"/\"\n                        render={props => <Home {...props} loggedInUser={loggedInUserData.data.loggedInUser} />}\n                      />\n                      <Route\n                        path=\"/proposals\"\n                        render={props =><ProposalList {...props} loggedInUser={loggedInUserData.data.loggedInUser} />}\n                      />\n                      <Route\n                        path=\"/members\"\n                        render={props => <MemberList {...props} loggedInUser={loggedInUserData.data.loggedInUser} />}\n                      />\n                      <Route\n                        path=\"/proposalsubmission\"\n                        render={props =>\n                          loggedInUserData.data.loggedInUser ? (\n                            <ProposalSubmission {...props} loggedInUser={loggedInUserData.data.loggedInUser} />\n                          ) : (\n                            <Redirect to={{ pathname: \"/\" }} />\n                          )\n                        }\n                      />\n                      <Route\n                        component={props => <Home {...props} loggedInUser={loggedInUserData.data.loggedInUser} />}\n                      />\n                    </Switch>\n                  </Wrapper>\n                </>\n              );\n            }}\n          </Composed>\n        </Router>\n      </ApolloProvider>\n    ) : (\n      <div>Loading!!!</div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport './index.scss';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/hood.ba69d28c.png\";"],"sourceRoot":""}